# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from instill.pipeline.v1alpha import pipeline_pb2 as instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2
from instill.pipeline.v1alpha import pipeline_service_pb2 as instill_dot_pipeline_dot_v1alpha_dot_pipeline__service__pb2


class PipelineServiceStub(object):
    """Pipeline service responds to incoming pipeline requests.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Liveness = channel.unary_unary(
                '/instill.pipeline.v1alpha.PipelineService/Liveness',
                request_serializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__service__pb2.LivenessRequest.SerializeToString,
                response_deserializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__service__pb2.LivenessResponse.FromString,
                )
        self.Readiness = channel.unary_unary(
                '/instill.pipeline.v1alpha.PipelineService/Readiness',
                request_serializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__service__pb2.ReadinessRequest.SerializeToString,
                response_deserializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__service__pb2.ReadinessResponse.FromString,
                )
        self.CreatePipeline = channel.unary_unary(
                '/instill.pipeline.v1alpha.PipelineService/CreatePipeline',
                request_serializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.CreatePipelineRequest.SerializeToString,
                response_deserializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.CreatePipelineResponse.FromString,
                )
        self.ListPipeline = channel.unary_unary(
                '/instill.pipeline.v1alpha.PipelineService/ListPipeline',
                request_serializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListPipelineRequest.SerializeToString,
                response_deserializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListPipelineResponse.FromString,
                )
        self.GetPipeline = channel.unary_unary(
                '/instill.pipeline.v1alpha.PipelineService/GetPipeline',
                request_serializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetPipelineRequest.SerializeToString,
                response_deserializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetPipelineResponse.FromString,
                )
        self.UpdatePipeline = channel.unary_unary(
                '/instill.pipeline.v1alpha.PipelineService/UpdatePipeline',
                request_serializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.UpdatePipelineRequest.SerializeToString,
                response_deserializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.UpdatePipelineResponse.FromString,
                )
        self.DeletePipeline = channel.unary_unary(
                '/instill.pipeline.v1alpha.PipelineService/DeletePipeline',
                request_serializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeletePipelineRequest.SerializeToString,
                response_deserializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeletePipelineResponse.FromString,
                )
        self.ActivatePipeline = channel.unary_unary(
                '/instill.pipeline.v1alpha.PipelineService/ActivatePipeline',
                request_serializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ActivatePipelineRequest.SerializeToString,
                response_deserializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ActivatePipelineResponse.FromString,
                )
        self.DeactivatePipeline = channel.unary_unary(
                '/instill.pipeline.v1alpha.PipelineService/DeactivatePipeline',
                request_serializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeactivatePipelineRequest.SerializeToString,
                response_deserializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeactivatePipelineResponse.FromString,
                )
        self.RenamePipeline = channel.unary_unary(
                '/instill.pipeline.v1alpha.PipelineService/RenamePipeline',
                request_serializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RenamePipelineRequest.SerializeToString,
                response_deserializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RenamePipelineResponse.FromString,
                )
        self.TriggerPipeline = channel.unary_unary(
                '/instill.pipeline.v1alpha.PipelineService/TriggerPipeline',
                request_serializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerPipelineRequest.SerializeToString,
                response_deserializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerPipelineResponse.FromString,
                )
        self.TriggerPipelineBinaryFileUpload = channel.stream_unary(
                '/instill.pipeline.v1alpha.PipelineService/TriggerPipelineBinaryFileUpload',
                request_serializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerPipelineBinaryFileUploadRequest.SerializeToString,
                response_deserializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerPipelineBinaryFileUploadResponse.FromString,
                )


class PipelineServiceServicer(object):
    """Pipeline service responds to incoming pipeline requests.
    """

    def Liveness(self, request, context):
        """Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Readiness(self, request, context):
        """Readiness method receives a ReadinessRequest message and returns a
        ReadinessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePipeline(self, request, context):
        """CreatePipeline method receives a CreatePipelineRequest message and returns
        a CreatePipelineResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPipeline(self, request, context):
        """ListPipeline method receives a ListPipelineRequest message and returns a
        ListPipelineResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPipeline(self, request, context):
        """GetPipeline method receives a GetPipelineRequest message and returns a
        GetPipelineResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePipeline(self, request, context):
        """UpdatePipeline method receives a UpdatePipelineRequest message and returns
        a UpdatePipelineResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePipeline(self, request, context):
        """DeletePipeline method receives a DeletePipelineRequest message and returns
        a DeletePipelineResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ActivatePipeline(self, request, context):
        """Activate a pipeline.
        The `state` of the pipeline after activating is `ACTIVE`.
        ActivatePipeline` can be called on Pipelines in the state `INACTIVE`;
        Pipelines in a different state (including `ACTIVE`) returns an error.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeactivatePipeline(self, request, context):
        """Deactivate a pipeline.
        The `state` of the pipeline after inactivating is `INACTIVE`.
        DeactivatePipeline` can be called on Pipelines in the state `ACTIVE`;
        Pipelines in a different state (including `INACTIVE`) returns an error.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenamePipeline(self, request, context):
        """RenamePipeline method receives a RenamePipelineRequest message and returns
        a RenamePipelineResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerPipeline(self, request, context):
        """TriggerPipeline method receives a TriggerPipelineRequest message and
        returns a TriggerPipelineResponse.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerPipelineBinaryFileUpload(self, request_iterator, context):
        """TriggerPipelineBinaryFileUpload method receives a
        TriggerPipelineBinaryFileUploadRequest message and returns a
        TriggerPipelineBinaryFileUploadResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PipelineServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Liveness': grpc.unary_unary_rpc_method_handler(
                    servicer.Liveness,
                    request_deserializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__service__pb2.LivenessRequest.FromString,
                    response_serializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__service__pb2.LivenessResponse.SerializeToString,
            ),
            'Readiness': grpc.unary_unary_rpc_method_handler(
                    servicer.Readiness,
                    request_deserializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__service__pb2.ReadinessRequest.FromString,
                    response_serializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__service__pb2.ReadinessResponse.SerializeToString,
            ),
            'CreatePipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePipeline,
                    request_deserializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.CreatePipelineRequest.FromString,
                    response_serializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.CreatePipelineResponse.SerializeToString,
            ),
            'ListPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPipeline,
                    request_deserializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListPipelineRequest.FromString,
                    response_serializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListPipelineResponse.SerializeToString,
            ),
            'GetPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPipeline,
                    request_deserializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetPipelineRequest.FromString,
                    response_serializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetPipelineResponse.SerializeToString,
            ),
            'UpdatePipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePipeline,
                    request_deserializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.UpdatePipelineRequest.FromString,
                    response_serializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.UpdatePipelineResponse.SerializeToString,
            ),
            'DeletePipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePipeline,
                    request_deserializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeletePipelineRequest.FromString,
                    response_serializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeletePipelineResponse.SerializeToString,
            ),
            'ActivatePipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.ActivatePipeline,
                    request_deserializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ActivatePipelineRequest.FromString,
                    response_serializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ActivatePipelineResponse.SerializeToString,
            ),
            'DeactivatePipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.DeactivatePipeline,
                    request_deserializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeactivatePipelineRequest.FromString,
                    response_serializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeactivatePipelineResponse.SerializeToString,
            ),
            'RenamePipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.RenamePipeline,
                    request_deserializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RenamePipelineRequest.FromString,
                    response_serializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RenamePipelineResponse.SerializeToString,
            ),
            'TriggerPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerPipeline,
                    request_deserializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerPipelineRequest.FromString,
                    response_serializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerPipelineResponse.SerializeToString,
            ),
            'TriggerPipelineBinaryFileUpload': grpc.stream_unary_rpc_method_handler(
                    servicer.TriggerPipelineBinaryFileUpload,
                    request_deserializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerPipelineBinaryFileUploadRequest.FromString,
                    response_serializer=instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerPipelineBinaryFileUploadResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'instill.pipeline.v1alpha.PipelineService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PipelineService(object):
    """Pipeline service responds to incoming pipeline requests.
    """

    @staticmethod
    def Liveness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/instill.pipeline.v1alpha.PipelineService/Liveness',
            instill_dot_pipeline_dot_v1alpha_dot_pipeline__service__pb2.LivenessRequest.SerializeToString,
            instill_dot_pipeline_dot_v1alpha_dot_pipeline__service__pb2.LivenessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Readiness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/instill.pipeline.v1alpha.PipelineService/Readiness',
            instill_dot_pipeline_dot_v1alpha_dot_pipeline__service__pb2.ReadinessRequest.SerializeToString,
            instill_dot_pipeline_dot_v1alpha_dot_pipeline__service__pb2.ReadinessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreatePipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/instill.pipeline.v1alpha.PipelineService/CreatePipeline',
            instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.CreatePipelineRequest.SerializeToString,
            instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.CreatePipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/instill.pipeline.v1alpha.PipelineService/ListPipeline',
            instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListPipelineRequest.SerializeToString,
            instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/instill.pipeline.v1alpha.PipelineService/GetPipeline',
            instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetPipelineRequest.SerializeToString,
            instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/instill.pipeline.v1alpha.PipelineService/UpdatePipeline',
            instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.UpdatePipelineRequest.SerializeToString,
            instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.UpdatePipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/instill.pipeline.v1alpha.PipelineService/DeletePipeline',
            instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeletePipelineRequest.SerializeToString,
            instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeletePipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ActivatePipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/instill.pipeline.v1alpha.PipelineService/ActivatePipeline',
            instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ActivatePipelineRequest.SerializeToString,
            instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ActivatePipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeactivatePipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/instill.pipeline.v1alpha.PipelineService/DeactivatePipeline',
            instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeactivatePipelineRequest.SerializeToString,
            instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeactivatePipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenamePipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/instill.pipeline.v1alpha.PipelineService/RenamePipeline',
            instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RenamePipelineRequest.SerializeToString,
            instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RenamePipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/instill.pipeline.v1alpha.PipelineService/TriggerPipeline',
            instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerPipelineRequest.SerializeToString,
            instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerPipelineBinaryFileUpload(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/instill.pipeline.v1alpha.PipelineService/TriggerPipelineBinaryFileUpload',
            instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerPipelineBinaryFileUploadRequest.SerializeToString,
            instill_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerPipelineBinaryFileUploadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
