"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import collections.abc
import grpc
import grpc.aio
import pipeline.pipeline.v1beta.integration_pb2
import pipeline.pipeline.v1beta.pipeline_pb2
import typing

_T = typing.TypeVar('_T')

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta):
    ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore
    ...

class PipelinePrivateServiceStub:
    """PipelinePrivateService defines private methods to interact with Pipeline
    resources.
    """

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    ListPipelinesAdmin: grpc.UnaryUnaryMultiCallable[
        pipeline.pipeline.v1beta.pipeline_pb2.ListPipelinesAdminRequest,
        pipeline.pipeline.v1beta.pipeline_pb2.ListPipelinesAdminResponse,
    ]
    """List pipelines (admin only)

    This *private* method allows internal clients to list *all* pipeline
    resources.
    """
    LookUpPipelineAdmin: grpc.UnaryUnaryMultiCallable[
        pipeline.pipeline.v1beta.pipeline_pb2.LookUpPipelineAdminRequest,
        pipeline.pipeline.v1beta.pipeline_pb2.LookUpPipelineAdminResponse,
    ]
    """Get a pipeline by UID (admin only)

    This *private* method allows internal clients to access any pipeline
    resource by UID.
    """
    ListPipelineReleasesAdmin: grpc.UnaryUnaryMultiCallable[
        pipeline.pipeline.v1beta.pipeline_pb2.ListPipelineReleasesAdminRequest,
        pipeline.pipeline.v1beta.pipeline_pb2.ListPipelineReleasesAdminResponse,
    ]
    """List pipeline releases (admin only)

    This *private* method allows admin users to list *all* pipeline releases.
    """
    LookUpConnectionAdmin: grpc.UnaryUnaryMultiCallable[
        pipeline.pipeline.v1beta.integration_pb2.LookUpConnectionAdminRequest,
        pipeline.pipeline.v1beta.integration_pb2.LookUpConnectionAdminResponse,
    ]
    """Get a connection by UID (admin only)

    This *private* method allows internal clients to access any connection
    resource by UID.
    """

class PipelinePrivateServiceAsyncStub:
    """PipelinePrivateService defines private methods to interact with Pipeline
    resources.
    """

    ListPipelinesAdmin: grpc.aio.UnaryUnaryMultiCallable[
        pipeline.pipeline.v1beta.pipeline_pb2.ListPipelinesAdminRequest,
        pipeline.pipeline.v1beta.pipeline_pb2.ListPipelinesAdminResponse,
    ]
    """List pipelines (admin only)

    This *private* method allows internal clients to list *all* pipeline
    resources.
    """
    LookUpPipelineAdmin: grpc.aio.UnaryUnaryMultiCallable[
        pipeline.pipeline.v1beta.pipeline_pb2.LookUpPipelineAdminRequest,
        pipeline.pipeline.v1beta.pipeline_pb2.LookUpPipelineAdminResponse,
    ]
    """Get a pipeline by UID (admin only)

    This *private* method allows internal clients to access any pipeline
    resource by UID.
    """
    ListPipelineReleasesAdmin: grpc.aio.UnaryUnaryMultiCallable[
        pipeline.pipeline.v1beta.pipeline_pb2.ListPipelineReleasesAdminRequest,
        pipeline.pipeline.v1beta.pipeline_pb2.ListPipelineReleasesAdminResponse,
    ]
    """List pipeline releases (admin only)

    This *private* method allows admin users to list *all* pipeline releases.
    """
    LookUpConnectionAdmin: grpc.aio.UnaryUnaryMultiCallable[
        pipeline.pipeline.v1beta.integration_pb2.LookUpConnectionAdminRequest,
        pipeline.pipeline.v1beta.integration_pb2.LookUpConnectionAdminResponse,
    ]
    """Get a connection by UID (admin only)

    This *private* method allows internal clients to access any connection
    resource by UID.
    """

class PipelinePrivateServiceServicer(metaclass=abc.ABCMeta):
    """PipelinePrivateService defines private methods to interact with Pipeline
    resources.
    """

    @abc.abstractmethod
    def ListPipelinesAdmin(
        self,
        request: pipeline.pipeline.v1beta.pipeline_pb2.ListPipelinesAdminRequest,
        context: _ServicerContext,
    ) -> typing.Union[pipeline.pipeline.v1beta.pipeline_pb2.ListPipelinesAdminResponse, collections.abc.Awaitable[pipeline.pipeline.v1beta.pipeline_pb2.ListPipelinesAdminResponse]]:
        """List pipelines (admin only)

        This *private* method allows internal clients to list *all* pipeline
        resources.
        """
    @abc.abstractmethod
    def LookUpPipelineAdmin(
        self,
        request: pipeline.pipeline.v1beta.pipeline_pb2.LookUpPipelineAdminRequest,
        context: _ServicerContext,
    ) -> typing.Union[pipeline.pipeline.v1beta.pipeline_pb2.LookUpPipelineAdminResponse, collections.abc.Awaitable[pipeline.pipeline.v1beta.pipeline_pb2.LookUpPipelineAdminResponse]]:
        """Get a pipeline by UID (admin only)

        This *private* method allows internal clients to access any pipeline
        resource by UID.
        """
    @abc.abstractmethod
    def ListPipelineReleasesAdmin(
        self,
        request: pipeline.pipeline.v1beta.pipeline_pb2.ListPipelineReleasesAdminRequest,
        context: _ServicerContext,
    ) -> typing.Union[pipeline.pipeline.v1beta.pipeline_pb2.ListPipelineReleasesAdminResponse, collections.abc.Awaitable[pipeline.pipeline.v1beta.pipeline_pb2.ListPipelineReleasesAdminResponse]]:
        """List pipeline releases (admin only)

        This *private* method allows admin users to list *all* pipeline releases.
        """
    @abc.abstractmethod
    def LookUpConnectionAdmin(
        self,
        request: pipeline.pipeline.v1beta.integration_pb2.LookUpConnectionAdminRequest,
        context: _ServicerContext,
    ) -> typing.Union[pipeline.pipeline.v1beta.integration_pb2.LookUpConnectionAdminResponse, collections.abc.Awaitable[pipeline.pipeline.v1beta.integration_pb2.LookUpConnectionAdminResponse]]:
        """Get a connection by UID (admin only)

        This *private* method allows internal clients to access any connection
        resource by UID.
        """

def add_PipelinePrivateServiceServicer_to_server(servicer: PipelinePrivateServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
