"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import collections.abc
import grpc
import grpc.aio
import model.ray.v1alpha.user_defined_pb2
import typing

_T = typing.TypeVar('_T')

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta):
    ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore
    ...

class UserDefinedServiceStub:
    """User defined service for internal process"""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    __call__: grpc.UnaryUnaryMultiCallable[
        model.ray.v1alpha.user_defined_pb2.CallRequest,
        model.ray.v1alpha.user_defined_pb2.CallResponse,
    ]
    """Trigger method is the default trigger entry for ray deployment
    Ray doesn't comply with the naming convention of protobuf, so we need to
    buf:lint:ignore RPC_PASCAL_CASE
    """

class UserDefinedServiceAsyncStub:
    """User defined service for internal process"""

    __call__: grpc.aio.UnaryUnaryMultiCallable[
        model.ray.v1alpha.user_defined_pb2.CallRequest,
        model.ray.v1alpha.user_defined_pb2.CallResponse,
    ]
    """Trigger method is the default trigger entry for ray deployment
    Ray doesn't comply with the naming convention of protobuf, so we need to
    buf:lint:ignore RPC_PASCAL_CASE
    """

class UserDefinedServiceServicer(metaclass=abc.ABCMeta):
    """User defined service for internal process"""

    @abc.abstractmethod
    def __call__(
        self,
        request: model.ray.v1alpha.user_defined_pb2.CallRequest,
        context: _ServicerContext,
    ) -> typing.Union[model.ray.v1alpha.user_defined_pb2.CallResponse, collections.abc.Awaitable[model.ray.v1alpha.user_defined_pb2.CallResponse]]:
        """Trigger method is the default trigger entry for ray deployment
        Ray doesn't comply with the naming convention of protobuf, so we need to
        buf:lint:ignore RPC_PASCAL_CASE
        """

def add_UserDefinedServiceServicer_to_server(servicer: UserDefinedServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
