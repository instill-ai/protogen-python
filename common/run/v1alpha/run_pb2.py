# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/run/v1alpha/run.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1c\x63ommon/run/v1alpha/run.proto\x12\x12\x63ommon.run.v1alpha*\x8a\x01\n\tRunStatus\x12\x1a\n\x16RUN_STATUS_UNSPECIFIED\x10\x00\x12\x19\n\x15RUN_STATUS_PROCESSING\x10\x01\x12\x18\n\x14RUN_STATUS_COMPLETED\x10\x02\x12\x15\n\x11RUN_STATUS_FAILED\x10\x03\x12\x15\n\x11RUN_STATUS_QUEUED\x10\x04*S\n\tRunSource\x12\x1a\n\x16RUN_SOURCE_UNSPECIFIED\x10\x00\x12\x16\n\x12RUN_SOURCE_CONSOLE\x10\x01\x12\x12\n\x0eRUN_SOURCE_API\x10\x02\x42\xcd\x01\n\x16\x63om.common.run.v1alphaB\x08RunProtoP\x01Z?github.com/instill-ai/protogen-go/common/run/v1alpha;runv1alpha\xa2\x02\x03\x43RX\xaa\x02\x12\x43ommon.Run.V1alpha\xca\x02\x12\x43ommon\\Run\\V1alpha\xe2\x02\x1e\x43ommon\\Run\\V1alpha\\GPBMetadata\xea\x02\x14\x43ommon::Run::V1alphab\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'common.run.v1alpha.run_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\026com.common.run.v1alphaB\010RunProtoP\001Z?github.com/instill-ai/protogen-go/common/run/v1alpha;runv1alpha\242\002\003CRX\252\002\022Common.Run.V1alpha\312\002\022Common\\Run\\V1alpha\342\002\036Common\\Run\\V1alpha\\GPBMetadata\352\002\024Common::Run::V1alpha'
  _globals['_RUNSTATUS']._serialized_start=53
  _globals['_RUNSTATUS']._serialized_end=191
  _globals['_RUNSOURCE']._serialized_start=193
  _globals['_RUNSOURCE']._serialized_end=276
# @@protoc_insertion_point(module_scope)
