# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from vdp.billing.v1alpha import healthcheck_pb2 as vdp_dot_billing_dot_v1alpha_dot_healthcheck__pb2
from vdp.billing.v1alpha import plan_pb2 as vdp_dot_billing_dot_v1alpha_dot_plan__pb2


class PlanServiceStub(object):
    """Plan service responds to incoming billing plan requests.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Liveness = channel.unary_unary(
                '/vdp.billing.v1alpha.PlanService/Liveness',
                request_serializer=vdp_dot_billing_dot_v1alpha_dot_healthcheck__pb2.LivenessRequest.SerializeToString,
                response_deserializer=vdp_dot_billing_dot_v1alpha_dot_healthcheck__pb2.LivenessResponse.FromString,
                )
        self.Readiness = channel.unary_unary(
                '/vdp.billing.v1alpha.PlanService/Readiness',
                request_serializer=vdp_dot_billing_dot_v1alpha_dot_healthcheck__pb2.ReadinessRequest.SerializeToString,
                response_deserializer=vdp_dot_billing_dot_v1alpha_dot_healthcheck__pb2.ReadinessResponse.FromString,
                )
        self.ListPlan = channel.unary_unary(
                '/vdp.billing.v1alpha.PlanService/ListPlan',
                request_serializer=vdp_dot_billing_dot_v1alpha_dot_plan__pb2.ListPlanRequest.SerializeToString,
                response_deserializer=vdp_dot_billing_dot_v1alpha_dot_plan__pb2.ListPlanResponse.FromString,
                )
        self.CreatePlan = channel.unary_unary(
                '/vdp.billing.v1alpha.PlanService/CreatePlan',
                request_serializer=vdp_dot_billing_dot_v1alpha_dot_plan__pb2.CreatePlanRequest.SerializeToString,
                response_deserializer=vdp_dot_billing_dot_v1alpha_dot_plan__pb2.CreatePlanResponse.FromString,
                )
        self.GetPlan = channel.unary_unary(
                '/vdp.billing.v1alpha.PlanService/GetPlan',
                request_serializer=vdp_dot_billing_dot_v1alpha_dot_plan__pb2.GetPlanRequest.SerializeToString,
                response_deserializer=vdp_dot_billing_dot_v1alpha_dot_plan__pb2.GetPlanResponse.FromString,
                )
        self.UpdatePlan = channel.unary_unary(
                '/vdp.billing.v1alpha.PlanService/UpdatePlan',
                request_serializer=vdp_dot_billing_dot_v1alpha_dot_plan__pb2.UpdatePlanRequest.SerializeToString,
                response_deserializer=vdp_dot_billing_dot_v1alpha_dot_plan__pb2.UpdatePlanResponse.FromString,
                )
        self.DeletePlan = channel.unary_unary(
                '/vdp.billing.v1alpha.PlanService/DeletePlan',
                request_serializer=vdp_dot_billing_dot_v1alpha_dot_plan__pb2.DeletePlanRequest.SerializeToString,
                response_deserializer=vdp_dot_billing_dot_v1alpha_dot_plan__pb2.DeletePlanResponse.FromString,
                )
        self.LookUpPlan = channel.unary_unary(
                '/vdp.billing.v1alpha.PlanService/LookUpPlan',
                request_serializer=vdp_dot_billing_dot_v1alpha_dot_plan__pb2.LookUpPlanRequest.SerializeToString,
                response_deserializer=vdp_dot_billing_dot_v1alpha_dot_plan__pb2.LookUpPlanResponse.FromString,
                )


class PlanServiceServicer(object):
    """Plan service responds to incoming billing plan requests.
    """

    def Liveness(self, request, context):
        """Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Readiness(self, request, context):
        """Readiness method receives a ReadinessRequest message and returns a
        ReadinessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPlan(self, request, context):
        """========== Admin API: create, get, update and delete billing plans

        ListPlan method receives a ListPlanRequest message and returns a
        ListPlanResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePlan(self, request, context):
        """CreatePlan receives a CreatePlanRequest message and returns a
        aGetPlanResponses
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlan(self, request, context):
        """GetPlan method receives a GetPlanRequest message and returns
        a GetPlanResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePlan(self, request, context):
        """UpdatePlan method receives a UpdatePlanRequest message and returns
        a UpdatePlanResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePlan(self, request, context):
        """DeletePlan method receives a DeletePlanRequest message and returns a
        DeletePlanResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookUpPlan(self, request, context):
        """LookUpPlan method receives a LookUpPlanRequest message and returns a
        LookUpPlanResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PlanServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Liveness': grpc.unary_unary_rpc_method_handler(
                    servicer.Liveness,
                    request_deserializer=vdp_dot_billing_dot_v1alpha_dot_healthcheck__pb2.LivenessRequest.FromString,
                    response_serializer=vdp_dot_billing_dot_v1alpha_dot_healthcheck__pb2.LivenessResponse.SerializeToString,
            ),
            'Readiness': grpc.unary_unary_rpc_method_handler(
                    servicer.Readiness,
                    request_deserializer=vdp_dot_billing_dot_v1alpha_dot_healthcheck__pb2.ReadinessRequest.FromString,
                    response_serializer=vdp_dot_billing_dot_v1alpha_dot_healthcheck__pb2.ReadinessResponse.SerializeToString,
            ),
            'ListPlan': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPlan,
                    request_deserializer=vdp_dot_billing_dot_v1alpha_dot_plan__pb2.ListPlanRequest.FromString,
                    response_serializer=vdp_dot_billing_dot_v1alpha_dot_plan__pb2.ListPlanResponse.SerializeToString,
            ),
            'CreatePlan': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePlan,
                    request_deserializer=vdp_dot_billing_dot_v1alpha_dot_plan__pb2.CreatePlanRequest.FromString,
                    response_serializer=vdp_dot_billing_dot_v1alpha_dot_plan__pb2.CreatePlanResponse.SerializeToString,
            ),
            'GetPlan': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlan,
                    request_deserializer=vdp_dot_billing_dot_v1alpha_dot_plan__pb2.GetPlanRequest.FromString,
                    response_serializer=vdp_dot_billing_dot_v1alpha_dot_plan__pb2.GetPlanResponse.SerializeToString,
            ),
            'UpdatePlan': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePlan,
                    request_deserializer=vdp_dot_billing_dot_v1alpha_dot_plan__pb2.UpdatePlanRequest.FromString,
                    response_serializer=vdp_dot_billing_dot_v1alpha_dot_plan__pb2.UpdatePlanResponse.SerializeToString,
            ),
            'DeletePlan': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePlan,
                    request_deserializer=vdp_dot_billing_dot_v1alpha_dot_plan__pb2.DeletePlanRequest.FromString,
                    response_serializer=vdp_dot_billing_dot_v1alpha_dot_plan__pb2.DeletePlanResponse.SerializeToString,
            ),
            'LookUpPlan': grpc.unary_unary_rpc_method_handler(
                    servicer.LookUpPlan,
                    request_deserializer=vdp_dot_billing_dot_v1alpha_dot_plan__pb2.LookUpPlanRequest.FromString,
                    response_serializer=vdp_dot_billing_dot_v1alpha_dot_plan__pb2.LookUpPlanResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'vdp.billing.v1alpha.PlanService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PlanService(object):
    """Plan service responds to incoming billing plan requests.
    """

    @staticmethod
    def Liveness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.billing.v1alpha.PlanService/Liveness',
            vdp_dot_billing_dot_v1alpha_dot_healthcheck__pb2.LivenessRequest.SerializeToString,
            vdp_dot_billing_dot_v1alpha_dot_healthcheck__pb2.LivenessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Readiness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.billing.v1alpha.PlanService/Readiness',
            vdp_dot_billing_dot_v1alpha_dot_healthcheck__pb2.ReadinessRequest.SerializeToString,
            vdp_dot_billing_dot_v1alpha_dot_healthcheck__pb2.ReadinessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPlan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.billing.v1alpha.PlanService/ListPlan',
            vdp_dot_billing_dot_v1alpha_dot_plan__pb2.ListPlanRequest.SerializeToString,
            vdp_dot_billing_dot_v1alpha_dot_plan__pb2.ListPlanResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreatePlan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.billing.v1alpha.PlanService/CreatePlan',
            vdp_dot_billing_dot_v1alpha_dot_plan__pb2.CreatePlanRequest.SerializeToString,
            vdp_dot_billing_dot_v1alpha_dot_plan__pb2.CreatePlanResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPlan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.billing.v1alpha.PlanService/GetPlan',
            vdp_dot_billing_dot_v1alpha_dot_plan__pb2.GetPlanRequest.SerializeToString,
            vdp_dot_billing_dot_v1alpha_dot_plan__pb2.GetPlanResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePlan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.billing.v1alpha.PlanService/UpdatePlan',
            vdp_dot_billing_dot_v1alpha_dot_plan__pb2.UpdatePlanRequest.SerializeToString,
            vdp_dot_billing_dot_v1alpha_dot_plan__pb2.UpdatePlanResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePlan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.billing.v1alpha.PlanService/DeletePlan',
            vdp_dot_billing_dot_v1alpha_dot_plan__pb2.DeletePlanRequest.SerializeToString,
            vdp_dot_billing_dot_v1alpha_dot_plan__pb2.DeletePlanResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LookUpPlan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.billing.v1alpha.PlanService/LookUpPlan',
            vdp_dot_billing_dot_v1alpha_dot_plan__pb2.LookUpPlanRequest.SerializeToString,
            vdp_dot_billing_dot_v1alpha_dot_plan__pb2.LookUpPlanResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
