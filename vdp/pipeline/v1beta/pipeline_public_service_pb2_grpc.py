# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from vdp.pipeline.v1beta import connector_definition_pb2 as vdp_dot_pipeline_dot_v1beta_dot_connector__definition__pb2
from vdp.pipeline.v1beta import connector_pb2 as vdp_dot_pipeline_dot_v1beta_dot_connector__pb2
from vdp.pipeline.v1beta import operator_definition_pb2 as vdp_dot_pipeline_dot_v1beta_dot_operator__definition__pb2
from vdp.pipeline.v1beta import pipeline_pb2 as vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2


class PipelinePublicServiceStub(object):
    """VDP

    PipelinePublicService exposes the public VDP endpoints that allow clients to
    manage pipelines.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Liveness = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/Liveness',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.LivenessRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.LivenessResponse.FromString,
                )
        self.Readiness = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/Readiness',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ReadinessRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ReadinessResponse.FromString,
                )
        self.ListPipelines = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListPipelines',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListPipelinesRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListPipelinesResponse.FromString,
                )
        self.LookUpPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/LookUpPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.LookUpPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.LookUpPipelineResponse.FromString,
                )
        self.CreateUserPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/CreateUserPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateUserPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateUserPipelineResponse.FromString,
                )
        self.ListUserPipelines = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListUserPipelines',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListUserPipelinesRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListUserPipelinesResponse.FromString,
                )
        self.GetUserPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/GetUserPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetUserPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetUserPipelineResponse.FromString,
                )
        self.UpdateUserPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/UpdateUserPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateUserPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateUserPipelineResponse.FromString,
                )
        self.DeleteUserPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/DeleteUserPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteUserPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteUserPipelineResponse.FromString,
                )
        self.ValidateUserPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ValidateUserPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateUserPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateUserPipelineResponse.FromString,
                )
        self.RenameUserPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/RenameUserPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameUserPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameUserPipelineResponse.FromString,
                )
        self.TriggerUserPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/TriggerUserPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineResponse.FromString,
                )
        self.TriggerAsyncUserPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/TriggerAsyncUserPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncUserPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncUserPipelineResponse.FromString,
                )
        self.CreateUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/CreateUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateUserPipelineReleaseResponse.FromString,
                )
        self.ListUserPipelineReleases = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListUserPipelineReleases',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListUserPipelineReleasesRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListUserPipelineReleasesResponse.FromString,
                )
        self.GetUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/GetUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetUserPipelineReleaseResponse.FromString,
                )
        self.UpdateUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/UpdateUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateUserPipelineReleaseResponse.FromString,
                )
        self.DeleteUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/DeleteUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteUserPipelineReleaseResponse.FromString,
                )
        self.RestoreUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/RestoreUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RestoreUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RestoreUserPipelineReleaseResponse.FromString,
                )
        self.WatchUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/WatchUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.WatchUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.WatchUserPipelineReleaseResponse.FromString,
                )
        self.RenameUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/RenameUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameUserPipelineReleaseResponse.FromString,
                )
        self.TriggerUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/TriggerUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineReleaseResponse.FromString,
                )
        self.TriggerAsyncUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/TriggerAsyncUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncUserPipelineReleaseResponse.FromString,
                )
        self.CreateOrganizationPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/CreateOrganizationPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateOrganizationPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateOrganizationPipelineResponse.FromString,
                )
        self.ListOrganizationPipelines = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListOrganizationPipelines',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListOrganizationPipelinesRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListOrganizationPipelinesResponse.FromString,
                )
        self.GetOrganizationPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/GetOrganizationPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOrganizationPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOrganizationPipelineResponse.FromString,
                )
        self.UpdateOrganizationPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/UpdateOrganizationPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateOrganizationPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateOrganizationPipelineResponse.FromString,
                )
        self.DeleteOrganizationPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/DeleteOrganizationPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteOrganizationPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteOrganizationPipelineResponse.FromString,
                )
        self.ValidateOrganizationPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ValidateOrganizationPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateOrganizationPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateOrganizationPipelineResponse.FromString,
                )
        self.RenameOrganizationPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/RenameOrganizationPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameOrganizationPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameOrganizationPipelineResponse.FromString,
                )
        self.TriggerOrganizationPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/TriggerOrganizationPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineResponse.FromString,
                )
        self.TriggerAsyncOrganizationPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/TriggerAsyncOrganizationPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncOrganizationPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncOrganizationPipelineResponse.FromString,
                )
        self.CreateOrganizationPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/CreateOrganizationPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateOrganizationPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateOrganizationPipelineReleaseResponse.FromString,
                )
        self.ListOrganizationPipelineReleases = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListOrganizationPipelineReleases',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListOrganizationPipelineReleasesRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListOrganizationPipelineReleasesResponse.FromString,
                )
        self.GetOrganizationPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/GetOrganizationPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOrganizationPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOrganizationPipelineReleaseResponse.FromString,
                )
        self.UpdateOrganizationPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/UpdateOrganizationPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateOrganizationPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateOrganizationPipelineReleaseResponse.FromString,
                )
        self.DeleteOrganizationPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/DeleteOrganizationPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteOrganizationPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteOrganizationPipelineReleaseResponse.FromString,
                )
        self.RestoreOrganizationPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/RestoreOrganizationPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RestoreOrganizationPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RestoreOrganizationPipelineReleaseResponse.FromString,
                )
        self.WatchOrganizationPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/WatchOrganizationPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.WatchOrganizationPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.WatchOrganizationPipelineReleaseResponse.FromString,
                )
        self.RenameOrganizationPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/RenameOrganizationPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameOrganizationPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameOrganizationPipelineReleaseResponse.FromString,
                )
        self.TriggerOrganizationPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/TriggerOrganizationPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineReleaseResponse.FromString,
                )
        self.TriggerAsyncOrganizationPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/TriggerAsyncOrganizationPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncOrganizationPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncOrganizationPipelineReleaseResponse.FromString,
                )
        self.GetOperation = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/GetOperation',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOperationRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOperationResponse.FromString,
                )
        self.ListConnectorDefinitions = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListConnectorDefinitions',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__definition__pb2.ListConnectorDefinitionsRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__definition__pb2.ListConnectorDefinitionsResponse.FromString,
                )
        self.GetConnectorDefinition = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/GetConnectorDefinition',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__definition__pb2.GetConnectorDefinitionRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__definition__pb2.GetConnectorDefinitionResponse.FromString,
                )
        self.ListOperatorDefinitions = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListOperatorDefinitions',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_operator__definition__pb2.ListOperatorDefinitionsRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_operator__definition__pb2.ListOperatorDefinitionsResponse.FromString,
                )
        self.GetOperatorDefinition = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/GetOperatorDefinition',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_operator__definition__pb2.GetOperatorDefinitionRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_operator__definition__pb2.GetOperatorDefinitionResponse.FromString,
                )
        self.ListConnectors = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListConnectors',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ListConnectorsRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ListConnectorsResponse.FromString,
                )
        self.LookUpConnector = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/LookUpConnector',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.LookUpConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.LookUpConnectorResponse.FromString,
                )
        self.CreateUserConnector = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/CreateUserConnector',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.CreateUserConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.CreateUserConnectorResponse.FromString,
                )
        self.ListUserConnectors = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListUserConnectors',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ListUserConnectorsRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ListUserConnectorsResponse.FromString,
                )
        self.GetUserConnector = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/GetUserConnector',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.GetUserConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.GetUserConnectorResponse.FromString,
                )
        self.UpdateUserConnector = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/UpdateUserConnector',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.UpdateUserConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.UpdateUserConnectorResponse.FromString,
                )
        self.DeleteUserConnector = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/DeleteUserConnector',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.DeleteUserConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.DeleteUserConnectorResponse.FromString,
                )
        self.ConnectUserConnector = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ConnectUserConnector',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ConnectUserConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ConnectUserConnectorResponse.FromString,
                )
        self.DisconnectUserConnector = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/DisconnectUserConnector',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.DisconnectUserConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.DisconnectUserConnectorResponse.FromString,
                )
        self.RenameUserConnector = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/RenameUserConnector',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.RenameUserConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.RenameUserConnectorResponse.FromString,
                )
        self.ExecuteUserConnector = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ExecuteUserConnector',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ExecuteUserConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ExecuteUserConnectorResponse.FromString,
                )
        self.WatchUserConnector = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/WatchUserConnector',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.WatchUserConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.WatchUserConnectorResponse.FromString,
                )
        self.TestUserConnector = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/TestUserConnector',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.TestUserConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.TestUserConnectorResponse.FromString,
                )
        self.CreateOrganizationConnector = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/CreateOrganizationConnector',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.CreateOrganizationConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.CreateOrganizationConnectorResponse.FromString,
                )
        self.ListOrganizationConnectors = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListOrganizationConnectors',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ListOrganizationConnectorsRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ListOrganizationConnectorsResponse.FromString,
                )
        self.GetOrganizationConnector = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/GetOrganizationConnector',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.GetOrganizationConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.GetOrganizationConnectorResponse.FromString,
                )
        self.UpdateOrganizationConnector = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/UpdateOrganizationConnector',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.UpdateOrganizationConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.UpdateOrganizationConnectorResponse.FromString,
                )
        self.DeleteOrganizationConnector = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/DeleteOrganizationConnector',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.DeleteOrganizationConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.DeleteOrganizationConnectorResponse.FromString,
                )
        self.ConnectOrganizationConnector = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ConnectOrganizationConnector',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ConnectOrganizationConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ConnectOrganizationConnectorResponse.FromString,
                )
        self.DisconnectOrganizationConnector = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/DisconnectOrganizationConnector',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.DisconnectOrganizationConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.DisconnectOrganizationConnectorResponse.FromString,
                )
        self.RenameOrganizationConnector = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/RenameOrganizationConnector',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.RenameOrganizationConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.RenameOrganizationConnectorResponse.FromString,
                )
        self.ExecuteOrganizationConnector = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ExecuteOrganizationConnector',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ExecuteOrganizationConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ExecuteOrganizationConnectorResponse.FromString,
                )
        self.WatchOrganizationConnector = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/WatchOrganizationConnector',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.WatchOrganizationConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.WatchOrganizationConnectorResponse.FromString,
                )
        self.TestOrganizationConnector = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/TestOrganizationConnector',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.TestOrganizationConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.TestOrganizationConnectorResponse.FromString,
                )


class PipelinePublicServiceServicer(object):
    """VDP

    PipelinePublicService exposes the public VDP endpoints that allow clients to
    manage pipelines.
    """

    def Liveness(self, request, context):
        """Check if the pipeline server is alive

        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Readiness(self, request, context):
        """Check if the pipeline server is ready

        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPipelines(self, request, context):
        """List accessible pipelines

        Returns a paginated list of pipelines that are visible to the requester.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookUpPipeline(self, request, context):
        """Get a pipeline by UID

        Returns the details of a pipeline by a permalink defined by the resource
        UID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUserPipeline(self, request, context):
        """Create a new user pipeline

        Creates a new pipeline under the parenthood of a user. Users can only
        create a pipeline as the parent of that resource (i.e. the authenticated
        user must match the `parent` path parameter).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUserPipelines(self, request, context):
        """List user pipelines

        Returns a paginated list of pipelines that belong to the specified user.
        The parent user may be different from the authenticated user, in which
        case the results will contain the pipelines that are visible to the
        latter.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserPipeline(self, request, context):
        """Get a pipeline owned by a user

        Returns the details of a user-owned pipeline by its resource name, which is defined
        by the parent user and the ID of the pipeline.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUserPipeline(self, request, context):
        """Update a pipeline owned by a user

        Udpates a pipeline, accessing it by its resource name, which is defined by
        the parent user and the ID of the pipeline. The authenticated user must be
        the parent of the pipeline in order to modify it.

        In REST requests, only the supplied pipeline fields will be taken into
        account when updating the resource.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUserPipeline(self, request, context):
        """Delete a pipeline owned by a user

        Deletes a pipeline, accesing it by its resource name, which is defined by
        the parent user and the ID of the pipeline. The authenticated user must be
        the parent of the pipeline in order to delete it.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateUserPipeline(self, request, context):
        """Validate a pipeline a pipeline owned by a user

        Validates a pipeline by its resource name, which is defined by the parent
        user and the ID of the pipeline.

        Validation checks the recipe of the pipeline and the status of its components.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenameUserPipeline(self, request, context):
        """Rename a pipeline owned by a user

        Updates the ID of a pipeline. Since this is an output-only field, a custom
        method is required to modify it.

        The pipeline name will be updated accordingly, as it is  composed by the
        parent user and ID of the pipeline (e.g.
        `users/luigi/pipelines/pizza-recipe-generator`).

        The authenticated user must be the parent of the pipeline in order to
        perform this action.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerUserPipeline(self, request, context):
        """Trigger a pipeline owned by a user

        Triggers the execution of a pipeline synchronously, i.e., the result is
        sent back to the user right after the data is processed. This method is
        intended for real-time inference when low latency is of concern.

        The pipeline is identified by its resource name, formed by the parent user
        and ID of the pipeline.

        For more information, see [Trigger
        Pipeline](https://www.instill.tech/docs/latest/core/concepts/pipeline#trigger-pipeline).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerAsyncUserPipeline(self, request, context):
        """Trigger a pipeline owned by a user asynchronously

        Triggers the execution of a pipeline asynchronously, i.e., the result
        contains the necessary information to access the result and status of the
        operation. This method is intended for cases that require long-running
        workloads.

        The pipeline is identified by its resource name, formed by the parent user
        and ID of the pipeline.

        For more information, see [Trigger
        Pipeline](https://www.instill.tech/docs/latest/core/concepts/pipeline#trigger-pipeline).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUserPipelineRelease(self, request, context):
        """Release a version of a pipeline owned by a user

        Commits the version of a pipeline, identified by its resource name, which
        is formed by the parent user and ID of the pipeline.

        The authenticated user must be the parent of the pipeline in order to
        perform this action.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUserPipelineReleases(self, request, context):
        """List the releases in a pipeline owned by a user

        Lists the commited versions of a pipeline, identified by its resource
        name, which is formed by the parent user and ID of the pipeline.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserPipelineRelease(self, request, context):
        """Get a release in a pipeline owned by a user

        Gets the details of a pipeline release, where the pipeline is identified
        by its resource name, formed by its parent user and ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUserPipelineRelease(self, request, context):
        """Update a release in a pipeline owned by a user

        Updates the details of a pipeline release, where the pipeline is
        identified by its resource name, formed by its parent user and ID.

        The authenticated user must be the parent of the pipeline in order to
        perform this action.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUserPipelineRelease(self, request, context):
        """Delete a release in a pipeline owned by a user

        Deletes a pipeline release, where the pipeline is identified by its
        resource name, formed by its parent user and ID.

        The authenticated user must be the parent of the pipeline in order to
        perform this action.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestoreUserPipelineRelease(self, request, context):
        """Set the version of a pipeline owned by a user to a pinned release

        Sets the pipeline configuration to a pinned version defined by a release.

        The pipeline is identified by its resource name, formed by its parent user
        and ID.

        The authenticated user must be the parent of the pipeline in order to
        perform this action.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchUserPipelineRelease(self, request, context):
        """Get the state of a release in a pipeline owned by a user

        Gets the state of a pipeline release, where the pipeline is identified by
        its resource name, formed by the parent user and ID of the pipeline.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenameUserPipelineRelease(self, request, context):
        """Rename a release in a pipeline owned by a user

        Updates the ID of a pipeline release, where the pipeline is identified by
        its resource name, formed by the parent user and ID. Since this is an
        output-only field, a custom method is required to modify it.

        The pipeline release name will be updated accordingly, as it is  composed
        by the pipeline name and the ID of the release (e.g.
        `users/luigi/pipelines/pizza-recipe-generator/releases/v0.2.1`).

        The authenticated user must be the parent of the pipeline in order to
        perform this action.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerUserPipelineRelease(self, request, context):
        """Trigger a version of a pipeline owned by a user

        Triggers the synchronous execution of of a pipeline. While the trigger
        endpoint (where the release version isn't specified) triggers the pipeline
        at its latest release, this method allows the client to specified any
        committed release.

        The pipeline is identified by its resource name, formed by its parent user
        and ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerAsyncUserPipelineRelease(self, request, context):
        """Trigger a version of a pipeline owned by a user asynchronously

        Triggers the asynchronous execution of of a pipeline. While the trigger
        endpoint (where the release version isn't specified) triggers the pipeline
        at its latest release, this method allows the client to specified any
        committed release.

        The pipeline is identified by its resource name, formed by its parent user
        and ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOrganizationPipeline(self, request, context):
        """Create a new organization pipeline

        Creates a new pipeline under the parenthood of an organization.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOrganizationPipelines(self, request, context):
        """List organization pipelines

        Returns a paginated list of pipelines that belong to the specified
        organization.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrganizationPipeline(self, request, context):
        """Get a pipeline owned by an organization

        Returns the details of an organization-owned pipeline by its resource name,
        which is defined by the parent organization and the ID of the pipeline.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateOrganizationPipeline(self, request, context):
        """Update a pipeline owned by an organization

        Udpates a pipeline, accessing it by its resource name, which is defined by

        In REST requests, only the supplied pipeline fields will be taken into
        account when updating the resource.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteOrganizationPipeline(self, request, context):
        """Delete a pipeline owned by an organization

        Deletes a pipeline, accesing it by its resource name, which is defined by
        the parent organization and the ID of the pipeline.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateOrganizationPipeline(self, request, context):
        """Validate a pipeline a pipeline owned by an organization

        Validates a pipeline by its resource name, which is defined by the parent
        organization and the ID of the pipeline.

        Validation checks the recipe of the pipeline and the status of its
        components.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenameOrganizationPipeline(self, request, context):
        """Rename a pipeline owned by an organization

        Updates the ID of a pipeline. Since this is an output-only field, a custom
        method is required to modify it.

        The pipeline name will be updated accordingly, as it is  composed by the
        parent organization and ID of the pipeline (e.g.
        `organizations/luigi/pipelines/pizza-recipe-generator`).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerOrganizationPipeline(self, request, context):
        """Trigger a pipeline owned by an organization

        Triggers the execution of a pipeline synchronously, i.e., the result is sent
        back to the organization right after the data is processed. This method is
        intended for real-time inference when low latency is of concern.

        The pipeline is identified by its resource name, formed by the parent
        organization and ID of the pipeline.

        For more information, see [Trigger
        Pipeline](https://www.instill.tech/docs/latest/core/concepts/pipeline#trigger-pipeline).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerAsyncOrganizationPipeline(self, request, context):
        """Trigger a pipeline owned by an organization asynchronously

        Triggers the execution of a pipeline asynchronously, i.e., the result
        contains the necessary information to access the result and status of the
        operation. This method is intended for cases that require long-running
        workloads.

        The pipeline is identified by its resource name, formed by the parent
        organization and ID of the pipeline.

        For more information, see [Trigger
        Pipeline](https://www.instill.tech/docs/latest/core/concepts/pipeline#trigger-pipeline).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOrganizationPipelineRelease(self, request, context):
        """Release a version of a pipeline owned by an organization

        Commits the version of a pipeline, identified by its resource name, which is
        formed by the parent organization and ID of the pipeline.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOrganizationPipelineReleases(self, request, context):
        """List the releases in a pipeline owned by an organization

        Lists the commited versions of a pipeline, identified by its resource name,
        which is formed by the parent organization and ID of the pipeline.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrganizationPipelineRelease(self, request, context):
        """Get a release in a pipeline owned by an organization

        Gets the details of a pipeline release, where the pipeline is identified by
        its resource name, formed by its parent organization and ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateOrganizationPipelineRelease(self, request, context):
        """Update a release in a pipeline owned by an organization

        Updates the details of a pipeline release, where the pipeline is identified
        by its resource name, formed by its parent organization and ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteOrganizationPipelineRelease(self, request, context):
        """Delete a release in a pipeline owned by an organization

        Deletes a pipeline release, where the pipeline is identified by its resource
        name, formed by its parent organization and ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestoreOrganizationPipelineRelease(self, request, context):
        """Set the version of a pipeline owned by an organization to a pinned release

        Sets the pipeline configuration to a pinned version defined by a release.

        The pipeline is identified by its resource name, formed by its parent
        organization and ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchOrganizationPipelineRelease(self, request, context):
        """Get the state of a release in a pipeline owned by an organization

        Gets the state of a pipeline release, where the pipeline is identified by
        its resource name, formed by the parent organization and ID of the pipeline.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenameOrganizationPipelineRelease(self, request, context):
        """Rename a release in a pipeline owned by an organization

        Updates the ID of a pipeline release, where the pipeline is identified by
        its resource name, formed by the parent organization and ID. Since this is
        an output-only field, a custom method is required to modify it.

        The pipeline release name will be updated accordingly, as it is  composed by
        the pipeline name and the ID of the release (e.g.
        `organizations/luigi/pipelines/pizza-recipe-generator/releases/v0.2.1`).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerOrganizationPipelineRelease(self, request, context):
        """Trigger a version of a pipeline owned by an organization

        Triggers the synchronous execution of of a pipeline. While the trigger
        endpoint (where the release version isn't specified) triggers the pipeline
        at its latest release, this method allows the client to specified any
        committed release.

        The pipeline is identified by its resource name, formed by its parent
        organization and ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerAsyncOrganizationPipelineRelease(self, request, context):
        """Trigger a version of a pipeline owned by an organization asynchronously

        Triggers the asynchronous execution of of a pipeline. While the trigger
        endpoint (where the release version isn't specified) triggers the pipeline
        at its latest release, this method allows the client to specified any
        committed release.

        The pipeline is identified by its resource name, formed by its parent
        organization and ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOperation(self, request, context):
        """Get the details of a long-running operation

        This method allows requesters to request the status and outcome of
        long-running operations such as asynchronous pipeline triggers.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListConnectorDefinitions(self, request, context):
        """List connector definitions

        Returns a paginated list of connector definitions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConnectorDefinition(self, request, context):
        """Get connector definition

        Returns the details of a connector definition.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOperatorDefinitions(self, request, context):
        """List operator definitions

        Returns a paginated list of operator definitions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOperatorDefinition(self, request, context):
        """Get operator definition

        Returns the details of an operator definition.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListConnectors(self, request, context):
        """///////////////////////////////
        Connector methods
        ///////////////////////////////

        List connectors

        Returns all the connectors that are visible to the authenticated user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookUpConnector(self, request, context):
        """Get a connector by UID

        Returns the details of a connector by UID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUserConnector(self, request, context):
        """Create a new user connector

        Creates a new connector under the parenthood of a user. Users can only
        create a connector parents of that resource (i.e. the authenticated user
        must match the `parent` path parameter).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUserConnectors(self, request, context):
        """List user connectors

        Returns a paginated list of connectors that belong to the specified user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserConnector(self, request, context):
        """Get a connector owned by a user.

        Returns the details of a user-owned connector.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUserConnector(self, request, context):
        """Update a connector owned by a user.

        Updates a user-owned connector. The authebnticated user must be the parent
        of the connector.

        In REST requests, only the supplied connector fields will be taken into
        account when updating the resource.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUserConnector(self, request, context):
        """Delete a connector owned by a user

        Deletes a connector. The authenticated user must be the parent of the
        connector in order to delete it.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConnectUserConnector(self, request, context):
        """Connect a connector owned by a user

        Transitions the state of a connector from `DISCONNECTED` to `CONNECTED`. If
        the state of the connector is different when the request is made, an error
        is returned.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisconnectUserConnector(self, request, context):
        """Disconnect a connector owned by a user

        Transitions the state of a connector from `CONNECTED` to `DISCONNECTED`. If
        the state of the connector is different when the request is made, an error
        is returned.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenameUserConnector(self, request, context):
        """Rename a connector owned by a user

        Updates the ID of a connector. Since this is an output-only field, a custom
        method is required to modify it.

        The connector name will be updated accordingly, as it is  composed by the
        parent user and ID of the connector (e.g.
        `users/indiana-jones/connector/whip`).

        The authenticated user must be the parent of the connector in order to
        perform this action.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteUserConnector(self, request, context):
        """Execute a connector owned by a user

        Executes a task in a user-owned connector.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchUserConnector(self, request, context):
        """Get the state of a connector owned by a user

        Gets the state of a user-owned connector.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TestUserConnector(self, request, context):
        """Test a connector owned by a user

        Tests the connection on a user-owned connector.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOrganizationConnector(self, request, context):
        """Create a new organization connector

        Creates a new connector under the parenthood of an organization.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOrganizationConnectors(self, request, context):
        """List organization connectors

        Returns a paginated list of connectors that belong to the specified
        organization.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrganizationConnector(self, request, context):
        """Get a connector owned by an organization.

        Returns the details of an organization-owned connector.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateOrganizationConnector(self, request, context):
        """Update a connector owned by an organization.

        Updates an organization-owned connector.

        In REST requests, only the supplied connector fields will be taken into
        account when updating the resource.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteOrganizationConnector(self, request, context):
        """Delete a connector owned by an organization

        Deletes a connector.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConnectOrganizationConnector(self, request, context):
        """Connect a connector owned by an organization

        Transitions the state of a connector from `DISCONNECTED` to `CONNECTED`. If
        the state of the connector is different when the request is made, an error
        is returned.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisconnectOrganizationConnector(self, request, context):
        """Disconnect a connector owned by an organization

        Transitions the state of a connector from `CONNECTED` to `DISCONNECTED`. If
        the state of the connector is different when the request is made, an error
        is returned.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenameOrganizationConnector(self, request, context):
        """Rename a connector owned by an organization

        Updates the ID of a connector. Since this is an output-only field, a custom
        method is required to modify it.

        The connector name will be updated accordingly, as it is  composed by the
        parent organization and ID of the connector (e.g.
        `organizations/indiana-jones/connector/whip`).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteOrganizationConnector(self, request, context):
        """Execute a connector owned by an organization

        Executes a task in an organization-owned connector.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchOrganizationConnector(self, request, context):
        """Get the state of a connector owned by an organization

        Gets the state of an organization-owned connector.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TestOrganizationConnector(self, request, context):
        """Test a connector owned by an organization

        Tests the connection on an organization-owned connector.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PipelinePublicServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Liveness': grpc.unary_unary_rpc_method_handler(
                    servicer.Liveness,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.LivenessRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.LivenessResponse.SerializeToString,
            ),
            'Readiness': grpc.unary_unary_rpc_method_handler(
                    servicer.Readiness,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ReadinessRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ReadinessResponse.SerializeToString,
            ),
            'ListPipelines': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPipelines,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListPipelinesRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListPipelinesResponse.SerializeToString,
            ),
            'LookUpPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.LookUpPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.LookUpPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.LookUpPipelineResponse.SerializeToString,
            ),
            'CreateUserPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUserPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateUserPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateUserPipelineResponse.SerializeToString,
            ),
            'ListUserPipelines': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUserPipelines,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListUserPipelinesRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListUserPipelinesResponse.SerializeToString,
            ),
            'GetUserPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetUserPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetUserPipelineResponse.SerializeToString,
            ),
            'UpdateUserPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUserPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateUserPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateUserPipelineResponse.SerializeToString,
            ),
            'DeleteUserPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUserPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteUserPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteUserPipelineResponse.SerializeToString,
            ),
            'ValidateUserPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateUserPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateUserPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateUserPipelineResponse.SerializeToString,
            ),
            'RenameUserPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.RenameUserPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameUserPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameUserPipelineResponse.SerializeToString,
            ),
            'TriggerUserPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerUserPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineResponse.SerializeToString,
            ),
            'TriggerAsyncUserPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerAsyncUserPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncUserPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncUserPipelineResponse.SerializeToString,
            ),
            'CreateUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateUserPipelineReleaseResponse.SerializeToString,
            ),
            'ListUserPipelineReleases': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUserPipelineReleases,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListUserPipelineReleasesRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListUserPipelineReleasesResponse.SerializeToString,
            ),
            'GetUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetUserPipelineReleaseResponse.SerializeToString,
            ),
            'UpdateUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateUserPipelineReleaseResponse.SerializeToString,
            ),
            'DeleteUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteUserPipelineReleaseResponse.SerializeToString,
            ),
            'RestoreUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.RestoreUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RestoreUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RestoreUserPipelineReleaseResponse.SerializeToString,
            ),
            'WatchUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.WatchUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.WatchUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.WatchUserPipelineReleaseResponse.SerializeToString,
            ),
            'RenameUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.RenameUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameUserPipelineReleaseResponse.SerializeToString,
            ),
            'TriggerUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineReleaseResponse.SerializeToString,
            ),
            'TriggerAsyncUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerAsyncUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncUserPipelineReleaseResponse.SerializeToString,
            ),
            'CreateOrganizationPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrganizationPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateOrganizationPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateOrganizationPipelineResponse.SerializeToString,
            ),
            'ListOrganizationPipelines': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOrganizationPipelines,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListOrganizationPipelinesRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListOrganizationPipelinesResponse.SerializeToString,
            ),
            'GetOrganizationPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrganizationPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOrganizationPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOrganizationPipelineResponse.SerializeToString,
            ),
            'UpdateOrganizationPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateOrganizationPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateOrganizationPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateOrganizationPipelineResponse.SerializeToString,
            ),
            'DeleteOrganizationPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteOrganizationPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteOrganizationPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteOrganizationPipelineResponse.SerializeToString,
            ),
            'ValidateOrganizationPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateOrganizationPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateOrganizationPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateOrganizationPipelineResponse.SerializeToString,
            ),
            'RenameOrganizationPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.RenameOrganizationPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameOrganizationPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameOrganizationPipelineResponse.SerializeToString,
            ),
            'TriggerOrganizationPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerOrganizationPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineResponse.SerializeToString,
            ),
            'TriggerAsyncOrganizationPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerAsyncOrganizationPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncOrganizationPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncOrganizationPipelineResponse.SerializeToString,
            ),
            'CreateOrganizationPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrganizationPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateOrganizationPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateOrganizationPipelineReleaseResponse.SerializeToString,
            ),
            'ListOrganizationPipelineReleases': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOrganizationPipelineReleases,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListOrganizationPipelineReleasesRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListOrganizationPipelineReleasesResponse.SerializeToString,
            ),
            'GetOrganizationPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrganizationPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOrganizationPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOrganizationPipelineReleaseResponse.SerializeToString,
            ),
            'UpdateOrganizationPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateOrganizationPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateOrganizationPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateOrganizationPipelineReleaseResponse.SerializeToString,
            ),
            'DeleteOrganizationPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteOrganizationPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteOrganizationPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteOrganizationPipelineReleaseResponse.SerializeToString,
            ),
            'RestoreOrganizationPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.RestoreOrganizationPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RestoreOrganizationPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RestoreOrganizationPipelineReleaseResponse.SerializeToString,
            ),
            'WatchOrganizationPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.WatchOrganizationPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.WatchOrganizationPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.WatchOrganizationPipelineReleaseResponse.SerializeToString,
            ),
            'RenameOrganizationPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.RenameOrganizationPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameOrganizationPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameOrganizationPipelineReleaseResponse.SerializeToString,
            ),
            'TriggerOrganizationPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerOrganizationPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineReleaseResponse.SerializeToString,
            ),
            'TriggerAsyncOrganizationPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerAsyncOrganizationPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncOrganizationPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncOrganizationPipelineReleaseResponse.SerializeToString,
            ),
            'GetOperation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOperation,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOperationRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOperationResponse.SerializeToString,
            ),
            'ListConnectorDefinitions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListConnectorDefinitions,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__definition__pb2.ListConnectorDefinitionsRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__definition__pb2.ListConnectorDefinitionsResponse.SerializeToString,
            ),
            'GetConnectorDefinition': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConnectorDefinition,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__definition__pb2.GetConnectorDefinitionRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__definition__pb2.GetConnectorDefinitionResponse.SerializeToString,
            ),
            'ListOperatorDefinitions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOperatorDefinitions,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_operator__definition__pb2.ListOperatorDefinitionsRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_operator__definition__pb2.ListOperatorDefinitionsResponse.SerializeToString,
            ),
            'GetOperatorDefinition': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOperatorDefinition,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_operator__definition__pb2.GetOperatorDefinitionRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_operator__definition__pb2.GetOperatorDefinitionResponse.SerializeToString,
            ),
            'ListConnectors': grpc.unary_unary_rpc_method_handler(
                    servicer.ListConnectors,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ListConnectorsRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ListConnectorsResponse.SerializeToString,
            ),
            'LookUpConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.LookUpConnector,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.LookUpConnectorRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.LookUpConnectorResponse.SerializeToString,
            ),
            'CreateUserConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUserConnector,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.CreateUserConnectorRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.CreateUserConnectorResponse.SerializeToString,
            ),
            'ListUserConnectors': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUserConnectors,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ListUserConnectorsRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ListUserConnectorsResponse.SerializeToString,
            ),
            'GetUserConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserConnector,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.GetUserConnectorRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.GetUserConnectorResponse.SerializeToString,
            ),
            'UpdateUserConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUserConnector,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.UpdateUserConnectorRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.UpdateUserConnectorResponse.SerializeToString,
            ),
            'DeleteUserConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUserConnector,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.DeleteUserConnectorRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.DeleteUserConnectorResponse.SerializeToString,
            ),
            'ConnectUserConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.ConnectUserConnector,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ConnectUserConnectorRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ConnectUserConnectorResponse.SerializeToString,
            ),
            'DisconnectUserConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.DisconnectUserConnector,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.DisconnectUserConnectorRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.DisconnectUserConnectorResponse.SerializeToString,
            ),
            'RenameUserConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.RenameUserConnector,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.RenameUserConnectorRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.RenameUserConnectorResponse.SerializeToString,
            ),
            'ExecuteUserConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteUserConnector,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ExecuteUserConnectorRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ExecuteUserConnectorResponse.SerializeToString,
            ),
            'WatchUserConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.WatchUserConnector,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.WatchUserConnectorRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.WatchUserConnectorResponse.SerializeToString,
            ),
            'TestUserConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.TestUserConnector,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.TestUserConnectorRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.TestUserConnectorResponse.SerializeToString,
            ),
            'CreateOrganizationConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrganizationConnector,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.CreateOrganizationConnectorRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.CreateOrganizationConnectorResponse.SerializeToString,
            ),
            'ListOrganizationConnectors': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOrganizationConnectors,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ListOrganizationConnectorsRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ListOrganizationConnectorsResponse.SerializeToString,
            ),
            'GetOrganizationConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrganizationConnector,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.GetOrganizationConnectorRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.GetOrganizationConnectorResponse.SerializeToString,
            ),
            'UpdateOrganizationConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateOrganizationConnector,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.UpdateOrganizationConnectorRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.UpdateOrganizationConnectorResponse.SerializeToString,
            ),
            'DeleteOrganizationConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteOrganizationConnector,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.DeleteOrganizationConnectorRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.DeleteOrganizationConnectorResponse.SerializeToString,
            ),
            'ConnectOrganizationConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.ConnectOrganizationConnector,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ConnectOrganizationConnectorRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ConnectOrganizationConnectorResponse.SerializeToString,
            ),
            'DisconnectOrganizationConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.DisconnectOrganizationConnector,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.DisconnectOrganizationConnectorRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.DisconnectOrganizationConnectorResponse.SerializeToString,
            ),
            'RenameOrganizationConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.RenameOrganizationConnector,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.RenameOrganizationConnectorRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.RenameOrganizationConnectorResponse.SerializeToString,
            ),
            'ExecuteOrganizationConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteOrganizationConnector,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ExecuteOrganizationConnectorRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ExecuteOrganizationConnectorResponse.SerializeToString,
            ),
            'WatchOrganizationConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.WatchOrganizationConnector,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.WatchOrganizationConnectorRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.WatchOrganizationConnectorResponse.SerializeToString,
            ),
            'TestOrganizationConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.TestOrganizationConnector,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.TestOrganizationConnectorRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.TestOrganizationConnectorResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'vdp.pipeline.v1beta.PipelinePublicService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PipelinePublicService(object):
    """VDP

    PipelinePublicService exposes the public VDP endpoints that allow clients to
    manage pipelines.
    """

    @staticmethod
    def Liveness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/Liveness',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.LivenessRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.LivenessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Readiness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/Readiness',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ReadinessRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ReadinessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPipelines(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListPipelines',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListPipelinesRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListPipelinesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LookUpPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/LookUpPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.LookUpPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.LookUpPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUserPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/CreateUserPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateUserPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateUserPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListUserPipelines(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListUserPipelines',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListUserPipelinesRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListUserPipelinesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/GetUserPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetUserPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetUserPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUserPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/UpdateUserPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateUserPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateUserPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUserPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/DeleteUserPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteUserPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteUserPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ValidateUserPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ValidateUserPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateUserPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateUserPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenameUserPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/RenameUserPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameUserPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameUserPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerUserPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TriggerUserPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerAsyncUserPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TriggerAsyncUserPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncUserPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncUserPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/CreateUserPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListUserPipelineReleases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListUserPipelineReleases',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListUserPipelineReleasesRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListUserPipelineReleasesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/GetUserPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/UpdateUserPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/DeleteUserPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RestoreUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/RestoreUserPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RestoreUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RestoreUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WatchUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/WatchUserPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.WatchUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.WatchUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenameUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/RenameUserPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TriggerUserPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerAsyncUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TriggerAsyncUserPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateOrganizationPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/CreateOrganizationPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateOrganizationPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateOrganizationPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListOrganizationPipelines(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListOrganizationPipelines',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListOrganizationPipelinesRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListOrganizationPipelinesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrganizationPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/GetOrganizationPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOrganizationPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOrganizationPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateOrganizationPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/UpdateOrganizationPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateOrganizationPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateOrganizationPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteOrganizationPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/DeleteOrganizationPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteOrganizationPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteOrganizationPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ValidateOrganizationPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ValidateOrganizationPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateOrganizationPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateOrganizationPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenameOrganizationPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/RenameOrganizationPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameOrganizationPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameOrganizationPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerOrganizationPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TriggerOrganizationPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerAsyncOrganizationPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TriggerAsyncOrganizationPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncOrganizationPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncOrganizationPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateOrganizationPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/CreateOrganizationPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateOrganizationPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateOrganizationPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListOrganizationPipelineReleases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListOrganizationPipelineReleases',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListOrganizationPipelineReleasesRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListOrganizationPipelineReleasesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrganizationPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/GetOrganizationPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOrganizationPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOrganizationPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateOrganizationPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/UpdateOrganizationPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateOrganizationPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateOrganizationPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteOrganizationPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/DeleteOrganizationPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteOrganizationPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteOrganizationPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RestoreOrganizationPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/RestoreOrganizationPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RestoreOrganizationPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RestoreOrganizationPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WatchOrganizationPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/WatchOrganizationPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.WatchOrganizationPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.WatchOrganizationPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenameOrganizationPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/RenameOrganizationPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameOrganizationPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameOrganizationPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerOrganizationPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TriggerOrganizationPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerAsyncOrganizationPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TriggerAsyncOrganizationPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncOrganizationPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncOrganizationPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOperation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/GetOperation',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOperationRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOperationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListConnectorDefinitions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListConnectorDefinitions',
            vdp_dot_pipeline_dot_v1beta_dot_connector__definition__pb2.ListConnectorDefinitionsRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__definition__pb2.ListConnectorDefinitionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConnectorDefinition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/GetConnectorDefinition',
            vdp_dot_pipeline_dot_v1beta_dot_connector__definition__pb2.GetConnectorDefinitionRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__definition__pb2.GetConnectorDefinitionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListOperatorDefinitions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListOperatorDefinitions',
            vdp_dot_pipeline_dot_v1beta_dot_operator__definition__pb2.ListOperatorDefinitionsRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_operator__definition__pb2.ListOperatorDefinitionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOperatorDefinition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/GetOperatorDefinition',
            vdp_dot_pipeline_dot_v1beta_dot_operator__definition__pb2.GetOperatorDefinitionRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_operator__definition__pb2.GetOperatorDefinitionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListConnectors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListConnectors',
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ListConnectorsRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ListConnectorsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LookUpConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/LookUpConnector',
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.LookUpConnectorRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.LookUpConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUserConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/CreateUserConnector',
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.CreateUserConnectorRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.CreateUserConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListUserConnectors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListUserConnectors',
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ListUserConnectorsRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ListUserConnectorsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/GetUserConnector',
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.GetUserConnectorRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.GetUserConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUserConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/UpdateUserConnector',
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.UpdateUserConnectorRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.UpdateUserConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUserConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/DeleteUserConnector',
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.DeleteUserConnectorRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.DeleteUserConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConnectUserConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ConnectUserConnector',
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ConnectUserConnectorRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ConnectUserConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisconnectUserConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/DisconnectUserConnector',
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.DisconnectUserConnectorRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.DisconnectUserConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenameUserConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/RenameUserConnector',
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.RenameUserConnectorRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.RenameUserConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExecuteUserConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ExecuteUserConnector',
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ExecuteUserConnectorRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ExecuteUserConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WatchUserConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/WatchUserConnector',
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.WatchUserConnectorRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.WatchUserConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TestUserConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TestUserConnector',
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.TestUserConnectorRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.TestUserConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateOrganizationConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/CreateOrganizationConnector',
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.CreateOrganizationConnectorRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.CreateOrganizationConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListOrganizationConnectors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListOrganizationConnectors',
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ListOrganizationConnectorsRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ListOrganizationConnectorsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrganizationConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/GetOrganizationConnector',
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.GetOrganizationConnectorRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.GetOrganizationConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateOrganizationConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/UpdateOrganizationConnector',
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.UpdateOrganizationConnectorRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.UpdateOrganizationConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteOrganizationConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/DeleteOrganizationConnector',
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.DeleteOrganizationConnectorRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.DeleteOrganizationConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConnectOrganizationConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ConnectOrganizationConnector',
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ConnectOrganizationConnectorRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ConnectOrganizationConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisconnectOrganizationConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/DisconnectOrganizationConnector',
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.DisconnectOrganizationConnectorRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.DisconnectOrganizationConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenameOrganizationConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/RenameOrganizationConnector',
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.RenameOrganizationConnectorRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.RenameOrganizationConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExecuteOrganizationConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ExecuteOrganizationConnector',
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ExecuteOrganizationConnectorRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.ExecuteOrganizationConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WatchOrganizationConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/WatchOrganizationConnector',
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.WatchOrganizationConnectorRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.WatchOrganizationConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TestOrganizationConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TestOrganizationConnector',
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.TestOrganizationConnectorRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_connector__pb2.TestOrganizationConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
