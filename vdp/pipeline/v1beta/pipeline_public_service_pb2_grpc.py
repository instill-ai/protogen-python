# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from vdp.pipeline.v1beta import common_pb2 as vdp_dot_pipeline_dot_v1beta_dot_common__pb2
from vdp.pipeline.v1beta import component_definition_pb2 as vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2
from vdp.pipeline.v1beta import integration_pb2 as vdp_dot_pipeline_dot_v1beta_dot_integration__pb2
from vdp.pipeline.v1beta import pipeline_pb2 as vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2
from vdp.pipeline.v1beta import secret_pb2 as vdp_dot_pipeline_dot_v1beta_dot_secret__pb2


class PipelinePublicServiceStub(object):
    """VDP

    PipelinePublicService exposes the public VDP endpoints that allow clients to
    manage pipelines.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Liveness = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/Liveness',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.LivenessRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.LivenessResponse.FromString,
                )
        self.Readiness = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/Readiness',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ReadinessRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ReadinessResponse.FromString,
                )
        self.GetHubStats = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/GetHubStats',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetHubStatsRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetHubStatsResponse.FromString,
                )
        self.ListPipelines = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListPipelines',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListPipelinesRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListPipelinesResponse.FromString,
                )
        self.LookUpPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/LookUpPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.LookUpPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.LookUpPipelineResponse.FromString,
                )
        self.ListNamespacePipelines = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListNamespacePipelines',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListNamespacePipelinesRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListNamespacePipelinesResponse.FromString,
                )
        self.CreateNamespacePipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/CreateNamespacePipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateNamespacePipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateNamespacePipelineResponse.FromString,
                )
        self.GetNamespacePipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/GetNamespacePipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetNamespacePipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetNamespacePipelineResponse.FromString,
                )
        self.UpdateNamespacePipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/UpdateNamespacePipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateNamespacePipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateNamespacePipelineResponse.FromString,
                )
        self.DeleteNamespacePipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/DeleteNamespacePipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteNamespacePipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteNamespacePipelineResponse.FromString,
                )
        self.ValidateNamespacePipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ValidateNamespacePipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateNamespacePipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateNamespacePipelineResponse.FromString,
                )
        self.RenameNamespacePipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/RenameNamespacePipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameNamespacePipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameNamespacePipelineResponse.FromString,
                )
        self.CloneNamespacePipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/CloneNamespacePipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CloneNamespacePipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CloneNamespacePipelineResponse.FromString,
                )
        self.SendNamespacePipelineEvent = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/SendNamespacePipelineEvent',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.SendNamespacePipelineEventRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.SendNamespacePipelineEventResponse.FromString,
                )
        self.SendNamespacePipelineReleaseEvent = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/SendNamespacePipelineReleaseEvent',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.SendNamespacePipelineReleaseEventRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.SendNamespacePipelineReleaseEventResponse.FromString,
                )
        self.TriggerNamespacePipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/TriggerNamespacePipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerNamespacePipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerNamespacePipelineResponse.FromString,
                )
        self.TriggerNamespacePipelineWithStream = channel.unary_stream(
                '/vdp.pipeline.v1beta.PipelinePublicService/TriggerNamespacePipelineWithStream',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerNamespacePipelineWithStreamRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerNamespacePipelineWithStreamResponse.FromString,
                )
        self.TriggerAsyncNamespacePipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/TriggerAsyncNamespacePipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncNamespacePipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncNamespacePipelineResponse.FromString,
                )
        self.CreateNamespacePipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/CreateNamespacePipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateNamespacePipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateNamespacePipelineReleaseResponse.FromString,
                )
        self.ListNamespacePipelineReleases = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListNamespacePipelineReleases',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListNamespacePipelineReleasesRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListNamespacePipelineReleasesResponse.FromString,
                )
        self.GetNamespacePipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/GetNamespacePipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetNamespacePipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetNamespacePipelineReleaseResponse.FromString,
                )
        self.UpdateNamespacePipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/UpdateNamespacePipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateNamespacePipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateNamespacePipelineReleaseResponse.FromString,
                )
        self.DeleteNamespacePipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/DeleteNamespacePipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteNamespacePipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteNamespacePipelineReleaseResponse.FromString,
                )
        self.CloneNamespacePipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/CloneNamespacePipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CloneNamespacePipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CloneNamespacePipelineReleaseResponse.FromString,
                )
        self.TriggerNamespacePipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/TriggerNamespacePipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerNamespacePipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerNamespacePipelineReleaseResponse.FromString,
                )
        self.TriggerAsyncNamespacePipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/TriggerAsyncNamespacePipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncNamespacePipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncNamespacePipelineReleaseResponse.FromString,
                )
        self.CreateNamespaceSecret = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/CreateNamespaceSecret',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.CreateNamespaceSecretRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.CreateNamespaceSecretResponse.FromString,
                )
        self.ListNamespaceSecrets = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListNamespaceSecrets',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.ListNamespaceSecretsRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.ListNamespaceSecretsResponse.FromString,
                )
        self.GetNamespaceSecret = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/GetNamespaceSecret',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.GetNamespaceSecretRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.GetNamespaceSecretResponse.FromString,
                )
        self.UpdateNamespaceSecret = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/UpdateNamespaceSecret',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.UpdateNamespaceSecretRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.UpdateNamespaceSecretResponse.FromString,
                )
        self.DeleteNamespaceSecret = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/DeleteNamespaceSecret',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.DeleteNamespaceSecretRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.DeleteNamespaceSecretResponse.FromString,
                )
        self.ListComponentDefinitions = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListComponentDefinitions',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.ListComponentDefinitionsRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.ListComponentDefinitionsResponse.FromString,
                )
        self.GetOperation = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/GetOperation',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOperationRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOperationResponse.FromString,
                )
        self.CreateUserPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/CreateUserPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateUserPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateUserPipelineResponse.FromString,
                )
        self.ListUserPipelines = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListUserPipelines',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListUserPipelinesRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListUserPipelinesResponse.FromString,
                )
        self.GetUserPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/GetUserPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetUserPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetUserPipelineResponse.FromString,
                )
        self.UpdateUserPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/UpdateUserPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateUserPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateUserPipelineResponse.FromString,
                )
        self.DeleteUserPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/DeleteUserPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteUserPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteUserPipelineResponse.FromString,
                )
        self.ValidateUserPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ValidateUserPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateUserPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateUserPipelineResponse.FromString,
                )
        self.RenameUserPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/RenameUserPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameUserPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameUserPipelineResponse.FromString,
                )
        self.TriggerUserPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/TriggerUserPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineResponse.FromString,
                )
        self.TriggerUserPipelineWithStream = channel.unary_stream(
                '/vdp.pipeline.v1beta.PipelinePublicService/TriggerUserPipelineWithStream',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineWithStreamRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineWithStreamResponse.FromString,
                )
        self.TriggerAsyncUserPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/TriggerAsyncUserPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncUserPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncUserPipelineResponse.FromString,
                )
        self.CreateUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/CreateUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateUserPipelineReleaseResponse.FromString,
                )
        self.ListUserPipelineReleases = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListUserPipelineReleases',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListUserPipelineReleasesRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListUserPipelineReleasesResponse.FromString,
                )
        self.GetUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/GetUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetUserPipelineReleaseResponse.FromString,
                )
        self.UpdateUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/UpdateUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateUserPipelineReleaseResponse.FromString,
                )
        self.DeleteUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/DeleteUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteUserPipelineReleaseResponse.FromString,
                )
        self.RestoreUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/RestoreUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RestoreUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RestoreUserPipelineReleaseResponse.FromString,
                )
        self.RenameUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/RenameUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameUserPipelineReleaseResponse.FromString,
                )
        self.TriggerUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/TriggerUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineReleaseResponse.FromString,
                )
        self.TriggerAsyncUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/TriggerAsyncUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncUserPipelineReleaseResponse.FromString,
                )
        self.CreateOrganizationPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/CreateOrganizationPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateOrganizationPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateOrganizationPipelineResponse.FromString,
                )
        self.ListOrganizationPipelines = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListOrganizationPipelines',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListOrganizationPipelinesRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListOrganizationPipelinesResponse.FromString,
                )
        self.GetOrganizationPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/GetOrganizationPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOrganizationPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOrganizationPipelineResponse.FromString,
                )
        self.UpdateOrganizationPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/UpdateOrganizationPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateOrganizationPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateOrganizationPipelineResponse.FromString,
                )
        self.DeleteOrganizationPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/DeleteOrganizationPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteOrganizationPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteOrganizationPipelineResponse.FromString,
                )
        self.ValidateOrganizationPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ValidateOrganizationPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateOrganizationPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateOrganizationPipelineResponse.FromString,
                )
        self.RenameOrganizationPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/RenameOrganizationPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameOrganizationPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameOrganizationPipelineResponse.FromString,
                )
        self.TriggerOrganizationPipelineStream = channel.unary_stream(
                '/vdp.pipeline.v1beta.PipelinePublicService/TriggerOrganizationPipelineStream',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineStreamRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineStreamResponse.FromString,
                )
        self.TriggerOrganizationPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/TriggerOrganizationPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineResponse.FromString,
                )
        self.TriggerAsyncOrganizationPipeline = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/TriggerAsyncOrganizationPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncOrganizationPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncOrganizationPipelineResponse.FromString,
                )
        self.CreateOrganizationPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/CreateOrganizationPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateOrganizationPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateOrganizationPipelineReleaseResponse.FromString,
                )
        self.ListOrganizationPipelineReleases = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListOrganizationPipelineReleases',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListOrganizationPipelineReleasesRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListOrganizationPipelineReleasesResponse.FromString,
                )
        self.GetOrganizationPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/GetOrganizationPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOrganizationPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOrganizationPipelineReleaseResponse.FromString,
                )
        self.UpdateOrganizationPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/UpdateOrganizationPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateOrganizationPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateOrganizationPipelineReleaseResponse.FromString,
                )
        self.DeleteOrganizationPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/DeleteOrganizationPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteOrganizationPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteOrganizationPipelineReleaseResponse.FromString,
                )
        self.RestoreOrganizationPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/RestoreOrganizationPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RestoreOrganizationPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RestoreOrganizationPipelineReleaseResponse.FromString,
                )
        self.RenameOrganizationPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/RenameOrganizationPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameOrganizationPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameOrganizationPipelineReleaseResponse.FromString,
                )
        self.TriggerOrganizationPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/TriggerOrganizationPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineReleaseResponse.FromString,
                )
        self.TriggerAsyncOrganizationPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/TriggerAsyncOrganizationPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncOrganizationPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncOrganizationPipelineReleaseResponse.FromString,
                )
        self.ListConnectorDefinitions = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListConnectorDefinitions',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.ListConnectorDefinitionsRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.ListConnectorDefinitionsResponse.FromString,
                )
        self.GetConnectorDefinition = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/GetConnectorDefinition',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.GetConnectorDefinitionRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.GetConnectorDefinitionResponse.FromString,
                )
        self.ListOperatorDefinitions = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListOperatorDefinitions',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.ListOperatorDefinitionsRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.ListOperatorDefinitionsResponse.FromString,
                )
        self.GetOperatorDefinition = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/GetOperatorDefinition',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.GetOperatorDefinitionRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.GetOperatorDefinitionResponse.FromString,
                )
        self.CheckName = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/CheckName',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_common__pb2.CheckNameRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_common__pb2.CheckNameResponse.FromString,
                )
        self.CreateUserSecret = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/CreateUserSecret',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.CreateUserSecretRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.CreateUserSecretResponse.FromString,
                )
        self.ListUserSecrets = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListUserSecrets',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.ListUserSecretsRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.ListUserSecretsResponse.FromString,
                )
        self.GetUserSecret = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/GetUserSecret',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.GetUserSecretRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.GetUserSecretResponse.FromString,
                )
        self.UpdateUserSecret = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/UpdateUserSecret',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.UpdateUserSecretRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.UpdateUserSecretResponse.FromString,
                )
        self.DeleteUserSecret = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/DeleteUserSecret',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.DeleteUserSecretRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.DeleteUserSecretResponse.FromString,
                )
        self.CreateOrganizationSecret = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/CreateOrganizationSecret',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.CreateOrganizationSecretRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.CreateOrganizationSecretResponse.FromString,
                )
        self.ListOrganizationSecrets = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListOrganizationSecrets',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.ListOrganizationSecretsRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.ListOrganizationSecretsResponse.FromString,
                )
        self.GetOrganizationSecret = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/GetOrganizationSecret',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.GetOrganizationSecretRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.GetOrganizationSecretResponse.FromString,
                )
        self.UpdateOrganizationSecret = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/UpdateOrganizationSecret',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.UpdateOrganizationSecretRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.UpdateOrganizationSecretResponse.FromString,
                )
        self.DeleteOrganizationSecret = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/DeleteOrganizationSecret',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.DeleteOrganizationSecretRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.DeleteOrganizationSecretResponse.FromString,
                )
        self.ListPipelineRuns = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListPipelineRuns',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListPipelineRunsRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListPipelineRunsResponse.FromString,
                )
        self.ListComponentRuns = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListComponentRuns',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListComponentRunsRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListComponentRunsResponse.FromString,
                )
        self.ListPipelineRunsByRequester = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListPipelineRunsByRequester',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListPipelineRunsByRequesterRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListPipelineRunsByRequesterResponse.FromString,
                )
        self.ListNamespaceConnections = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListNamespaceConnections',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.ListNamespaceConnectionsRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.ListNamespaceConnectionsResponse.FromString,
                )
        self.GetNamespaceConnection = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/GetNamespaceConnection',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.GetNamespaceConnectionRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.GetNamespaceConnectionResponse.FromString,
                )
        self.CreateNamespaceConnection = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/CreateNamespaceConnection',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.CreateNamespaceConnectionRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.CreateNamespaceConnectionResponse.FromString,
                )
        self.UpdateNamespaceConnection = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/UpdateNamespaceConnection',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.UpdateNamespaceConnectionRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.UpdateNamespaceConnectionResponse.FromString,
                )
        self.DeleteNamespaceConnection = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/DeleteNamespaceConnection',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.DeleteNamespaceConnectionRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.DeleteNamespaceConnectionResponse.FromString,
                )
        self.TestNamespaceConnection = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/TestNamespaceConnection',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.TestNamespaceConnectionRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.TestNamespaceConnectionResponse.FromString,
                )
        self.ListPipelineIDsByConnectionID = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListPipelineIDsByConnectionID',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.ListPipelineIDsByConnectionIDRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.ListPipelineIDsByConnectionIDResponse.FromString,
                )
        self.ListIntegrations = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/ListIntegrations',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.ListIntegrationsRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.ListIntegrationsResponse.FromString,
                )
        self.GetIntegration = channel.unary_unary(
                '/vdp.pipeline.v1beta.PipelinePublicService/GetIntegration',
                request_serializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.GetIntegrationRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.GetIntegrationResponse.FromString,
                )


class PipelinePublicServiceServicer(object):
    """VDP

    PipelinePublicService exposes the public VDP endpoints that allow clients to
    manage pipelines.
    """

    def Liveness(self, request, context):
        """Check if the pipeline server is alive

        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Readiness(self, request, context):
        """Check if the pipeline server is ready

        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHubStats(self, request, context):
        """Get hub status

        Return the stats of the hub
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPipelines(self, request, context):
        """List accessible pipelines

        Returns a paginated list of pipelines that are visible to the requester.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookUpPipeline(self, request, context):
        """Get a pipeline by UID

        Returns the details of a pipeline by a permalink defined by the resource
        UID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListNamespacePipelines(self, request, context):
        """List namespace pipelines

        Returns a paginated list of pipelines of a namespace
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateNamespacePipeline(self, request, context):
        """Create a new pipeline

        Creates a new pipeline under a namespace.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNamespacePipeline(self, request, context):
        """Get a pipeline

        Returns the details of a pipeline.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateNamespacePipeline(self, request, context):
        """Update a pipeline

        Udpates a pipeline, accessing it by its resource name, which is defined by
        the parent namespace and the ID of the pipeline. The authenticated namespace must be
        the parent of the pipeline in order to modify it.

        In REST requests, only the supplied pipeline fields will be taken into
        account when updating the resource.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteNamespacePipeline(self, request, context):
        """Delete a pipeline

        Deletes a pipeline, accesing it by its resource name, which is defined by
        the parent namespace and the ID of the pipeline. The authenticated namespace must be
        the parent of the pipeline in order to delete it.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateNamespacePipeline(self, request, context):
        """Validate a pipeline

        Validates a pipeline by its resource name, which is defined by the parent
        namespace and the ID of the pipeline.

        Validation checks the recipe of the pipeline and the status of its components.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenameNamespacePipeline(self, request, context):
        """Rename a pipeline

        Updates the ID of a pipeline. Since this is an output-only field, a custom
        method is required to modify it.

        The pipeline name will be updated accordingly, as it is  composed by the
        parent namespace and ID of the pipeline (e.g.
        `namespaces/luigi/pipelines/pizza-recipe-generator`).

        The authenticated namespace must be the parent of the pipeline in order to
        perform this action.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloneNamespacePipeline(self, request, context):
        """Clone a pipeline

        Clones a pipeline owned by a namespace. The new pipeline may have a different
        parent, and this can be either a namespace or an organization.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendNamespacePipelineEvent(self, request, context):
        """SendNamespacePipelineEvent
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendNamespacePipelineReleaseEvent(self, request, context):
        """SendNamespacePipelineReleaseEvent
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerNamespacePipeline(self, request, context):
        """Trigger a pipeline

        Triggers the execution of a pipeline synchronously, i.e., the result is
        sent back to the namespace right after the data is processed. This method is
        intended for real-time inference when low latency is of concern.

        The pipeline is identified by its resource name, formed by the parent namespace
        and ID of the pipeline.

        For more information, see [Run NamespacePipeline](https://www.instill.tech/docs/vdp/run).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerNamespacePipelineWithStream(self, request, context):
        """Trigger a pipeline via streaming

        Triggers the execution of a pipeline asynchronously and streams back the response.
        This method is intended for real-time inference when low latency is of concern
        and the response needs to be processed incrementally.

        The pipeline is identified by its resource name, formed by the parent namespace
        and ID of the pipeline.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerAsyncNamespacePipeline(self, request, context):
        """Trigger a pipeline asynchronously

        Triggers the execution of a pipeline asynchronously, i.e., the result
        contains the necessary information to access the result and status of the
        operation. This method is intended for cases that require long-running
        workloads.

        The pipeline is identified by its resource name, formed by the parent namespace
        and ID of the pipeline.

        For more information, see [Run NamespacePipeline](https://www.instill.tech/docs/vdp/run).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateNamespacePipelineRelease(self, request, context):
        """Create a pipeline release

        Commits the version of a pipeline, identified by its resource name, which
        is formed by the parent namespace and ID of the pipeline.

        The authenticated namespace must be the parent of the pipeline in order to
        perform this action.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListNamespacePipelineReleases(self, request, context):
        """List the releases in a pipeline

        Lists the commited versions of a pipeline, identified by its resource
        name, which is formed by the parent namespace and ID of the pipeline.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNamespacePipelineRelease(self, request, context):
        """Get a pipeline release

        Gets the details of a pipeline release, where the pipeline is identified
        by its resource name, formed by its parent namespace and ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateNamespacePipelineRelease(self, request, context):
        """Update a pipeline release

        Updates the details of a pipeline release, where the pipeline is
        identified by its resource name, formed by its parent namespace and ID.

        The authenticated namespace must be the parent of the pipeline in order to
        perform this action.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteNamespacePipelineRelease(self, request, context):
        """Delete a pipeline release

        Deletes a pipeline release, where the pipeline is identified by its
        resource name, formed by its parent namespace and ID.

        The authenticated namespace must be the parent of the pipeline in order to
        perform this action.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloneNamespacePipelineRelease(self, request, context):
        """Clone a pipeline release

        Clones a pipeline release owned by a namespace. The new pipeline may have a different
        parent, and this can be either a namespace or an organization.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerNamespacePipelineRelease(self, request, context):
        """Trigger a pipeline release

        Triggers the synchronous execution of of a pipeline. While the trigger
        endpoint (where the release version isn't specified) triggers the pipeline
        at its latest release, this method allows the client to specified any
        committed release.

        The pipeline is identified by its resource name, formed by its parent namespace
        and ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerAsyncNamespacePipelineRelease(self, request, context):
        """Trigger a pipeline release asynchronously

        Triggers the asynchronous execution of of a pipeline. While the trigger
        endpoint (where the release version isn't specified) triggers the pipeline
        at its latest release, this method allows the client to specified any
        committed release.

        The pipeline is identified by its resource name, formed by its parent namespace
        and ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateNamespaceSecret(self, request, context):
        """Create a secret

        Creates a new secret under the parenthood of an namespace.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListNamespaceSecrets(self, request, context):
        """List secrets

        Returns a paginated list of secrets that belong to the specified
        namespace.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNamespaceSecret(self, request, context):
        """Get a secret

        Returns the details of an namespace-owned secret by its resource name,
        which is defined by the parent namespace and the ID of the secret.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateNamespaceSecret(self, request, context):
        """Update a secret

        Udpates a secret, accessing it by its resource name, which is defined by

        In REST requests, only the supplied secret fields will be taken into
        account when updating the resource.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteNamespaceSecret(self, request, context):
        """Delete a secret

        Deletes a secret, accesing it by its resource name, which is defined by
        the parent namespace and the ID of the secret.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListComponentDefinitions(self, request, context):
        """List component definitions

        Returns a paginated list of component definitions, regardless their type.
        This offers a single source of truth, with pagination and filter
        capabilities, for the components that might be used in a VDP pipeline.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOperation(self, request, context):
        """Get the details of a long-running operation

        This method allows requesters to request the status and outcome of
        long-running operations such as asynchronous pipeline triggers.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUserPipeline(self, request, context):
        """The following endpoints are all deprecated

        Create a new user pipeline

        Creates a new pipeline under the parenthood of a user. Users can only
        create a pipeline as the parent of that resource (i.e. the authenticated
        user must match the `parent` path parameter).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUserPipelines(self, request, context):
        """List user pipelines

        Returns a paginated list of pipelines that belong to the specified user.
        The parent user may be different from the authenticated user, in which
        case the results will contain the pipelines that are visible to the
        latter.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserPipeline(self, request, context):
        """Get a pipeline owned by a user

        Returns the details of a user-owned pipeline by its resource name, which is defined
        by the parent user and the ID of the pipeline.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUserPipeline(self, request, context):
        """Update a pipeline owned by a user

        Udpates a pipeline, accessing it by its resource name, which is defined by
        the parent user and the ID of the pipeline. The authenticated user must be
        the parent of the pipeline in order to modify it.

        In REST requests, only the supplied pipeline fields will be taken into
        account when updating the resource.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUserPipeline(self, request, context):
        """Delete a pipeline owned by a user

        Deletes a pipeline, accesing it by its resource name, which is defined by
        the parent user and the ID of the pipeline. The authenticated user must be
        the parent of the pipeline in order to delete it.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateUserPipeline(self, request, context):
        """Validate a pipeline a pipeline owned by a user

        Validates a pipeline by its resource name, which is defined by the parent
        user and the ID of the pipeline.

        Validation checks the recipe of the pipeline and the status of its components.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenameUserPipeline(self, request, context):
        """Rename a pipeline owned by a user

        Updates the ID of a pipeline. Since this is an output-only field, a custom
        method is required to modify it.

        The pipeline name will be updated accordingly, as it is  composed by the
        parent user and ID of the pipeline (e.g.
        `users/luigi/pipelines/pizza-recipe-generator`).

        The authenticated user must be the parent of the pipeline in order to
        perform this action.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerUserPipeline(self, request, context):
        """Trigger a pipeline owned by a user

        Triggers the execution of a pipeline synchronously, i.e., the result is
        sent back to the user right after the data is processed. This method is
        intended for real-time inference when low latency is of concern.

        The pipeline is identified by its resource name, formed by the parent user
        and ID of the pipeline.

        For more information, see [Run Pipeline](https://www.instill.tech/docs/vdp/run).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerUserPipelineWithStream(self, request, context):
        """Trigger a pipeline owned by a user and stream back the response

        Triggers the execution of a pipeline asynchronously and streams back the response.
        This method is intended for real-time inference when low latency is of concern
        and the response needs to be processed incrementally.

        The pipeline is identified by its resource name, formed by the parent user
        and ID of the pipeline.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerAsyncUserPipeline(self, request, context):
        """Trigger a pipeline owned by a user asynchronously

        Triggers the execution of a pipeline asynchronously, i.e., the result
        contains the necessary information to access the result and status of the
        operation. This method is intended for cases that require long-running
        workloads.

        The pipeline is identified by its resource name, formed by the parent user
        and ID of the pipeline.

        For more information, see [Run Pipeline](https://www.instill.tech/docs/vdp/run).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUserPipelineRelease(self, request, context):
        """Release a version of a pipeline owned by a user

        Commits the version of a pipeline, identified by its resource name, which
        is formed by the parent user and ID of the pipeline.

        The authenticated user must be the parent of the pipeline in order to
        perform this action.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUserPipelineReleases(self, request, context):
        """List the releases in a pipeline owned by a user

        Lists the commited versions of a pipeline, identified by its resource
        name, which is formed by the parent user and ID of the pipeline.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserPipelineRelease(self, request, context):
        """Get a release in a pipeline owned by a user

        Gets the details of a pipeline release, where the pipeline is identified
        by its resource name, formed by its parent user and ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUserPipelineRelease(self, request, context):
        """Update a release in a pipeline owned by a user

        Updates the details of a pipeline release, where the pipeline is
        identified by its resource name, formed by its parent user and ID.

        The authenticated user must be the parent of the pipeline in order to
        perform this action.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUserPipelineRelease(self, request, context):
        """Delete a release in a pipeline owned by a user

        Deletes a pipeline release, where the pipeline is identified by its
        resource name, formed by its parent user and ID.

        The authenticated user must be the parent of the pipeline in order to
        perform this action.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestoreUserPipelineRelease(self, request, context):
        """Set the version of a pipeline owned by a user to a pinned release

        Sets the pipeline configuration to a pinned version defined by a release.

        The pipeline is identified by its resource name, formed by its parent user
        and ID.

        The authenticated user must be the parent of the pipeline in order to
        perform this action.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenameUserPipelineRelease(self, request, context):
        """Rename a release in a pipeline owned by a user

        Updates the ID of a pipeline release, where the pipeline is identified by
        its resource name, formed by the parent user and ID. Since this is an
        output-only field, a custom method is required to modify it.

        The pipeline release name will be updated accordingly, as it is  composed
        by the pipeline name and the ID of the release (e.g.
        `users/luigi/pipelines/pizza-recipe-generator/releases/v0.2.1`).

        The authenticated user must be the parent of the pipeline in order to
        perform this action.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerUserPipelineRelease(self, request, context):
        """Trigger a version of a pipeline owned by a user

        Triggers the synchronous execution of of a pipeline. While the trigger
        endpoint (where the release version isn't specified) triggers the pipeline
        at its latest release, this method allows the client to specified any
        committed release.

        The pipeline is identified by its resource name, formed by its parent user
        and ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerAsyncUserPipelineRelease(self, request, context):
        """Trigger a version of a pipeline owned by a user asynchronously

        Triggers the asynchronous execution of of a pipeline. While the trigger
        endpoint (where the release version isn't specified) triggers the pipeline
        at its latest release, this method allows the client to specified any
        committed release.

        The pipeline is identified by its resource name, formed by its parent user
        and ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOrganizationPipeline(self, request, context):
        """Create a new organization pipeline

        Creates a new pipeline under the parenthood of an organization.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOrganizationPipelines(self, request, context):
        """List organization pipelines

        Returns a paginated list of pipelines that belong to the specified
        organization.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrganizationPipeline(self, request, context):
        """Get a pipeline owned by an organization

        Returns the details of an organization-owned pipeline by its resource name,
        which is defined by the parent organization and the ID of the pipeline.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateOrganizationPipeline(self, request, context):
        """Update a pipeline owned by an organization

        Udpates a pipeline, accessing it by its resource name, which is defined by

        In REST requests, only the supplied pipeline fields will be taken into
        account when updating the resource.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteOrganizationPipeline(self, request, context):
        """Delete a pipeline owned by an organization

        Deletes a pipeline, accesing it by its resource name, which is defined by
        the parent organization and the ID of the pipeline.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateOrganizationPipeline(self, request, context):
        """Validate a pipeline a pipeline owned by an organization

        Validates a pipeline by its resource name, which is defined by the parent
        organization and the ID of the pipeline.

        Validation checks the recipe of the pipeline and the status of its
        components.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenameOrganizationPipeline(self, request, context):
        """Rename a pipeline owned by an organization

        Updates the ID of a pipeline. Since this is an output-only field, a custom
        method is required to modify it.

        The pipeline name will be updated accordingly, as it is  composed by the
        parent organization and ID of the pipeline (e.g.
        `organizations/luigi/pipelines/pizza-recipe-generator`).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerOrganizationPipelineStream(self, request, context):
        """Trigger a pipeline owned by an organization

        Triggers the execution of a pipeline synchronously, i.e., the result is sent
        back to the organization right after the data is processed. This method is
        intended for real-time inference when low latency is of concern.

        The pipeline is identified by its resource name, formed by the parent
        organization and ID of the pipeline.

        For more information, see [Run Pipeline](https://www.instill.tech/docs/vdp/run).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerOrganizationPipeline(self, request, context):
        """Trigger a pipeline owned by an organization

        Triggers the execution of a pipeline synchronously, i.e., the result is sent
        back to the organization right after the data is processed. This method is
        intended for real-time inference when low latency is of concern.

        The pipeline is identified by its resource name, formed by the parent
        organization and ID of the pipeline.

        For more information, see [Run Pipeline](https://www.instill.tech/docs/vdp/run).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerAsyncOrganizationPipeline(self, request, context):
        """Trigger a pipeline owned by an organization asynchronously

        Triggers the execution of a pipeline asynchronously, i.e., the result
        contains the necessary information to access the result and status of the
        operation. This method is intended for cases that require long-running
        workloads.

        The pipeline is identified by its resource name, formed by the parent
        organization and ID of the pipeline.

        For more information, see [Run Pipeline](https://www.instill.tech/docs/vdp/run).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOrganizationPipelineRelease(self, request, context):
        """Release a version of a pipeline owned by an organization

        Commits the version of a pipeline, identified by its resource name, which is
        formed by the parent organization and ID of the pipeline.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOrganizationPipelineReleases(self, request, context):
        """List the releases in a pipeline owned by an organization

        Lists the commited versions of a pipeline, identified by its resource name,
        which is formed by the parent organization and ID of the pipeline.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrganizationPipelineRelease(self, request, context):
        """Get a release in a pipeline owned by an organization

        Gets the details of a pipeline release, where the pipeline is identified by
        its resource name, formed by its parent organization and ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateOrganizationPipelineRelease(self, request, context):
        """Update a release in a pipeline owned by an organization

        Updates the details of a pipeline release, where the pipeline is identified
        by its resource name, formed by its parent organization and ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteOrganizationPipelineRelease(self, request, context):
        """Delete a release in a pipeline owned by an organization

        Deletes a pipeline release, where the pipeline is identified by its resource
        name, formed by its parent organization and ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestoreOrganizationPipelineRelease(self, request, context):
        """Set the version of a pipeline owned by an organization to a pinned release

        Sets the pipeline configuration to a pinned version defined by a release.

        The pipeline is identified by its resource name, formed by its parent
        organization and ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenameOrganizationPipelineRelease(self, request, context):
        """Rename a release in a pipeline owned by an organization

        Updates the ID of a pipeline release, where the pipeline is identified by
        its resource name, formed by the parent organization and ID. Since this is
        an output-only field, a custom method is required to modify it.

        The pipeline release name will be updated accordingly, as it is  composed by
        the pipeline name and the ID of the release (e.g.
        `organizations/luigi/pipelines/pizza-recipe-generator/releases/v0.2.1`).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerOrganizationPipelineRelease(self, request, context):
        """Trigger a version of a pipeline owned by an organization

        Triggers the synchronous execution of of a pipeline. While the trigger
        endpoint (where the release version isn't specified) triggers the pipeline
        at its latest release, this method allows the client to specified any
        committed release.

        The pipeline is identified by its resource name, formed by its parent
        organization and ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerAsyncOrganizationPipelineRelease(self, request, context):
        """Trigger a version of a pipeline owned by an organization asynchronously

        Triggers the asynchronous execution of of a pipeline. While the trigger
        endpoint (where the release version isn't specified) triggers the pipeline
        at its latest release, this method allows the client to specified any
        committed release.

        The pipeline is identified by its resource name, formed by its parent
        organization and ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListConnectorDefinitions(self, request, context):
        """List connector definitions

        Returns a paginated list of connector definitions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConnectorDefinition(self, request, context):
        """Get connector definition

        Returns the details of a connector definition.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOperatorDefinitions(self, request, context):
        """List operator definitions

        Returns a paginated list of operator definitions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOperatorDefinition(self, request, context):
        """Get operator definition

        Returns the details of an operator definition.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckName(self, request, context):
        """Check the availibity of a resource name

        Check whether a resource name is already in use. Currently this endpoint
        only supports pipeline and connector resource names.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUserSecret(self, request, context):
        """Create a new user secret

        Creates a new secret under the parenthood of an user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUserSecrets(self, request, context):
        """List user secrets

        Returns a paginated list of secrets that belong to the specified
        user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserSecret(self, request, context):
        """Get a secret owned by an user

        Returns the details of an user-owned secret by its resource name,
        which is defined by the parent user and the ID of the secret.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUserSecret(self, request, context):
        """Update a secret owned by an user

        Udpates a secret, accessing it by its resource name, which is defined by

        In REST requests, only the supplied secret fields will be taken into
        account when updating the resource.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUserSecret(self, request, context):
        """Delete a secret owned by an user

        Deletes a secret, accesing it by its resource name, which is defined by
        the parent user and the ID of the secret.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOrganizationSecret(self, request, context):
        """Create a new organization secret

        Creates a new secret under the parenthood of an organization.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOrganizationSecrets(self, request, context):
        """List organization secrets

        Returns a paginated list of secrets that belong to the specified
        organization.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrganizationSecret(self, request, context):
        """Get a secret owned by an organization

        Returns the details of an organization-owned secret by its resource name,
        which is defined by the parent organization and the ID of the secret.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateOrganizationSecret(self, request, context):
        """Update a secret owned by an organization

        Udpates a secret, accessing it by its resource name, which is defined by

        In REST requests, only the supplied secret fields will be taken into
        account when updating the resource.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteOrganizationSecret(self, request, context):
        """Delete a secret owned by an organization

        Deletes a secret, accesing it by its resource name, which is defined by
        the parent organization and the ID of the secret.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPipelineRuns(self, request, context):
        """List Pipeline Runs

        Returns a paginated list of runs for a given pipeline. When the requester
        is the owner of the pipeline, they will be able to all the pipeline runs,
        regardless the requester. Other requesters will only be able to see the
        runs requested by themselves.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListComponentRuns(self, request, context):
        """List Component runs

        Returns the information of each component execution within a pipeline run.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPipelineRunsByRequester(self, request, context):
        """List Pipeline Runs of a Namespace (user or organization)

        Returns a paginated list of runs for 1 or more pipelines. This is mainly used by dashboard.
        The requester can view all the runs by the requester across different pipelines.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListNamespaceConnections(self, request, context):
        """List namespace connections

        Returns a paginated list of connections created by a namespace.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNamespaceConnection(self, request, context):
        """Get a namespace connection

        Returns the details of a connection.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateNamespaceConnection(self, request, context):
        """Create a connection

        Creates a connection under the ownership of a namespace.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateNamespaceConnection(self, request, context):
        """Update a connection

        Updates a connection with the supplied connection fields.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteNamespaceConnection(self, request, context):
        """Delete a connection

        Deletes a connection.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TestNamespaceConnection(self, request, context):
        """Test a connection

        Makes a request to the 3rd party app that the connection is configured to
        communicate with, and checks the result of the call. If the test fails,
        the response status and error message will provide more information about
        the failure.

        Note that this action might affect the quota or billing of the integrated
        account in the 3rd party app.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPipelineIDsByConnectionID(self, request, context):
        """List pipelines that reference a connection

        Returns a paginated list with the IDs of the pipelines that reference a
        given connection. All the pipelines will belong to the same namespace as
        the connection.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListIntegrations(self, request, context):
        """List integrations

        Returns a paginated list of available integrations.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIntegration(self, request, context):
        """Get an integration

        Returns the details of an integration.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PipelinePublicServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Liveness': grpc.unary_unary_rpc_method_handler(
                    servicer.Liveness,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.LivenessRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.LivenessResponse.SerializeToString,
            ),
            'Readiness': grpc.unary_unary_rpc_method_handler(
                    servicer.Readiness,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ReadinessRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ReadinessResponse.SerializeToString,
            ),
            'GetHubStats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHubStats,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetHubStatsRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetHubStatsResponse.SerializeToString,
            ),
            'ListPipelines': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPipelines,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListPipelinesRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListPipelinesResponse.SerializeToString,
            ),
            'LookUpPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.LookUpPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.LookUpPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.LookUpPipelineResponse.SerializeToString,
            ),
            'ListNamespacePipelines': grpc.unary_unary_rpc_method_handler(
                    servicer.ListNamespacePipelines,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListNamespacePipelinesRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListNamespacePipelinesResponse.SerializeToString,
            ),
            'CreateNamespacePipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateNamespacePipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateNamespacePipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateNamespacePipelineResponse.SerializeToString,
            ),
            'GetNamespacePipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNamespacePipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetNamespacePipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetNamespacePipelineResponse.SerializeToString,
            ),
            'UpdateNamespacePipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateNamespacePipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateNamespacePipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateNamespacePipelineResponse.SerializeToString,
            ),
            'DeleteNamespacePipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteNamespacePipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteNamespacePipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteNamespacePipelineResponse.SerializeToString,
            ),
            'ValidateNamespacePipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateNamespacePipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateNamespacePipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateNamespacePipelineResponse.SerializeToString,
            ),
            'RenameNamespacePipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.RenameNamespacePipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameNamespacePipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameNamespacePipelineResponse.SerializeToString,
            ),
            'CloneNamespacePipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.CloneNamespacePipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CloneNamespacePipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CloneNamespacePipelineResponse.SerializeToString,
            ),
            'SendNamespacePipelineEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.SendNamespacePipelineEvent,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.SendNamespacePipelineEventRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.SendNamespacePipelineEventResponse.SerializeToString,
            ),
            'SendNamespacePipelineReleaseEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.SendNamespacePipelineReleaseEvent,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.SendNamespacePipelineReleaseEventRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.SendNamespacePipelineReleaseEventResponse.SerializeToString,
            ),
            'TriggerNamespacePipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerNamespacePipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerNamespacePipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerNamespacePipelineResponse.SerializeToString,
            ),
            'TriggerNamespacePipelineWithStream': grpc.unary_stream_rpc_method_handler(
                    servicer.TriggerNamespacePipelineWithStream,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerNamespacePipelineWithStreamRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerNamespacePipelineWithStreamResponse.SerializeToString,
            ),
            'TriggerAsyncNamespacePipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerAsyncNamespacePipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncNamespacePipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncNamespacePipelineResponse.SerializeToString,
            ),
            'CreateNamespacePipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateNamespacePipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateNamespacePipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateNamespacePipelineReleaseResponse.SerializeToString,
            ),
            'ListNamespacePipelineReleases': grpc.unary_unary_rpc_method_handler(
                    servicer.ListNamespacePipelineReleases,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListNamespacePipelineReleasesRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListNamespacePipelineReleasesResponse.SerializeToString,
            ),
            'GetNamespacePipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNamespacePipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetNamespacePipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetNamespacePipelineReleaseResponse.SerializeToString,
            ),
            'UpdateNamespacePipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateNamespacePipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateNamespacePipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateNamespacePipelineReleaseResponse.SerializeToString,
            ),
            'DeleteNamespacePipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteNamespacePipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteNamespacePipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteNamespacePipelineReleaseResponse.SerializeToString,
            ),
            'CloneNamespacePipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.CloneNamespacePipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CloneNamespacePipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CloneNamespacePipelineReleaseResponse.SerializeToString,
            ),
            'TriggerNamespacePipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerNamespacePipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerNamespacePipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerNamespacePipelineReleaseResponse.SerializeToString,
            ),
            'TriggerAsyncNamespacePipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerAsyncNamespacePipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncNamespacePipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncNamespacePipelineReleaseResponse.SerializeToString,
            ),
            'CreateNamespaceSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateNamespaceSecret,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.CreateNamespaceSecretRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.CreateNamespaceSecretResponse.SerializeToString,
            ),
            'ListNamespaceSecrets': grpc.unary_unary_rpc_method_handler(
                    servicer.ListNamespaceSecrets,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.ListNamespaceSecretsRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.ListNamespaceSecretsResponse.SerializeToString,
            ),
            'GetNamespaceSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNamespaceSecret,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.GetNamespaceSecretRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.GetNamespaceSecretResponse.SerializeToString,
            ),
            'UpdateNamespaceSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateNamespaceSecret,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.UpdateNamespaceSecretRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.UpdateNamespaceSecretResponse.SerializeToString,
            ),
            'DeleteNamespaceSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteNamespaceSecret,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.DeleteNamespaceSecretRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.DeleteNamespaceSecretResponse.SerializeToString,
            ),
            'ListComponentDefinitions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListComponentDefinitions,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.ListComponentDefinitionsRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.ListComponentDefinitionsResponse.SerializeToString,
            ),
            'GetOperation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOperation,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOperationRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOperationResponse.SerializeToString,
            ),
            'CreateUserPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUserPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateUserPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateUserPipelineResponse.SerializeToString,
            ),
            'ListUserPipelines': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUserPipelines,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListUserPipelinesRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListUserPipelinesResponse.SerializeToString,
            ),
            'GetUserPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetUserPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetUserPipelineResponse.SerializeToString,
            ),
            'UpdateUserPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUserPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateUserPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateUserPipelineResponse.SerializeToString,
            ),
            'DeleteUserPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUserPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteUserPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteUserPipelineResponse.SerializeToString,
            ),
            'ValidateUserPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateUserPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateUserPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateUserPipelineResponse.SerializeToString,
            ),
            'RenameUserPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.RenameUserPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameUserPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameUserPipelineResponse.SerializeToString,
            ),
            'TriggerUserPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerUserPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineResponse.SerializeToString,
            ),
            'TriggerUserPipelineWithStream': grpc.unary_stream_rpc_method_handler(
                    servicer.TriggerUserPipelineWithStream,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineWithStreamRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineWithStreamResponse.SerializeToString,
            ),
            'TriggerAsyncUserPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerAsyncUserPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncUserPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncUserPipelineResponse.SerializeToString,
            ),
            'CreateUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateUserPipelineReleaseResponse.SerializeToString,
            ),
            'ListUserPipelineReleases': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUserPipelineReleases,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListUserPipelineReleasesRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListUserPipelineReleasesResponse.SerializeToString,
            ),
            'GetUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetUserPipelineReleaseResponse.SerializeToString,
            ),
            'UpdateUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateUserPipelineReleaseResponse.SerializeToString,
            ),
            'DeleteUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteUserPipelineReleaseResponse.SerializeToString,
            ),
            'RestoreUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.RestoreUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RestoreUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RestoreUserPipelineReleaseResponse.SerializeToString,
            ),
            'RenameUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.RenameUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameUserPipelineReleaseResponse.SerializeToString,
            ),
            'TriggerUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineReleaseResponse.SerializeToString,
            ),
            'TriggerAsyncUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerAsyncUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncUserPipelineReleaseResponse.SerializeToString,
            ),
            'CreateOrganizationPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrganizationPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateOrganizationPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateOrganizationPipelineResponse.SerializeToString,
            ),
            'ListOrganizationPipelines': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOrganizationPipelines,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListOrganizationPipelinesRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListOrganizationPipelinesResponse.SerializeToString,
            ),
            'GetOrganizationPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrganizationPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOrganizationPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOrganizationPipelineResponse.SerializeToString,
            ),
            'UpdateOrganizationPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateOrganizationPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateOrganizationPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateOrganizationPipelineResponse.SerializeToString,
            ),
            'DeleteOrganizationPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteOrganizationPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteOrganizationPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteOrganizationPipelineResponse.SerializeToString,
            ),
            'ValidateOrganizationPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateOrganizationPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateOrganizationPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateOrganizationPipelineResponse.SerializeToString,
            ),
            'RenameOrganizationPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.RenameOrganizationPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameOrganizationPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameOrganizationPipelineResponse.SerializeToString,
            ),
            'TriggerOrganizationPipelineStream': grpc.unary_stream_rpc_method_handler(
                    servicer.TriggerOrganizationPipelineStream,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineStreamRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineStreamResponse.SerializeToString,
            ),
            'TriggerOrganizationPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerOrganizationPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineResponse.SerializeToString,
            ),
            'TriggerAsyncOrganizationPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerAsyncOrganizationPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncOrganizationPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncOrganizationPipelineResponse.SerializeToString,
            ),
            'CreateOrganizationPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrganizationPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateOrganizationPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateOrganizationPipelineReleaseResponse.SerializeToString,
            ),
            'ListOrganizationPipelineReleases': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOrganizationPipelineReleases,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListOrganizationPipelineReleasesRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListOrganizationPipelineReleasesResponse.SerializeToString,
            ),
            'GetOrganizationPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrganizationPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOrganizationPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOrganizationPipelineReleaseResponse.SerializeToString,
            ),
            'UpdateOrganizationPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateOrganizationPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateOrganizationPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateOrganizationPipelineReleaseResponse.SerializeToString,
            ),
            'DeleteOrganizationPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteOrganizationPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteOrganizationPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteOrganizationPipelineReleaseResponse.SerializeToString,
            ),
            'RestoreOrganizationPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.RestoreOrganizationPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RestoreOrganizationPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RestoreOrganizationPipelineReleaseResponse.SerializeToString,
            ),
            'RenameOrganizationPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.RenameOrganizationPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameOrganizationPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameOrganizationPipelineReleaseResponse.SerializeToString,
            ),
            'TriggerOrganizationPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerOrganizationPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineReleaseResponse.SerializeToString,
            ),
            'TriggerAsyncOrganizationPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerAsyncOrganizationPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncOrganizationPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncOrganizationPipelineReleaseResponse.SerializeToString,
            ),
            'ListConnectorDefinitions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListConnectorDefinitions,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.ListConnectorDefinitionsRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.ListConnectorDefinitionsResponse.SerializeToString,
            ),
            'GetConnectorDefinition': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConnectorDefinition,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.GetConnectorDefinitionRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.GetConnectorDefinitionResponse.SerializeToString,
            ),
            'ListOperatorDefinitions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOperatorDefinitions,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.ListOperatorDefinitionsRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.ListOperatorDefinitionsResponse.SerializeToString,
            ),
            'GetOperatorDefinition': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOperatorDefinition,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.GetOperatorDefinitionRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.GetOperatorDefinitionResponse.SerializeToString,
            ),
            'CheckName': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckName,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_common__pb2.CheckNameRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_common__pb2.CheckNameResponse.SerializeToString,
            ),
            'CreateUserSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUserSecret,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.CreateUserSecretRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.CreateUserSecretResponse.SerializeToString,
            ),
            'ListUserSecrets': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUserSecrets,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.ListUserSecretsRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.ListUserSecretsResponse.SerializeToString,
            ),
            'GetUserSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserSecret,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.GetUserSecretRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.GetUserSecretResponse.SerializeToString,
            ),
            'UpdateUserSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUserSecret,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.UpdateUserSecretRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.UpdateUserSecretResponse.SerializeToString,
            ),
            'DeleteUserSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUserSecret,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.DeleteUserSecretRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.DeleteUserSecretResponse.SerializeToString,
            ),
            'CreateOrganizationSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrganizationSecret,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.CreateOrganizationSecretRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.CreateOrganizationSecretResponse.SerializeToString,
            ),
            'ListOrganizationSecrets': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOrganizationSecrets,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.ListOrganizationSecretsRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.ListOrganizationSecretsResponse.SerializeToString,
            ),
            'GetOrganizationSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrganizationSecret,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.GetOrganizationSecretRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.GetOrganizationSecretResponse.SerializeToString,
            ),
            'UpdateOrganizationSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateOrganizationSecret,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.UpdateOrganizationSecretRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.UpdateOrganizationSecretResponse.SerializeToString,
            ),
            'DeleteOrganizationSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteOrganizationSecret,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.DeleteOrganizationSecretRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.DeleteOrganizationSecretResponse.SerializeToString,
            ),
            'ListPipelineRuns': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPipelineRuns,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListPipelineRunsRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListPipelineRunsResponse.SerializeToString,
            ),
            'ListComponentRuns': grpc.unary_unary_rpc_method_handler(
                    servicer.ListComponentRuns,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListComponentRunsRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListComponentRunsResponse.SerializeToString,
            ),
            'ListPipelineRunsByRequester': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPipelineRunsByRequester,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListPipelineRunsByRequesterRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListPipelineRunsByRequesterResponse.SerializeToString,
            ),
            'ListNamespaceConnections': grpc.unary_unary_rpc_method_handler(
                    servicer.ListNamespaceConnections,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.ListNamespaceConnectionsRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.ListNamespaceConnectionsResponse.SerializeToString,
            ),
            'GetNamespaceConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNamespaceConnection,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.GetNamespaceConnectionRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.GetNamespaceConnectionResponse.SerializeToString,
            ),
            'CreateNamespaceConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateNamespaceConnection,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.CreateNamespaceConnectionRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.CreateNamespaceConnectionResponse.SerializeToString,
            ),
            'UpdateNamespaceConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateNamespaceConnection,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.UpdateNamespaceConnectionRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.UpdateNamespaceConnectionResponse.SerializeToString,
            ),
            'DeleteNamespaceConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteNamespaceConnection,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.DeleteNamespaceConnectionRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.DeleteNamespaceConnectionResponse.SerializeToString,
            ),
            'TestNamespaceConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.TestNamespaceConnection,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.TestNamespaceConnectionRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.TestNamespaceConnectionResponse.SerializeToString,
            ),
            'ListPipelineIDsByConnectionID': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPipelineIDsByConnectionID,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.ListPipelineIDsByConnectionIDRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.ListPipelineIDsByConnectionIDResponse.SerializeToString,
            ),
            'ListIntegrations': grpc.unary_unary_rpc_method_handler(
                    servicer.ListIntegrations,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.ListIntegrationsRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.ListIntegrationsResponse.SerializeToString,
            ),
            'GetIntegration': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIntegration,
                    request_deserializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.GetIntegrationRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.GetIntegrationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'vdp.pipeline.v1beta.PipelinePublicService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PipelinePublicService(object):
    """VDP

    PipelinePublicService exposes the public VDP endpoints that allow clients to
    manage pipelines.
    """

    @staticmethod
    def Liveness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/Liveness',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.LivenessRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.LivenessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Readiness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/Readiness',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ReadinessRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ReadinessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHubStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/GetHubStats',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetHubStatsRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetHubStatsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPipelines(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListPipelines',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListPipelinesRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListPipelinesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LookUpPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/LookUpPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.LookUpPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.LookUpPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListNamespacePipelines(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListNamespacePipelines',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListNamespacePipelinesRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListNamespacePipelinesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateNamespacePipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/CreateNamespacePipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateNamespacePipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateNamespacePipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNamespacePipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/GetNamespacePipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetNamespacePipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetNamespacePipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateNamespacePipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/UpdateNamespacePipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateNamespacePipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateNamespacePipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteNamespacePipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/DeleteNamespacePipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteNamespacePipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteNamespacePipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ValidateNamespacePipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ValidateNamespacePipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateNamespacePipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateNamespacePipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenameNamespacePipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/RenameNamespacePipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameNamespacePipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameNamespacePipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloneNamespacePipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/CloneNamespacePipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CloneNamespacePipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CloneNamespacePipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendNamespacePipelineEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/SendNamespacePipelineEvent',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.SendNamespacePipelineEventRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.SendNamespacePipelineEventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendNamespacePipelineReleaseEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/SendNamespacePipelineReleaseEvent',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.SendNamespacePipelineReleaseEventRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.SendNamespacePipelineReleaseEventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerNamespacePipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TriggerNamespacePipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerNamespacePipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerNamespacePipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerNamespacePipelineWithStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TriggerNamespacePipelineWithStream',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerNamespacePipelineWithStreamRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerNamespacePipelineWithStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerAsyncNamespacePipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TriggerAsyncNamespacePipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncNamespacePipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncNamespacePipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateNamespacePipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/CreateNamespacePipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateNamespacePipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateNamespacePipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListNamespacePipelineReleases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListNamespacePipelineReleases',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListNamespacePipelineReleasesRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListNamespacePipelineReleasesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNamespacePipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/GetNamespacePipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetNamespacePipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetNamespacePipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateNamespacePipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/UpdateNamespacePipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateNamespacePipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateNamespacePipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteNamespacePipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/DeleteNamespacePipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteNamespacePipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteNamespacePipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloneNamespacePipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/CloneNamespacePipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CloneNamespacePipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CloneNamespacePipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerNamespacePipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TriggerNamespacePipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerNamespacePipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerNamespacePipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerAsyncNamespacePipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TriggerAsyncNamespacePipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncNamespacePipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncNamespacePipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateNamespaceSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/CreateNamespaceSecret',
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.CreateNamespaceSecretRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.CreateNamespaceSecretResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListNamespaceSecrets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListNamespaceSecrets',
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.ListNamespaceSecretsRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.ListNamespaceSecretsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNamespaceSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/GetNamespaceSecret',
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.GetNamespaceSecretRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.GetNamespaceSecretResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateNamespaceSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/UpdateNamespaceSecret',
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.UpdateNamespaceSecretRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.UpdateNamespaceSecretResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteNamespaceSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/DeleteNamespaceSecret',
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.DeleteNamespaceSecretRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.DeleteNamespaceSecretResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListComponentDefinitions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListComponentDefinitions',
            vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.ListComponentDefinitionsRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.ListComponentDefinitionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOperation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/GetOperation',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOperationRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOperationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUserPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/CreateUserPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateUserPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateUserPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListUserPipelines(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListUserPipelines',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListUserPipelinesRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListUserPipelinesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/GetUserPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetUserPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetUserPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUserPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/UpdateUserPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateUserPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateUserPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUserPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/DeleteUserPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteUserPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteUserPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ValidateUserPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ValidateUserPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateUserPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateUserPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenameUserPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/RenameUserPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameUserPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameUserPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerUserPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TriggerUserPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerUserPipelineWithStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TriggerUserPipelineWithStream',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineWithStreamRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineWithStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerAsyncUserPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TriggerAsyncUserPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncUserPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncUserPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/CreateUserPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListUserPipelineReleases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListUserPipelineReleases',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListUserPipelineReleasesRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListUserPipelineReleasesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/GetUserPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/UpdateUserPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/DeleteUserPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RestoreUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/RestoreUserPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RestoreUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RestoreUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenameUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/RenameUserPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TriggerUserPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerAsyncUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TriggerAsyncUserPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateOrganizationPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/CreateOrganizationPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateOrganizationPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateOrganizationPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListOrganizationPipelines(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListOrganizationPipelines',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListOrganizationPipelinesRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListOrganizationPipelinesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrganizationPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/GetOrganizationPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOrganizationPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOrganizationPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateOrganizationPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/UpdateOrganizationPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateOrganizationPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateOrganizationPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteOrganizationPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/DeleteOrganizationPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteOrganizationPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteOrganizationPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ValidateOrganizationPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ValidateOrganizationPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateOrganizationPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ValidateOrganizationPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenameOrganizationPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/RenameOrganizationPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameOrganizationPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameOrganizationPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerOrganizationPipelineStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TriggerOrganizationPipelineStream',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineStreamRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerOrganizationPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TriggerOrganizationPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerAsyncOrganizationPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TriggerAsyncOrganizationPipeline',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncOrganizationPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncOrganizationPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateOrganizationPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/CreateOrganizationPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateOrganizationPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.CreateOrganizationPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListOrganizationPipelineReleases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListOrganizationPipelineReleases',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListOrganizationPipelineReleasesRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListOrganizationPipelineReleasesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrganizationPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/GetOrganizationPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOrganizationPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.GetOrganizationPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateOrganizationPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/UpdateOrganizationPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateOrganizationPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.UpdateOrganizationPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteOrganizationPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/DeleteOrganizationPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteOrganizationPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.DeleteOrganizationPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RestoreOrganizationPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/RestoreOrganizationPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RestoreOrganizationPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RestoreOrganizationPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenameOrganizationPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/RenameOrganizationPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameOrganizationPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.RenameOrganizationPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerOrganizationPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TriggerOrganizationPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerOrganizationPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerAsyncOrganizationPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TriggerAsyncOrganizationPipelineRelease',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncOrganizationPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.TriggerAsyncOrganizationPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListConnectorDefinitions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListConnectorDefinitions',
            vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.ListConnectorDefinitionsRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.ListConnectorDefinitionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConnectorDefinition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/GetConnectorDefinition',
            vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.GetConnectorDefinitionRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.GetConnectorDefinitionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListOperatorDefinitions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListOperatorDefinitions',
            vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.ListOperatorDefinitionsRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.ListOperatorDefinitionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOperatorDefinition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/GetOperatorDefinition',
            vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.GetOperatorDefinitionRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_component__definition__pb2.GetOperatorDefinitionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/CheckName',
            vdp_dot_pipeline_dot_v1beta_dot_common__pb2.CheckNameRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_common__pb2.CheckNameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUserSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/CreateUserSecret',
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.CreateUserSecretRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.CreateUserSecretResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListUserSecrets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListUserSecrets',
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.ListUserSecretsRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.ListUserSecretsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/GetUserSecret',
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.GetUserSecretRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.GetUserSecretResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUserSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/UpdateUserSecret',
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.UpdateUserSecretRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.UpdateUserSecretResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUserSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/DeleteUserSecret',
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.DeleteUserSecretRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.DeleteUserSecretResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateOrganizationSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/CreateOrganizationSecret',
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.CreateOrganizationSecretRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.CreateOrganizationSecretResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListOrganizationSecrets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListOrganizationSecrets',
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.ListOrganizationSecretsRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.ListOrganizationSecretsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrganizationSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/GetOrganizationSecret',
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.GetOrganizationSecretRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.GetOrganizationSecretResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateOrganizationSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/UpdateOrganizationSecret',
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.UpdateOrganizationSecretRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.UpdateOrganizationSecretResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteOrganizationSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/DeleteOrganizationSecret',
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.DeleteOrganizationSecretRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_secret__pb2.DeleteOrganizationSecretResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPipelineRuns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListPipelineRuns',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListPipelineRunsRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListPipelineRunsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListComponentRuns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListComponentRuns',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListComponentRunsRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListComponentRunsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPipelineRunsByRequester(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListPipelineRunsByRequester',
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListPipelineRunsByRequesterRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_pipeline__pb2.ListPipelineRunsByRequesterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListNamespaceConnections(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListNamespaceConnections',
            vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.ListNamespaceConnectionsRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.ListNamespaceConnectionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNamespaceConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/GetNamespaceConnection',
            vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.GetNamespaceConnectionRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.GetNamespaceConnectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateNamespaceConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/CreateNamespaceConnection',
            vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.CreateNamespaceConnectionRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.CreateNamespaceConnectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateNamespaceConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/UpdateNamespaceConnection',
            vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.UpdateNamespaceConnectionRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.UpdateNamespaceConnectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteNamespaceConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/DeleteNamespaceConnection',
            vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.DeleteNamespaceConnectionRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.DeleteNamespaceConnectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TestNamespaceConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/TestNamespaceConnection',
            vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.TestNamespaceConnectionRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.TestNamespaceConnectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPipelineIDsByConnectionID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListPipelineIDsByConnectionID',
            vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.ListPipelineIDsByConnectionIDRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.ListPipelineIDsByConnectionIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListIntegrations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/ListIntegrations',
            vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.ListIntegrationsRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.ListIntegrationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetIntegration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1beta.PipelinePublicService/GetIntegration',
            vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.GetIntegrationRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1beta_dot_integration__pb2.GetIntegrationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
