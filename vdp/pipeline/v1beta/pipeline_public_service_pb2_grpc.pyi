"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import collections.abc
import grpc
import grpc.aio
import typing
import vdp.pipeline.v1beta.connector_definition_pb2
import vdp.pipeline.v1beta.connector_pb2
import vdp.pipeline.v1beta.operator_definition_pb2
import vdp.pipeline.v1beta.pipeline_pb2

_T = typing.TypeVar('_T')

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta):
    ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore
    ...

class PipelinePublicServiceStub:
    """Pipeline service responds to external access"""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Liveness: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.LivenessRequest,
        vdp.pipeline.v1beta.pipeline_pb2.LivenessResponse,
    ]
    """Liveness method receives a LivenessRequest message and returns a
    LivenessResponse message.
    See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
    """
    Readiness: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.ReadinessRequest,
        vdp.pipeline.v1beta.pipeline_pb2.ReadinessResponse,
    ]
    """Readiness method receives a ReadinessRequest message and returns a
    ReadinessResponse message.
    See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
    """
    ListPipelines: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.ListPipelinesRequest,
        vdp.pipeline.v1beta.pipeline_pb2.ListPipelinesResponse,
    ]
    """ListPipelines method receives a ListPipelinesRequest message and returns a
    ListPipelinesResponse message.
    """
    LookUpPipeline: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.LookUpPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.LookUpPipelineResponse,
    ]
    """LookUpPipeline method receives a LookUpPipelineRequest message and returns
    a LookUpPipelineResponse
    """
    CreateUserPipeline: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.CreateUserPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.CreateUserPipelineResponse,
    ]
    """CreateUserPipeline method receives a CreateUserPipelineRequest message and returns
    a CreateUserPipelineResponse message.
    """
    ListUserPipelines: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.ListUserPipelinesRequest,
        vdp.pipeline.v1beta.pipeline_pb2.ListUserPipelinesResponse,
    ]
    """ListUserPipelines method receives a ListUserPipelinesRequest message and returns a
    ListUserPipelinesResponse message.
    """
    GetUserPipeline: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.GetUserPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.GetUserPipelineResponse,
    ]
    """GetUserPipeline method receives a GetUserPipelineRequest message and returns a
    GetUserPipelineResponse message.
    """
    UpdateUserPipeline: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.UpdateUserPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.UpdateUserPipelineResponse,
    ]
    """UpdateUserPipeline method receives a UpdateUserPipelineRequest message and returns
    a UpdateUserPipelineResponse message.
    """
    DeleteUserPipeline: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.DeleteUserPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.DeleteUserPipelineResponse,
    ]
    """DeleteUserPipeline method receives a DeleteUserPipelineRequest message and returns
    a DeleteUserPipelineResponse message.
    """
    ValidateUserPipeline: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.ValidateUserPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.ValidateUserPipelineResponse,
    ]
    """Validate a pipeline."""
    RenameUserPipeline: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.RenameUserPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.RenameUserPipelineResponse,
    ]
    """RenameUserPipeline method receives a RenameUserPipelineRequest message and returns
    a RenameUserPipelineResponse message.
    """
    TriggerUserPipeline: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.TriggerUserPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.TriggerUserPipelineResponse,
    ]
    """TriggerUserPipeline method receives a TriggerUserPipelineRequest message
    and returns a TriggerUserPipelineResponse.
    """
    TriggerAsyncUserPipeline: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncUserPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncUserPipelineResponse,
    ]
    """TriggerAsyncUserPipeline method receives a TriggerAsyncUserPipelineRequest message and
    returns a TriggerAsyncUserPipelineResponse.
    """
    CreateUserPipelineRelease: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.CreateUserPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.CreateUserPipelineReleaseResponse,
    ]
    """CreateUserPipelineRelease method receives a CreateUserPipelineReleaseRequest message and returns
    a CreateUserPipelineReleaseResponse message.
    """
    ListUserPipelineReleases: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.ListUserPipelineReleasesRequest,
        vdp.pipeline.v1beta.pipeline_pb2.ListUserPipelineReleasesResponse,
    ]
    """ListUserPipelineReleases method receives a ListUserPipelineReleasesRequest message and returns a
    ListUserPipelineReleasesResponse message.
    """
    GetUserPipelineRelease: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.GetUserPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.GetUserPipelineReleaseResponse,
    ]
    """GetUserPipelineRelease method receives a GetUserPipelineReleaseRequest message and returns a
    GetUserPipelineReleaseResponse message.
    """
    UpdateUserPipelineRelease: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.UpdateUserPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.UpdateUserPipelineReleaseResponse,
    ]
    """UpdateUserPipelineRelease method receives a UpdateUserPipelineReleaseRequest message and returns
    a UpdateUserPipelineReleaseResponse message.
    """
    DeleteUserPipelineRelease: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.DeleteUserPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.DeleteUserPipelineReleaseResponse,
    ]
    """DeleteUserPipelineRelease method receives a DeleteUserPipelineReleaseRequest message and returns
    a DeleteUserPipelineReleaseResponse message.
    """
    RestoreUserPipelineRelease: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.RestoreUserPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.RestoreUserPipelineReleaseResponse,
    ]
    """RestoreUserPipelineRelease method receives a RestoreUserPipelineReleaseRequest message
    and returns a RestoreUserPipelineReleaseResponse
    """
    WatchUserPipelineRelease: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.WatchUserPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.WatchUserPipelineReleaseResponse,
    ]
    """WatchUserPipelineRelease method receives a WatchUserPipelineReleaseRequest message
    and returns a WatchUserPipelineReleaseResponse
    """
    RenameUserPipelineRelease: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.RenameUserPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.RenameUserPipelineReleaseResponse,
    ]
    """RenameUserPipelineRelease method receives a RenameUserPipelineReleaseRequest message and returns
    a RenameUserPipelineReleaseResponse message.
    """
    TriggerUserPipelineRelease: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.TriggerUserPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.TriggerUserPipelineReleaseResponse,
    ]
    """TriggerUserPipelineRelease method receives a TriggeUserPipelineReleaseRequest message
    and returns a TriggerPipelineReleasePipelineResponse.
    """
    TriggerAsyncUserPipelineRelease: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncUserPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncUserPipelineReleaseResponse,
    ]
    """TriggerAsyncUserPipelineRelease method receives a TriggerAsyncUserPipelineReleaseRequest message and
    returns a TriggerAsyncUserPipelineReleaseResponse.
    """
    CreateOrganizationPipeline: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.CreateOrganizationPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.CreateOrganizationPipelineResponse,
    ]
    """CreateOrganizationPipeline method receives a CreateOrganizationPipelineRequest message and returns
    a CreateOrganizationPipelineResponse message.
    """
    ListOrganizationPipelines: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.ListOrganizationPipelinesRequest,
        vdp.pipeline.v1beta.pipeline_pb2.ListOrganizationPipelinesResponse,
    ]
    """ListOrganizationPipelines method receives a ListOrganizationPipelinesRequest message and returns a
    ListOrganizationPipelinesResponse message.
    """
    GetOrganizationPipeline: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.GetOrganizationPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.GetOrganizationPipelineResponse,
    ]
    """GetOrganizationPipeline method receives a GetOrganizationPipelineRequest message and returns a
    GetOrganizationPipelineResponse message.
    """
    UpdateOrganizationPipeline: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.UpdateOrganizationPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.UpdateOrganizationPipelineResponse,
    ]
    """UpdateOrganizationPipeline method receives a UpdateOrganizationPipelineRequest message and returns
    a UpdateOrganizationPipelineResponse message.
    """
    DeleteOrganizationPipeline: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.DeleteOrganizationPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.DeleteOrganizationPipelineResponse,
    ]
    """DeleteOrganizationPipeline method receives a DeleteOrganizationPipelineRequest message and returns
    a DeleteOrganizationPipelineResponse message.
    """
    ValidateOrganizationPipeline: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.ValidateOrganizationPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.ValidateOrganizationPipelineResponse,
    ]
    """Validate a pipeline."""
    RenameOrganizationPipeline: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.RenameOrganizationPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.RenameOrganizationPipelineResponse,
    ]
    """RenameOrganizationPipeline method receives a RenameOrganizationPipelineRequest message and returns
    a RenameOrganizationPipelineResponse message.
    """
    TriggerOrganizationPipeline: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.TriggerOrganizationPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.TriggerOrganizationPipelineResponse,
    ]
    """TriggerOrganizationPipeline method receives a TriggerOrganizationPipelineRequest message
    and returns a TriggerOrganizationPipelineResponse.
    """
    TriggerAsyncOrganizationPipeline: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncOrganizationPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncOrganizationPipelineResponse,
    ]
    """TriggerAsyncOrganizationPipeline method receives a TriggerAsyncOrganizationPipelineRequest message and
    returns a TriggerAsyncOrganizationPipelineResponse.
    """
    CreateOrganizationPipelineRelease: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.CreateOrganizationPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.CreateOrganizationPipelineReleaseResponse,
    ]
    """CreateOrganizationPipelineRelease method receives a CreateOrganizationPipelineReleaseRequest message and returns
    a CreateOrganizationPipelineReleaseResponse message.
    """
    ListOrganizationPipelineReleases: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.ListOrganizationPipelineReleasesRequest,
        vdp.pipeline.v1beta.pipeline_pb2.ListOrganizationPipelineReleasesResponse,
    ]
    """ListOrganizationPipelineReleases method receives a ListOrganizationPipelineReleasesRequest message and returns a
    ListOrganizationPipelineReleasesResponse message.
    """
    GetOrganizationPipelineRelease: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.GetOrganizationPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.GetOrganizationPipelineReleaseResponse,
    ]
    """GetOrganizationPipelineRelease method receives a GetOrganizationPipelineReleaseRequest message and returns a
    GetOrganizationPipelineReleaseResponse message.
    """
    UpdateOrganizationPipelineRelease: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.UpdateOrganizationPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.UpdateOrganizationPipelineReleaseResponse,
    ]
    """UpdateOrganizationPipelineRelease method receives a UpdateOrganizationPipelineReleaseRequest message and returns
    a UpdateOrganizationPipelineReleaseResponse message.
    """
    DeleteOrganizationPipelineRelease: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.DeleteOrganizationPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.DeleteOrganizationPipelineReleaseResponse,
    ]
    """DeleteOrganizationPipelineRelease method receives a DeleteOrganizationPipelineReleaseRequest message and returns
    a DeleteOrganizationPipelineReleaseResponse message.
    """
    RestoreOrganizationPipelineRelease: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.RestoreOrganizationPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.RestoreOrganizationPipelineReleaseResponse,
    ]
    """RestoreOrganizationPipelineRelease method receives a RestoreOrganizationPipelineReleaseRequest message
    and returns a RestoreOrganizationPipelineReleaseResponse
    """
    WatchOrganizationPipelineRelease: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.WatchOrganizationPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.WatchOrganizationPipelineReleaseResponse,
    ]
    """WatchOrganizationPipelineRelease method receives a WatchOrganizationPipelineReleaseRequest message
    and returns a WatchOrganizationPipelineReleaseResponse
    """
    RenameOrganizationPipelineRelease: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.RenameOrganizationPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.RenameOrganizationPipelineReleaseResponse,
    ]
    """RenameOrganizationPipelineRelease method receives a RenameOrganizationPipelineReleaseRequest message and returns
    a RenameOrganizationPipelineReleaseResponse message.
    """
    TriggerOrganizationPipelineRelease: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.TriggerOrganizationPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.TriggerOrganizationPipelineReleaseResponse,
    ]
    """TriggerOrganizationPipelineRelease method receives a TriggeOrganizationPipelineReleaseRequest message
    and returns a TriggerPipelineReleasePipelineResponse.
    """
    TriggerAsyncOrganizationPipelineRelease: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncOrganizationPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncOrganizationPipelineReleaseResponse,
    ]
    """TriggerAsyncOrganizationPipelineRelease method receives a TriggerAsyncOrganizationPipelineReleaseRequest message and
    returns a TriggerAsyncOrganizationPipelineReleaseResponse.
    """
    GetOperation: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.GetOperationRequest,
        vdp.pipeline.v1beta.pipeline_pb2.GetOperationResponse,
    ]
    """*Longrunning operation methods

    GetOperation method receives a
    GetOperationRequest message and returns a
    GetOperationResponse message.
    """
    ListConnectorDefinitions: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_definition_pb2.ListConnectorDefinitionsRequest,
        vdp.pipeline.v1beta.connector_definition_pb2.ListConnectorDefinitionsResponse,
    ]
    """ListConnectorDefinitions method receives a
    ListConnectorDefinitionsRequest message and returns a
    ListConnectorDefinitionsResponse message.
    """
    GetConnectorDefinition: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_definition_pb2.GetConnectorDefinitionRequest,
        vdp.pipeline.v1beta.connector_definition_pb2.GetConnectorDefinitionResponse,
    ]
    """GetConnectorDefinition method receives a
    GetConnectorDefinitionRequest message and returns a
    GetGetConnectorDefinitionResponse message.
    """
    ListOperatorDefinitions: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.operator_definition_pb2.ListOperatorDefinitionsRequest,
        vdp.pipeline.v1beta.operator_definition_pb2.ListOperatorDefinitionsResponse,
    ]
    """ListOperatorDefinitions method receives a
    ListOperatorDefinitionsRequest message and returns a
    ListOperatorDefinitionsResponse message.
    """
    GetOperatorDefinition: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.operator_definition_pb2.GetOperatorDefinitionRequest,
        vdp.pipeline.v1beta.operator_definition_pb2.GetOperatorDefinitionResponse,
    ]
    """GetOperatorDefinition method receives a
    GetOperatorDefinitionRequest message and returns a
    GetGetOperatorDefinitionResponse message.
    """
    ListConnectors: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.ListConnectorsRequest,
        vdp.pipeline.v1beta.connector_pb2.ListConnectorsResponse,
    ]
    """///////////////////////////////
    Connector methods
    ///////////////////////////////

    ListConnectors method receives a
    ListConnectorsRequest message and returns a
    ListConnectorsResponse message.
    """
    LookUpConnector: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.LookUpConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.LookUpConnectorResponse,
    ]
    """LookUpConnector method receives a
    LookUpConnectorRequest message and returns a
    LookUpConnectorResponse
    """
    CreateUserConnector: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.CreateUserConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.CreateUserConnectorResponse,
    ]
    """CreateUserConnector method receives a
    CreateUserConnectorRequest message and returns a
    CreateUserConnectorResponse message.
    """
    ListUserConnectors: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.ListUserConnectorsRequest,
        vdp.pipeline.v1beta.connector_pb2.ListUserConnectorsResponse,
    ]
    """ListUserConnectors method receives a
    ListUserConnectorsRequest message and returns a
    ListUserConnectorsResponse message.
    """
    GetUserConnector: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.GetUserConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.GetUserConnectorResponse,
    ]
    """GetUserConnector method receives a GetUserConnectorRequest
    message and returns a GetUserConnectorResponse message.
    """
    UpdateUserConnector: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.UpdateUserConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.UpdateUserConnectorResponse,
    ]
    """UpdateUserConnector method receives a
    UpdateUserConnectorRequest message and returns a
    UpdateUserConnectorResponse message.
    """
    DeleteUserConnector: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.DeleteUserConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.DeleteUserConnectorResponse,
    ]
    """DeleteUserConnector method receives a
    DeleteUserConnectorRequest message and returns a
    DeleteUserConnectorResponse message.
    """
    ConnectUserConnector: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.ConnectUserConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.ConnectUserConnectorResponse,
    ]
    """Connect a connector.
    The "state" of the connector after connecting is "CONNECTED".
    ConnectUserConnector can be called on Connector in the
    state `DISCONNECTED`; Connector in a different state (including
    `CONNECTED`) returns an error.
    """
    DisconnectUserConnector: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.DisconnectUserConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.DisconnectUserConnectorResponse,
    ]
    """Disconnect a connector.
    The "state" of the connector after disconnecting is "DISCONNECTED".
    DisconnectUserConnector can be called on Connector in the
    state `CONNECTED`; Connector in a different state (including
    `DISCONNECTED`) returns an error.
    """
    RenameUserConnector: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.RenameUserConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.RenameUserConnectorResponse,
    ]
    """RenameUserConnector method receives a
    RenameUserConnectorRequest message and returns a
    RenameUserConnectorResponse message.
    """
    ExecuteUserConnector: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.ExecuteUserConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.ExecuteUserConnectorResponse,
    ]
    """ExecuteUserConnector method receives a
    ExecuteUserConnectorRequest message and returns a
    ExecuteUserConnectorResponse message.
    """
    WatchUserConnector: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.WatchUserConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.WatchUserConnectorResponse,
    ]
    """WatchUserConnector method receives a
    WatchUserConnectorRequest message and returns a
    WatchUserConnectorResponse
    """
    TestUserConnector: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.TestUserConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.TestUserConnectorResponse,
    ]
    """TestUserConnector method receives a TestUserConnectorRequest
    message and returns a TestUserConnectorResponse
    """
    CreateOrganizationConnector: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.CreateOrganizationConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.CreateOrganizationConnectorResponse,
    ]
    """CreateOrganizationConnector method receives a
    CreateOrganizationConnectorRequest message and returns a
    CreateOrganizationConnectorResponse message.
    """
    ListOrganizationConnectors: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.ListOrganizationConnectorsRequest,
        vdp.pipeline.v1beta.connector_pb2.ListOrganizationConnectorsResponse,
    ]
    """ListOrganizationConnectors method receives a
    ListOrganizationConnectorsRequest message and returns a
    ListOrganizationConnectorsResponse message.
    """
    GetOrganizationConnector: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.GetOrganizationConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.GetOrganizationConnectorResponse,
    ]
    """GetOrganizationConnector method receives a GetOrganizationConnectorRequest
    message and returns a GetOrganizationConnectorResponse message.
    """
    UpdateOrganizationConnector: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.UpdateOrganizationConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.UpdateOrganizationConnectorResponse,
    ]
    """UpdateOrganizationConnector method receives a
    UpdateOrganizationConnectorRequest message and returns a
    UpdateOrganizationConnectorResponse message.
    """
    DeleteOrganizationConnector: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.DeleteOrganizationConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.DeleteOrganizationConnectorResponse,
    ]
    """DeleteOrganizationConnector method receives a
    DeleteOrganizationConnectorRequest message and returns a
    DeleteOrganizationConnectorResponse message.
    """
    ConnectOrganizationConnector: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.ConnectOrganizationConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.ConnectOrganizationConnectorResponse,
    ]
    """Connect a connector.
    The "state" of the connector after connecting is "CONNECTED".
    ConnectOrganizationConnector can be called on Connector in the
    state `DISCONNECTED`; Connector in a different state (including
    `CONNECTED`) returns an error.
    """
    DisconnectOrganizationConnector: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.DisconnectOrganizationConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.DisconnectOrganizationConnectorResponse,
    ]
    """Disconnect a connector.
    The "state" of the connector after disconnecting is "DISCONNECTED".
    DisconnectOrganizationConnector can be called on Connector in the
    state `CONNECTED`; Connector in a different state (including
    `DISCONNECTED`) returns an error.
    """
    RenameOrganizationConnector: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.RenameOrganizationConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.RenameOrganizationConnectorResponse,
    ]
    """RenameOrganizationConnector method receives a
    RenameOrganizationConnectorRequest message and returns a
    RenameOrganizationConnectorResponse message.
    """
    ExecuteOrganizationConnector: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.ExecuteOrganizationConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.ExecuteOrganizationConnectorResponse,
    ]
    """ExecuteOrganizationConnector method receives a
    ExecuteOrganizationConnectorRequest message and returns a
    ExecuteOrganizationConnectorResponse message.
    """
    WatchOrganizationConnector: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.WatchOrganizationConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.WatchOrganizationConnectorResponse,
    ]
    """WatchOrganizationConnector method receives a
    WatchOrganizationConnectorRequest message and returns a
    WatchOrganizationConnectorResponse
    """
    TestOrganizationConnector: grpc.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.TestOrganizationConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.TestOrganizationConnectorResponse,
    ]
    """TestOrganizationConnector method receives a TestOrganizationConnectorRequest
    message and returns a TestOrganizationConnectorResponse
    """

class PipelinePublicServiceAsyncStub:
    """Pipeline service responds to external access"""

    Liveness: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.LivenessRequest,
        vdp.pipeline.v1beta.pipeline_pb2.LivenessResponse,
    ]
    """Liveness method receives a LivenessRequest message and returns a
    LivenessResponse message.
    See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
    """
    Readiness: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.ReadinessRequest,
        vdp.pipeline.v1beta.pipeline_pb2.ReadinessResponse,
    ]
    """Readiness method receives a ReadinessRequest message and returns a
    ReadinessResponse message.
    See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
    """
    ListPipelines: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.ListPipelinesRequest,
        vdp.pipeline.v1beta.pipeline_pb2.ListPipelinesResponse,
    ]
    """ListPipelines method receives a ListPipelinesRequest message and returns a
    ListPipelinesResponse message.
    """
    LookUpPipeline: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.LookUpPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.LookUpPipelineResponse,
    ]
    """LookUpPipeline method receives a LookUpPipelineRequest message and returns
    a LookUpPipelineResponse
    """
    CreateUserPipeline: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.CreateUserPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.CreateUserPipelineResponse,
    ]
    """CreateUserPipeline method receives a CreateUserPipelineRequest message and returns
    a CreateUserPipelineResponse message.
    """
    ListUserPipelines: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.ListUserPipelinesRequest,
        vdp.pipeline.v1beta.pipeline_pb2.ListUserPipelinesResponse,
    ]
    """ListUserPipelines method receives a ListUserPipelinesRequest message and returns a
    ListUserPipelinesResponse message.
    """
    GetUserPipeline: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.GetUserPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.GetUserPipelineResponse,
    ]
    """GetUserPipeline method receives a GetUserPipelineRequest message and returns a
    GetUserPipelineResponse message.
    """
    UpdateUserPipeline: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.UpdateUserPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.UpdateUserPipelineResponse,
    ]
    """UpdateUserPipeline method receives a UpdateUserPipelineRequest message and returns
    a UpdateUserPipelineResponse message.
    """
    DeleteUserPipeline: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.DeleteUserPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.DeleteUserPipelineResponse,
    ]
    """DeleteUserPipeline method receives a DeleteUserPipelineRequest message and returns
    a DeleteUserPipelineResponse message.
    """
    ValidateUserPipeline: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.ValidateUserPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.ValidateUserPipelineResponse,
    ]
    """Validate a pipeline."""
    RenameUserPipeline: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.RenameUserPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.RenameUserPipelineResponse,
    ]
    """RenameUserPipeline method receives a RenameUserPipelineRequest message and returns
    a RenameUserPipelineResponse message.
    """
    TriggerUserPipeline: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.TriggerUserPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.TriggerUserPipelineResponse,
    ]
    """TriggerUserPipeline method receives a TriggerUserPipelineRequest message
    and returns a TriggerUserPipelineResponse.
    """
    TriggerAsyncUserPipeline: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncUserPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncUserPipelineResponse,
    ]
    """TriggerAsyncUserPipeline method receives a TriggerAsyncUserPipelineRequest message and
    returns a TriggerAsyncUserPipelineResponse.
    """
    CreateUserPipelineRelease: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.CreateUserPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.CreateUserPipelineReleaseResponse,
    ]
    """CreateUserPipelineRelease method receives a CreateUserPipelineReleaseRequest message and returns
    a CreateUserPipelineReleaseResponse message.
    """
    ListUserPipelineReleases: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.ListUserPipelineReleasesRequest,
        vdp.pipeline.v1beta.pipeline_pb2.ListUserPipelineReleasesResponse,
    ]
    """ListUserPipelineReleases method receives a ListUserPipelineReleasesRequest message and returns a
    ListUserPipelineReleasesResponse message.
    """
    GetUserPipelineRelease: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.GetUserPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.GetUserPipelineReleaseResponse,
    ]
    """GetUserPipelineRelease method receives a GetUserPipelineReleaseRequest message and returns a
    GetUserPipelineReleaseResponse message.
    """
    UpdateUserPipelineRelease: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.UpdateUserPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.UpdateUserPipelineReleaseResponse,
    ]
    """UpdateUserPipelineRelease method receives a UpdateUserPipelineReleaseRequest message and returns
    a UpdateUserPipelineReleaseResponse message.
    """
    DeleteUserPipelineRelease: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.DeleteUserPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.DeleteUserPipelineReleaseResponse,
    ]
    """DeleteUserPipelineRelease method receives a DeleteUserPipelineReleaseRequest message and returns
    a DeleteUserPipelineReleaseResponse message.
    """
    RestoreUserPipelineRelease: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.RestoreUserPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.RestoreUserPipelineReleaseResponse,
    ]
    """RestoreUserPipelineRelease method receives a RestoreUserPipelineReleaseRequest message
    and returns a RestoreUserPipelineReleaseResponse
    """
    WatchUserPipelineRelease: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.WatchUserPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.WatchUserPipelineReleaseResponse,
    ]
    """WatchUserPipelineRelease method receives a WatchUserPipelineReleaseRequest message
    and returns a WatchUserPipelineReleaseResponse
    """
    RenameUserPipelineRelease: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.RenameUserPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.RenameUserPipelineReleaseResponse,
    ]
    """RenameUserPipelineRelease method receives a RenameUserPipelineReleaseRequest message and returns
    a RenameUserPipelineReleaseResponse message.
    """
    TriggerUserPipelineRelease: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.TriggerUserPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.TriggerUserPipelineReleaseResponse,
    ]
    """TriggerUserPipelineRelease method receives a TriggeUserPipelineReleaseRequest message
    and returns a TriggerPipelineReleasePipelineResponse.
    """
    TriggerAsyncUserPipelineRelease: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncUserPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncUserPipelineReleaseResponse,
    ]
    """TriggerAsyncUserPipelineRelease method receives a TriggerAsyncUserPipelineReleaseRequest message and
    returns a TriggerAsyncUserPipelineReleaseResponse.
    """
    CreateOrganizationPipeline: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.CreateOrganizationPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.CreateOrganizationPipelineResponse,
    ]
    """CreateOrganizationPipeline method receives a CreateOrganizationPipelineRequest message and returns
    a CreateOrganizationPipelineResponse message.
    """
    ListOrganizationPipelines: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.ListOrganizationPipelinesRequest,
        vdp.pipeline.v1beta.pipeline_pb2.ListOrganizationPipelinesResponse,
    ]
    """ListOrganizationPipelines method receives a ListOrganizationPipelinesRequest message and returns a
    ListOrganizationPipelinesResponse message.
    """
    GetOrganizationPipeline: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.GetOrganizationPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.GetOrganizationPipelineResponse,
    ]
    """GetOrganizationPipeline method receives a GetOrganizationPipelineRequest message and returns a
    GetOrganizationPipelineResponse message.
    """
    UpdateOrganizationPipeline: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.UpdateOrganizationPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.UpdateOrganizationPipelineResponse,
    ]
    """UpdateOrganizationPipeline method receives a UpdateOrganizationPipelineRequest message and returns
    a UpdateOrganizationPipelineResponse message.
    """
    DeleteOrganizationPipeline: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.DeleteOrganizationPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.DeleteOrganizationPipelineResponse,
    ]
    """DeleteOrganizationPipeline method receives a DeleteOrganizationPipelineRequest message and returns
    a DeleteOrganizationPipelineResponse message.
    """
    ValidateOrganizationPipeline: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.ValidateOrganizationPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.ValidateOrganizationPipelineResponse,
    ]
    """Validate a pipeline."""
    RenameOrganizationPipeline: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.RenameOrganizationPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.RenameOrganizationPipelineResponse,
    ]
    """RenameOrganizationPipeline method receives a RenameOrganizationPipelineRequest message and returns
    a RenameOrganizationPipelineResponse message.
    """
    TriggerOrganizationPipeline: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.TriggerOrganizationPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.TriggerOrganizationPipelineResponse,
    ]
    """TriggerOrganizationPipeline method receives a TriggerOrganizationPipelineRequest message
    and returns a TriggerOrganizationPipelineResponse.
    """
    TriggerAsyncOrganizationPipeline: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncOrganizationPipelineRequest,
        vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncOrganizationPipelineResponse,
    ]
    """TriggerAsyncOrganizationPipeline method receives a TriggerAsyncOrganizationPipelineRequest message and
    returns a TriggerAsyncOrganizationPipelineResponse.
    """
    CreateOrganizationPipelineRelease: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.CreateOrganizationPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.CreateOrganizationPipelineReleaseResponse,
    ]
    """CreateOrganizationPipelineRelease method receives a CreateOrganizationPipelineReleaseRequest message and returns
    a CreateOrganizationPipelineReleaseResponse message.
    """
    ListOrganizationPipelineReleases: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.ListOrganizationPipelineReleasesRequest,
        vdp.pipeline.v1beta.pipeline_pb2.ListOrganizationPipelineReleasesResponse,
    ]
    """ListOrganizationPipelineReleases method receives a ListOrganizationPipelineReleasesRequest message and returns a
    ListOrganizationPipelineReleasesResponse message.
    """
    GetOrganizationPipelineRelease: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.GetOrganizationPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.GetOrganizationPipelineReleaseResponse,
    ]
    """GetOrganizationPipelineRelease method receives a GetOrganizationPipelineReleaseRequest message and returns a
    GetOrganizationPipelineReleaseResponse message.
    """
    UpdateOrganizationPipelineRelease: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.UpdateOrganizationPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.UpdateOrganizationPipelineReleaseResponse,
    ]
    """UpdateOrganizationPipelineRelease method receives a UpdateOrganizationPipelineReleaseRequest message and returns
    a UpdateOrganizationPipelineReleaseResponse message.
    """
    DeleteOrganizationPipelineRelease: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.DeleteOrganizationPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.DeleteOrganizationPipelineReleaseResponse,
    ]
    """DeleteOrganizationPipelineRelease method receives a DeleteOrganizationPipelineReleaseRequest message and returns
    a DeleteOrganizationPipelineReleaseResponse message.
    """
    RestoreOrganizationPipelineRelease: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.RestoreOrganizationPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.RestoreOrganizationPipelineReleaseResponse,
    ]
    """RestoreOrganizationPipelineRelease method receives a RestoreOrganizationPipelineReleaseRequest message
    and returns a RestoreOrganizationPipelineReleaseResponse
    """
    WatchOrganizationPipelineRelease: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.WatchOrganizationPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.WatchOrganizationPipelineReleaseResponse,
    ]
    """WatchOrganizationPipelineRelease method receives a WatchOrganizationPipelineReleaseRequest message
    and returns a WatchOrganizationPipelineReleaseResponse
    """
    RenameOrganizationPipelineRelease: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.RenameOrganizationPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.RenameOrganizationPipelineReleaseResponse,
    ]
    """RenameOrganizationPipelineRelease method receives a RenameOrganizationPipelineReleaseRequest message and returns
    a RenameOrganizationPipelineReleaseResponse message.
    """
    TriggerOrganizationPipelineRelease: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.TriggerOrganizationPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.TriggerOrganizationPipelineReleaseResponse,
    ]
    """TriggerOrganizationPipelineRelease method receives a TriggeOrganizationPipelineReleaseRequest message
    and returns a TriggerPipelineReleasePipelineResponse.
    """
    TriggerAsyncOrganizationPipelineRelease: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncOrganizationPipelineReleaseRequest,
        vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncOrganizationPipelineReleaseResponse,
    ]
    """TriggerAsyncOrganizationPipelineRelease method receives a TriggerAsyncOrganizationPipelineReleaseRequest message and
    returns a TriggerAsyncOrganizationPipelineReleaseResponse.
    """
    GetOperation: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.pipeline_pb2.GetOperationRequest,
        vdp.pipeline.v1beta.pipeline_pb2.GetOperationResponse,
    ]
    """*Longrunning operation methods

    GetOperation method receives a
    GetOperationRequest message and returns a
    GetOperationResponse message.
    """
    ListConnectorDefinitions: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_definition_pb2.ListConnectorDefinitionsRequest,
        vdp.pipeline.v1beta.connector_definition_pb2.ListConnectorDefinitionsResponse,
    ]
    """ListConnectorDefinitions method receives a
    ListConnectorDefinitionsRequest message and returns a
    ListConnectorDefinitionsResponse message.
    """
    GetConnectorDefinition: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_definition_pb2.GetConnectorDefinitionRequest,
        vdp.pipeline.v1beta.connector_definition_pb2.GetConnectorDefinitionResponse,
    ]
    """GetConnectorDefinition method receives a
    GetConnectorDefinitionRequest message and returns a
    GetGetConnectorDefinitionResponse message.
    """
    ListOperatorDefinitions: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.operator_definition_pb2.ListOperatorDefinitionsRequest,
        vdp.pipeline.v1beta.operator_definition_pb2.ListOperatorDefinitionsResponse,
    ]
    """ListOperatorDefinitions method receives a
    ListOperatorDefinitionsRequest message and returns a
    ListOperatorDefinitionsResponse message.
    """
    GetOperatorDefinition: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.operator_definition_pb2.GetOperatorDefinitionRequest,
        vdp.pipeline.v1beta.operator_definition_pb2.GetOperatorDefinitionResponse,
    ]
    """GetOperatorDefinition method receives a
    GetOperatorDefinitionRequest message and returns a
    GetGetOperatorDefinitionResponse message.
    """
    ListConnectors: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.ListConnectorsRequest,
        vdp.pipeline.v1beta.connector_pb2.ListConnectorsResponse,
    ]
    """///////////////////////////////
    Connector methods
    ///////////////////////////////

    ListConnectors method receives a
    ListConnectorsRequest message and returns a
    ListConnectorsResponse message.
    """
    LookUpConnector: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.LookUpConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.LookUpConnectorResponse,
    ]
    """LookUpConnector method receives a
    LookUpConnectorRequest message and returns a
    LookUpConnectorResponse
    """
    CreateUserConnector: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.CreateUserConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.CreateUserConnectorResponse,
    ]
    """CreateUserConnector method receives a
    CreateUserConnectorRequest message and returns a
    CreateUserConnectorResponse message.
    """
    ListUserConnectors: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.ListUserConnectorsRequest,
        vdp.pipeline.v1beta.connector_pb2.ListUserConnectorsResponse,
    ]
    """ListUserConnectors method receives a
    ListUserConnectorsRequest message and returns a
    ListUserConnectorsResponse message.
    """
    GetUserConnector: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.GetUserConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.GetUserConnectorResponse,
    ]
    """GetUserConnector method receives a GetUserConnectorRequest
    message and returns a GetUserConnectorResponse message.
    """
    UpdateUserConnector: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.UpdateUserConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.UpdateUserConnectorResponse,
    ]
    """UpdateUserConnector method receives a
    UpdateUserConnectorRequest message and returns a
    UpdateUserConnectorResponse message.
    """
    DeleteUserConnector: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.DeleteUserConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.DeleteUserConnectorResponse,
    ]
    """DeleteUserConnector method receives a
    DeleteUserConnectorRequest message and returns a
    DeleteUserConnectorResponse message.
    """
    ConnectUserConnector: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.ConnectUserConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.ConnectUserConnectorResponse,
    ]
    """Connect a connector.
    The "state" of the connector after connecting is "CONNECTED".
    ConnectUserConnector can be called on Connector in the
    state `DISCONNECTED`; Connector in a different state (including
    `CONNECTED`) returns an error.
    """
    DisconnectUserConnector: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.DisconnectUserConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.DisconnectUserConnectorResponse,
    ]
    """Disconnect a connector.
    The "state" of the connector after disconnecting is "DISCONNECTED".
    DisconnectUserConnector can be called on Connector in the
    state `CONNECTED`; Connector in a different state (including
    `DISCONNECTED`) returns an error.
    """
    RenameUserConnector: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.RenameUserConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.RenameUserConnectorResponse,
    ]
    """RenameUserConnector method receives a
    RenameUserConnectorRequest message and returns a
    RenameUserConnectorResponse message.
    """
    ExecuteUserConnector: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.ExecuteUserConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.ExecuteUserConnectorResponse,
    ]
    """ExecuteUserConnector method receives a
    ExecuteUserConnectorRequest message and returns a
    ExecuteUserConnectorResponse message.
    """
    WatchUserConnector: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.WatchUserConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.WatchUserConnectorResponse,
    ]
    """WatchUserConnector method receives a
    WatchUserConnectorRequest message and returns a
    WatchUserConnectorResponse
    """
    TestUserConnector: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.TestUserConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.TestUserConnectorResponse,
    ]
    """TestUserConnector method receives a TestUserConnectorRequest
    message and returns a TestUserConnectorResponse
    """
    CreateOrganizationConnector: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.CreateOrganizationConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.CreateOrganizationConnectorResponse,
    ]
    """CreateOrganizationConnector method receives a
    CreateOrganizationConnectorRequest message and returns a
    CreateOrganizationConnectorResponse message.
    """
    ListOrganizationConnectors: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.ListOrganizationConnectorsRequest,
        vdp.pipeline.v1beta.connector_pb2.ListOrganizationConnectorsResponse,
    ]
    """ListOrganizationConnectors method receives a
    ListOrganizationConnectorsRequest message and returns a
    ListOrganizationConnectorsResponse message.
    """
    GetOrganizationConnector: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.GetOrganizationConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.GetOrganizationConnectorResponse,
    ]
    """GetOrganizationConnector method receives a GetOrganizationConnectorRequest
    message and returns a GetOrganizationConnectorResponse message.
    """
    UpdateOrganizationConnector: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.UpdateOrganizationConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.UpdateOrganizationConnectorResponse,
    ]
    """UpdateOrganizationConnector method receives a
    UpdateOrganizationConnectorRequest message and returns a
    UpdateOrganizationConnectorResponse message.
    """
    DeleteOrganizationConnector: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.DeleteOrganizationConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.DeleteOrganizationConnectorResponse,
    ]
    """DeleteOrganizationConnector method receives a
    DeleteOrganizationConnectorRequest message and returns a
    DeleteOrganizationConnectorResponse message.
    """
    ConnectOrganizationConnector: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.ConnectOrganizationConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.ConnectOrganizationConnectorResponse,
    ]
    """Connect a connector.
    The "state" of the connector after connecting is "CONNECTED".
    ConnectOrganizationConnector can be called on Connector in the
    state `DISCONNECTED`; Connector in a different state (including
    `CONNECTED`) returns an error.
    """
    DisconnectOrganizationConnector: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.DisconnectOrganizationConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.DisconnectOrganizationConnectorResponse,
    ]
    """Disconnect a connector.
    The "state" of the connector after disconnecting is "DISCONNECTED".
    DisconnectOrganizationConnector can be called on Connector in the
    state `CONNECTED`; Connector in a different state (including
    `DISCONNECTED`) returns an error.
    """
    RenameOrganizationConnector: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.RenameOrganizationConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.RenameOrganizationConnectorResponse,
    ]
    """RenameOrganizationConnector method receives a
    RenameOrganizationConnectorRequest message and returns a
    RenameOrganizationConnectorResponse message.
    """
    ExecuteOrganizationConnector: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.ExecuteOrganizationConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.ExecuteOrganizationConnectorResponse,
    ]
    """ExecuteOrganizationConnector method receives a
    ExecuteOrganizationConnectorRequest message and returns a
    ExecuteOrganizationConnectorResponse message.
    """
    WatchOrganizationConnector: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.WatchOrganizationConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.WatchOrganizationConnectorResponse,
    ]
    """WatchOrganizationConnector method receives a
    WatchOrganizationConnectorRequest message and returns a
    WatchOrganizationConnectorResponse
    """
    TestOrganizationConnector: grpc.aio.UnaryUnaryMultiCallable[
        vdp.pipeline.v1beta.connector_pb2.TestOrganizationConnectorRequest,
        vdp.pipeline.v1beta.connector_pb2.TestOrganizationConnectorResponse,
    ]
    """TestOrganizationConnector method receives a TestOrganizationConnectorRequest
    message and returns a TestOrganizationConnectorResponse
    """

class PipelinePublicServiceServicer(metaclass=abc.ABCMeta):
    """Pipeline service responds to external access"""

    @abc.abstractmethod
    def Liveness(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.LivenessRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.LivenessResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.LivenessResponse]]:
        """Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
        """
    @abc.abstractmethod
    def Readiness(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.ReadinessRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.ReadinessResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.ReadinessResponse]]:
        """Readiness method receives a ReadinessRequest message and returns a
        ReadinessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
        """
    @abc.abstractmethod
    def ListPipelines(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.ListPipelinesRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.ListPipelinesResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.ListPipelinesResponse]]:
        """ListPipelines method receives a ListPipelinesRequest message and returns a
        ListPipelinesResponse message.
        """
    @abc.abstractmethod
    def LookUpPipeline(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.LookUpPipelineRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.LookUpPipelineResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.LookUpPipelineResponse]]:
        """LookUpPipeline method receives a LookUpPipelineRequest message and returns
        a LookUpPipelineResponse
        """
    @abc.abstractmethod
    def CreateUserPipeline(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.CreateUserPipelineRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.CreateUserPipelineResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.CreateUserPipelineResponse]]:
        """CreateUserPipeline method receives a CreateUserPipelineRequest message and returns
        a CreateUserPipelineResponse message.
        """
    @abc.abstractmethod
    def ListUserPipelines(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.ListUserPipelinesRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.ListUserPipelinesResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.ListUserPipelinesResponse]]:
        """ListUserPipelines method receives a ListUserPipelinesRequest message and returns a
        ListUserPipelinesResponse message.
        """
    @abc.abstractmethod
    def GetUserPipeline(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.GetUserPipelineRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.GetUserPipelineResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.GetUserPipelineResponse]]:
        """GetUserPipeline method receives a GetUserPipelineRequest message and returns a
        GetUserPipelineResponse message.
        """
    @abc.abstractmethod
    def UpdateUserPipeline(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.UpdateUserPipelineRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.UpdateUserPipelineResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.UpdateUserPipelineResponse]]:
        """UpdateUserPipeline method receives a UpdateUserPipelineRequest message and returns
        a UpdateUserPipelineResponse message.
        """
    @abc.abstractmethod
    def DeleteUserPipeline(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.DeleteUserPipelineRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.DeleteUserPipelineResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.DeleteUserPipelineResponse]]:
        """DeleteUserPipeline method receives a DeleteUserPipelineRequest message and returns
        a DeleteUserPipelineResponse message.
        """
    @abc.abstractmethod
    def ValidateUserPipeline(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.ValidateUserPipelineRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.ValidateUserPipelineResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.ValidateUserPipelineResponse]]:
        """Validate a pipeline."""
    @abc.abstractmethod
    def RenameUserPipeline(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.RenameUserPipelineRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.RenameUserPipelineResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.RenameUserPipelineResponse]]:
        """RenameUserPipeline method receives a RenameUserPipelineRequest message and returns
        a RenameUserPipelineResponse message.
        """
    @abc.abstractmethod
    def TriggerUserPipeline(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.TriggerUserPipelineRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.TriggerUserPipelineResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.TriggerUserPipelineResponse]]:
        """TriggerUserPipeline method receives a TriggerUserPipelineRequest message
        and returns a TriggerUserPipelineResponse.
        """
    @abc.abstractmethod
    def TriggerAsyncUserPipeline(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncUserPipelineRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncUserPipelineResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncUserPipelineResponse]]:
        """TriggerAsyncUserPipeline method receives a TriggerAsyncUserPipelineRequest message and
        returns a TriggerAsyncUserPipelineResponse.
        """
    @abc.abstractmethod
    def CreateUserPipelineRelease(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.CreateUserPipelineReleaseRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.CreateUserPipelineReleaseResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.CreateUserPipelineReleaseResponse]]:
        """CreateUserPipelineRelease method receives a CreateUserPipelineReleaseRequest message and returns
        a CreateUserPipelineReleaseResponse message.
        """
    @abc.abstractmethod
    def ListUserPipelineReleases(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.ListUserPipelineReleasesRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.ListUserPipelineReleasesResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.ListUserPipelineReleasesResponse]]:
        """ListUserPipelineReleases method receives a ListUserPipelineReleasesRequest message and returns a
        ListUserPipelineReleasesResponse message.
        """
    @abc.abstractmethod
    def GetUserPipelineRelease(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.GetUserPipelineReleaseRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.GetUserPipelineReleaseResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.GetUserPipelineReleaseResponse]]:
        """GetUserPipelineRelease method receives a GetUserPipelineReleaseRequest message and returns a
        GetUserPipelineReleaseResponse message.
        """
    @abc.abstractmethod
    def UpdateUserPipelineRelease(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.UpdateUserPipelineReleaseRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.UpdateUserPipelineReleaseResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.UpdateUserPipelineReleaseResponse]]:
        """UpdateUserPipelineRelease method receives a UpdateUserPipelineReleaseRequest message and returns
        a UpdateUserPipelineReleaseResponse message.
        """
    @abc.abstractmethod
    def DeleteUserPipelineRelease(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.DeleteUserPipelineReleaseRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.DeleteUserPipelineReleaseResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.DeleteUserPipelineReleaseResponse]]:
        """DeleteUserPipelineRelease method receives a DeleteUserPipelineReleaseRequest message and returns
        a DeleteUserPipelineReleaseResponse message.
        """
    @abc.abstractmethod
    def RestoreUserPipelineRelease(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.RestoreUserPipelineReleaseRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.RestoreUserPipelineReleaseResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.RestoreUserPipelineReleaseResponse]]:
        """RestoreUserPipelineRelease method receives a RestoreUserPipelineReleaseRequest message
        and returns a RestoreUserPipelineReleaseResponse
        """
    @abc.abstractmethod
    def WatchUserPipelineRelease(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.WatchUserPipelineReleaseRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.WatchUserPipelineReleaseResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.WatchUserPipelineReleaseResponse]]:
        """WatchUserPipelineRelease method receives a WatchUserPipelineReleaseRequest message
        and returns a WatchUserPipelineReleaseResponse
        """
    @abc.abstractmethod
    def RenameUserPipelineRelease(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.RenameUserPipelineReleaseRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.RenameUserPipelineReleaseResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.RenameUserPipelineReleaseResponse]]:
        """RenameUserPipelineRelease method receives a RenameUserPipelineReleaseRequest message and returns
        a RenameUserPipelineReleaseResponse message.
        """
    @abc.abstractmethod
    def TriggerUserPipelineRelease(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.TriggerUserPipelineReleaseRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.TriggerUserPipelineReleaseResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.TriggerUserPipelineReleaseResponse]]:
        """TriggerUserPipelineRelease method receives a TriggeUserPipelineReleaseRequest message
        and returns a TriggerPipelineReleasePipelineResponse.
        """
    @abc.abstractmethod
    def TriggerAsyncUserPipelineRelease(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncUserPipelineReleaseRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncUserPipelineReleaseResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncUserPipelineReleaseResponse]]:
        """TriggerAsyncUserPipelineRelease method receives a TriggerAsyncUserPipelineReleaseRequest message and
        returns a TriggerAsyncUserPipelineReleaseResponse.
        """
    @abc.abstractmethod
    def CreateOrganizationPipeline(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.CreateOrganizationPipelineRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.CreateOrganizationPipelineResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.CreateOrganizationPipelineResponse]]:
        """CreateOrganizationPipeline method receives a CreateOrganizationPipelineRequest message and returns
        a CreateOrganizationPipelineResponse message.
        """
    @abc.abstractmethod
    def ListOrganizationPipelines(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.ListOrganizationPipelinesRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.ListOrganizationPipelinesResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.ListOrganizationPipelinesResponse]]:
        """ListOrganizationPipelines method receives a ListOrganizationPipelinesRequest message and returns a
        ListOrganizationPipelinesResponse message.
        """
    @abc.abstractmethod
    def GetOrganizationPipeline(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.GetOrganizationPipelineRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.GetOrganizationPipelineResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.GetOrganizationPipelineResponse]]:
        """GetOrganizationPipeline method receives a GetOrganizationPipelineRequest message and returns a
        GetOrganizationPipelineResponse message.
        """
    @abc.abstractmethod
    def UpdateOrganizationPipeline(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.UpdateOrganizationPipelineRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.UpdateOrganizationPipelineResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.UpdateOrganizationPipelineResponse]]:
        """UpdateOrganizationPipeline method receives a UpdateOrganizationPipelineRequest message and returns
        a UpdateOrganizationPipelineResponse message.
        """
    @abc.abstractmethod
    def DeleteOrganizationPipeline(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.DeleteOrganizationPipelineRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.DeleteOrganizationPipelineResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.DeleteOrganizationPipelineResponse]]:
        """DeleteOrganizationPipeline method receives a DeleteOrganizationPipelineRequest message and returns
        a DeleteOrganizationPipelineResponse message.
        """
    @abc.abstractmethod
    def ValidateOrganizationPipeline(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.ValidateOrganizationPipelineRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.ValidateOrganizationPipelineResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.ValidateOrganizationPipelineResponse]]:
        """Validate a pipeline."""
    @abc.abstractmethod
    def RenameOrganizationPipeline(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.RenameOrganizationPipelineRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.RenameOrganizationPipelineResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.RenameOrganizationPipelineResponse]]:
        """RenameOrganizationPipeline method receives a RenameOrganizationPipelineRequest message and returns
        a RenameOrganizationPipelineResponse message.
        """
    @abc.abstractmethod
    def TriggerOrganizationPipeline(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.TriggerOrganizationPipelineRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.TriggerOrganizationPipelineResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.TriggerOrganizationPipelineResponse]]:
        """TriggerOrganizationPipeline method receives a TriggerOrganizationPipelineRequest message
        and returns a TriggerOrganizationPipelineResponse.
        """
    @abc.abstractmethod
    def TriggerAsyncOrganizationPipeline(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncOrganizationPipelineRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncOrganizationPipelineResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncOrganizationPipelineResponse]]:
        """TriggerAsyncOrganizationPipeline method receives a TriggerAsyncOrganizationPipelineRequest message and
        returns a TriggerAsyncOrganizationPipelineResponse.
        """
    @abc.abstractmethod
    def CreateOrganizationPipelineRelease(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.CreateOrganizationPipelineReleaseRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.CreateOrganizationPipelineReleaseResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.CreateOrganizationPipelineReleaseResponse]]:
        """CreateOrganizationPipelineRelease method receives a CreateOrganizationPipelineReleaseRequest message and returns
        a CreateOrganizationPipelineReleaseResponse message.
        """
    @abc.abstractmethod
    def ListOrganizationPipelineReleases(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.ListOrganizationPipelineReleasesRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.ListOrganizationPipelineReleasesResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.ListOrganizationPipelineReleasesResponse]]:
        """ListOrganizationPipelineReleases method receives a ListOrganizationPipelineReleasesRequest message and returns a
        ListOrganizationPipelineReleasesResponse message.
        """
    @abc.abstractmethod
    def GetOrganizationPipelineRelease(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.GetOrganizationPipelineReleaseRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.GetOrganizationPipelineReleaseResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.GetOrganizationPipelineReleaseResponse]]:
        """GetOrganizationPipelineRelease method receives a GetOrganizationPipelineReleaseRequest message and returns a
        GetOrganizationPipelineReleaseResponse message.
        """
    @abc.abstractmethod
    def UpdateOrganizationPipelineRelease(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.UpdateOrganizationPipelineReleaseRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.UpdateOrganizationPipelineReleaseResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.UpdateOrganizationPipelineReleaseResponse]]:
        """UpdateOrganizationPipelineRelease method receives a UpdateOrganizationPipelineReleaseRequest message and returns
        a UpdateOrganizationPipelineReleaseResponse message.
        """
    @abc.abstractmethod
    def DeleteOrganizationPipelineRelease(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.DeleteOrganizationPipelineReleaseRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.DeleteOrganizationPipelineReleaseResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.DeleteOrganizationPipelineReleaseResponse]]:
        """DeleteOrganizationPipelineRelease method receives a DeleteOrganizationPipelineReleaseRequest message and returns
        a DeleteOrganizationPipelineReleaseResponse message.
        """
    @abc.abstractmethod
    def RestoreOrganizationPipelineRelease(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.RestoreOrganizationPipelineReleaseRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.RestoreOrganizationPipelineReleaseResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.RestoreOrganizationPipelineReleaseResponse]]:
        """RestoreOrganizationPipelineRelease method receives a RestoreOrganizationPipelineReleaseRequest message
        and returns a RestoreOrganizationPipelineReleaseResponse
        """
    @abc.abstractmethod
    def WatchOrganizationPipelineRelease(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.WatchOrganizationPipelineReleaseRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.WatchOrganizationPipelineReleaseResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.WatchOrganizationPipelineReleaseResponse]]:
        """WatchOrganizationPipelineRelease method receives a WatchOrganizationPipelineReleaseRequest message
        and returns a WatchOrganizationPipelineReleaseResponse
        """
    @abc.abstractmethod
    def RenameOrganizationPipelineRelease(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.RenameOrganizationPipelineReleaseRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.RenameOrganizationPipelineReleaseResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.RenameOrganizationPipelineReleaseResponse]]:
        """RenameOrganizationPipelineRelease method receives a RenameOrganizationPipelineReleaseRequest message and returns
        a RenameOrganizationPipelineReleaseResponse message.
        """
    @abc.abstractmethod
    def TriggerOrganizationPipelineRelease(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.TriggerOrganizationPipelineReleaseRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.TriggerOrganizationPipelineReleaseResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.TriggerOrganizationPipelineReleaseResponse]]:
        """TriggerOrganizationPipelineRelease method receives a TriggeOrganizationPipelineReleaseRequest message
        and returns a TriggerPipelineReleasePipelineResponse.
        """
    @abc.abstractmethod
    def TriggerAsyncOrganizationPipelineRelease(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncOrganizationPipelineReleaseRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncOrganizationPipelineReleaseResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.TriggerAsyncOrganizationPipelineReleaseResponse]]:
        """TriggerAsyncOrganizationPipelineRelease method receives a TriggerAsyncOrganizationPipelineReleaseRequest message and
        returns a TriggerAsyncOrganizationPipelineReleaseResponse.
        """
    @abc.abstractmethod
    def GetOperation(
        self,
        request: vdp.pipeline.v1beta.pipeline_pb2.GetOperationRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.pipeline_pb2.GetOperationResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.pipeline_pb2.GetOperationResponse]]:
        """*Longrunning operation methods

        GetOperation method receives a
        GetOperationRequest message and returns a
        GetOperationResponse message.
        """
    @abc.abstractmethod
    def ListConnectorDefinitions(
        self,
        request: vdp.pipeline.v1beta.connector_definition_pb2.ListConnectorDefinitionsRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_definition_pb2.ListConnectorDefinitionsResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_definition_pb2.ListConnectorDefinitionsResponse]]:
        """ListConnectorDefinitions method receives a
        ListConnectorDefinitionsRequest message and returns a
        ListConnectorDefinitionsResponse message.
        """
    @abc.abstractmethod
    def GetConnectorDefinition(
        self,
        request: vdp.pipeline.v1beta.connector_definition_pb2.GetConnectorDefinitionRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_definition_pb2.GetConnectorDefinitionResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_definition_pb2.GetConnectorDefinitionResponse]]:
        """GetConnectorDefinition method receives a
        GetConnectorDefinitionRequest message and returns a
        GetGetConnectorDefinitionResponse message.
        """
    @abc.abstractmethod
    def ListOperatorDefinitions(
        self,
        request: vdp.pipeline.v1beta.operator_definition_pb2.ListOperatorDefinitionsRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.operator_definition_pb2.ListOperatorDefinitionsResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.operator_definition_pb2.ListOperatorDefinitionsResponse]]:
        """ListOperatorDefinitions method receives a
        ListOperatorDefinitionsRequest message and returns a
        ListOperatorDefinitionsResponse message.
        """
    @abc.abstractmethod
    def GetOperatorDefinition(
        self,
        request: vdp.pipeline.v1beta.operator_definition_pb2.GetOperatorDefinitionRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.operator_definition_pb2.GetOperatorDefinitionResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.operator_definition_pb2.GetOperatorDefinitionResponse]]:
        """GetOperatorDefinition method receives a
        GetOperatorDefinitionRequest message and returns a
        GetGetOperatorDefinitionResponse message.
        """
    @abc.abstractmethod
    def ListConnectors(
        self,
        request: vdp.pipeline.v1beta.connector_pb2.ListConnectorsRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_pb2.ListConnectorsResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_pb2.ListConnectorsResponse]]:
        """///////////////////////////////
        Connector methods
        ///////////////////////////////

        ListConnectors method receives a
        ListConnectorsRequest message and returns a
        ListConnectorsResponse message.
        """
    @abc.abstractmethod
    def LookUpConnector(
        self,
        request: vdp.pipeline.v1beta.connector_pb2.LookUpConnectorRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_pb2.LookUpConnectorResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_pb2.LookUpConnectorResponse]]:
        """LookUpConnector method receives a
        LookUpConnectorRequest message and returns a
        LookUpConnectorResponse
        """
    @abc.abstractmethod
    def CreateUserConnector(
        self,
        request: vdp.pipeline.v1beta.connector_pb2.CreateUserConnectorRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_pb2.CreateUserConnectorResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_pb2.CreateUserConnectorResponse]]:
        """CreateUserConnector method receives a
        CreateUserConnectorRequest message and returns a
        CreateUserConnectorResponse message.
        """
    @abc.abstractmethod
    def ListUserConnectors(
        self,
        request: vdp.pipeline.v1beta.connector_pb2.ListUserConnectorsRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_pb2.ListUserConnectorsResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_pb2.ListUserConnectorsResponse]]:
        """ListUserConnectors method receives a
        ListUserConnectorsRequest message and returns a
        ListUserConnectorsResponse message.
        """
    @abc.abstractmethod
    def GetUserConnector(
        self,
        request: vdp.pipeline.v1beta.connector_pb2.GetUserConnectorRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_pb2.GetUserConnectorResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_pb2.GetUserConnectorResponse]]:
        """GetUserConnector method receives a GetUserConnectorRequest
        message and returns a GetUserConnectorResponse message.
        """
    @abc.abstractmethod
    def UpdateUserConnector(
        self,
        request: vdp.pipeline.v1beta.connector_pb2.UpdateUserConnectorRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_pb2.UpdateUserConnectorResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_pb2.UpdateUserConnectorResponse]]:
        """UpdateUserConnector method receives a
        UpdateUserConnectorRequest message and returns a
        UpdateUserConnectorResponse message.
        """
    @abc.abstractmethod
    def DeleteUserConnector(
        self,
        request: vdp.pipeline.v1beta.connector_pb2.DeleteUserConnectorRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_pb2.DeleteUserConnectorResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_pb2.DeleteUserConnectorResponse]]:
        """DeleteUserConnector method receives a
        DeleteUserConnectorRequest message and returns a
        DeleteUserConnectorResponse message.
        """
    @abc.abstractmethod
    def ConnectUserConnector(
        self,
        request: vdp.pipeline.v1beta.connector_pb2.ConnectUserConnectorRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_pb2.ConnectUserConnectorResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_pb2.ConnectUserConnectorResponse]]:
        """Connect a connector.
        The "state" of the connector after connecting is "CONNECTED".
        ConnectUserConnector can be called on Connector in the
        state `DISCONNECTED`; Connector in a different state (including
        `CONNECTED`) returns an error.
        """
    @abc.abstractmethod
    def DisconnectUserConnector(
        self,
        request: vdp.pipeline.v1beta.connector_pb2.DisconnectUserConnectorRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_pb2.DisconnectUserConnectorResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_pb2.DisconnectUserConnectorResponse]]:
        """Disconnect a connector.
        The "state" of the connector after disconnecting is "DISCONNECTED".
        DisconnectUserConnector can be called on Connector in the
        state `CONNECTED`; Connector in a different state (including
        `DISCONNECTED`) returns an error.
        """
    @abc.abstractmethod
    def RenameUserConnector(
        self,
        request: vdp.pipeline.v1beta.connector_pb2.RenameUserConnectorRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_pb2.RenameUserConnectorResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_pb2.RenameUserConnectorResponse]]:
        """RenameUserConnector method receives a
        RenameUserConnectorRequest message and returns a
        RenameUserConnectorResponse message.
        """
    @abc.abstractmethod
    def ExecuteUserConnector(
        self,
        request: vdp.pipeline.v1beta.connector_pb2.ExecuteUserConnectorRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_pb2.ExecuteUserConnectorResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_pb2.ExecuteUserConnectorResponse]]:
        """ExecuteUserConnector method receives a
        ExecuteUserConnectorRequest message and returns a
        ExecuteUserConnectorResponse message.
        """
    @abc.abstractmethod
    def WatchUserConnector(
        self,
        request: vdp.pipeline.v1beta.connector_pb2.WatchUserConnectorRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_pb2.WatchUserConnectorResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_pb2.WatchUserConnectorResponse]]:
        """WatchUserConnector method receives a
        WatchUserConnectorRequest message and returns a
        WatchUserConnectorResponse
        """
    @abc.abstractmethod
    def TestUserConnector(
        self,
        request: vdp.pipeline.v1beta.connector_pb2.TestUserConnectorRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_pb2.TestUserConnectorResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_pb2.TestUserConnectorResponse]]:
        """TestUserConnector method receives a TestUserConnectorRequest
        message and returns a TestUserConnectorResponse
        """
    @abc.abstractmethod
    def CreateOrganizationConnector(
        self,
        request: vdp.pipeline.v1beta.connector_pb2.CreateOrganizationConnectorRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_pb2.CreateOrganizationConnectorResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_pb2.CreateOrganizationConnectorResponse]]:
        """CreateOrganizationConnector method receives a
        CreateOrganizationConnectorRequest message and returns a
        CreateOrganizationConnectorResponse message.
        """
    @abc.abstractmethod
    def ListOrganizationConnectors(
        self,
        request: vdp.pipeline.v1beta.connector_pb2.ListOrganizationConnectorsRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_pb2.ListOrganizationConnectorsResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_pb2.ListOrganizationConnectorsResponse]]:
        """ListOrganizationConnectors method receives a
        ListOrganizationConnectorsRequest message and returns a
        ListOrganizationConnectorsResponse message.
        """
    @abc.abstractmethod
    def GetOrganizationConnector(
        self,
        request: vdp.pipeline.v1beta.connector_pb2.GetOrganizationConnectorRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_pb2.GetOrganizationConnectorResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_pb2.GetOrganizationConnectorResponse]]:
        """GetOrganizationConnector method receives a GetOrganizationConnectorRequest
        message and returns a GetOrganizationConnectorResponse message.
        """
    @abc.abstractmethod
    def UpdateOrganizationConnector(
        self,
        request: vdp.pipeline.v1beta.connector_pb2.UpdateOrganizationConnectorRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_pb2.UpdateOrganizationConnectorResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_pb2.UpdateOrganizationConnectorResponse]]:
        """UpdateOrganizationConnector method receives a
        UpdateOrganizationConnectorRequest message and returns a
        UpdateOrganizationConnectorResponse message.
        """
    @abc.abstractmethod
    def DeleteOrganizationConnector(
        self,
        request: vdp.pipeline.v1beta.connector_pb2.DeleteOrganizationConnectorRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_pb2.DeleteOrganizationConnectorResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_pb2.DeleteOrganizationConnectorResponse]]:
        """DeleteOrganizationConnector method receives a
        DeleteOrganizationConnectorRequest message and returns a
        DeleteOrganizationConnectorResponse message.
        """
    @abc.abstractmethod
    def ConnectOrganizationConnector(
        self,
        request: vdp.pipeline.v1beta.connector_pb2.ConnectOrganizationConnectorRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_pb2.ConnectOrganizationConnectorResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_pb2.ConnectOrganizationConnectorResponse]]:
        """Connect a connector.
        The "state" of the connector after connecting is "CONNECTED".
        ConnectOrganizationConnector can be called on Connector in the
        state `DISCONNECTED`; Connector in a different state (including
        `CONNECTED`) returns an error.
        """
    @abc.abstractmethod
    def DisconnectOrganizationConnector(
        self,
        request: vdp.pipeline.v1beta.connector_pb2.DisconnectOrganizationConnectorRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_pb2.DisconnectOrganizationConnectorResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_pb2.DisconnectOrganizationConnectorResponse]]:
        """Disconnect a connector.
        The "state" of the connector after disconnecting is "DISCONNECTED".
        DisconnectOrganizationConnector can be called on Connector in the
        state `CONNECTED`; Connector in a different state (including
        `DISCONNECTED`) returns an error.
        """
    @abc.abstractmethod
    def RenameOrganizationConnector(
        self,
        request: vdp.pipeline.v1beta.connector_pb2.RenameOrganizationConnectorRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_pb2.RenameOrganizationConnectorResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_pb2.RenameOrganizationConnectorResponse]]:
        """RenameOrganizationConnector method receives a
        RenameOrganizationConnectorRequest message and returns a
        RenameOrganizationConnectorResponse message.
        """
    @abc.abstractmethod
    def ExecuteOrganizationConnector(
        self,
        request: vdp.pipeline.v1beta.connector_pb2.ExecuteOrganizationConnectorRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_pb2.ExecuteOrganizationConnectorResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_pb2.ExecuteOrganizationConnectorResponse]]:
        """ExecuteOrganizationConnector method receives a
        ExecuteOrganizationConnectorRequest message and returns a
        ExecuteOrganizationConnectorResponse message.
        """
    @abc.abstractmethod
    def WatchOrganizationConnector(
        self,
        request: vdp.pipeline.v1beta.connector_pb2.WatchOrganizationConnectorRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_pb2.WatchOrganizationConnectorResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_pb2.WatchOrganizationConnectorResponse]]:
        """WatchOrganizationConnector method receives a
        WatchOrganizationConnectorRequest message and returns a
        WatchOrganizationConnectorResponse
        """
    @abc.abstractmethod
    def TestOrganizationConnector(
        self,
        request: vdp.pipeline.v1beta.connector_pb2.TestOrganizationConnectorRequest,
        context: _ServicerContext,
    ) -> typing.Union[vdp.pipeline.v1beta.connector_pb2.TestOrganizationConnectorResponse, collections.abc.Awaitable[vdp.pipeline.v1beta.connector_pb2.TestOrganizationConnectorResponse]]:
        """TestOrganizationConnector method receives a TestOrganizationConnectorRequest
        message and returns a TestOrganizationConnectorResponse
        """

def add_PipelinePublicServiceServicer_to_server(servicer: PipelinePublicServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
