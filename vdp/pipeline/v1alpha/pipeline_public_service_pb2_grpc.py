# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from vdp.pipeline.v1alpha import pipeline_pb2 as vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2


class PipelinePublicServiceStub(object):
    """Pipeline service responds to external access
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Liveness = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/Liveness',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.LivenessRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.LivenessResponse.FromString,
                )
        self.Readiness = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/Readiness',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ReadinessRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ReadinessResponse.FromString,
                )
        self.CreatePipeline = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/CreatePipeline',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.CreatePipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.CreatePipelineResponse.FromString,
                )
        self.ListPipelines = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/ListPipelines',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListPipelinesRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListPipelinesResponse.FromString,
                )
        self.GetPipeline = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/GetPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetPipelineResponse.FromString,
                )
        self.UpdatePipeline = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/UpdatePipeline',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.UpdatePipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.UpdatePipelineResponse.FromString,
                )
        self.DeletePipeline = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/DeletePipeline',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeletePipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeletePipelineResponse.FromString,
                )
        self.LookUpPipeline = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/LookUpPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.LookUpPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.LookUpPipelineResponse.FromString,
                )
        self.ActivatePipeline = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/ActivatePipeline',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ActivatePipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ActivatePipelineResponse.FromString,
                )
        self.DeactivatePipeline = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/DeactivatePipeline',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeactivatePipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeactivatePipelineResponse.FromString,
                )
        self.RenamePipeline = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/RenamePipeline',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RenamePipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RenamePipelineResponse.FromString,
                )
        self.TriggerPipeline = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/TriggerPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerPipelineResponse.FromString,
                )
        self.TriggerAsyncPipeline = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/TriggerAsyncPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerAsyncPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerAsyncPipelineResponse.FromString,
                )
        self.WatchPipeline = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/WatchPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.WatchPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.WatchPipelineResponse.FromString,
                )
        self.GetOperation = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/GetOperation',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetOperationRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetOperationResponse.FromString,
                )


class PipelinePublicServiceServicer(object):
    """Pipeline service responds to external access
    """

    def Liveness(self, request, context):
        """Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Readiness(self, request, context):
        """Readiness method receives a ReadinessRequest message and returns a
        ReadinessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePipeline(self, request, context):
        """CreatePipeline method receives a CreatePipelineRequest message and returns
        a CreatePipelineResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPipelines(self, request, context):
        """ListPipelines method receives a ListPipelinesRequest message and returns a
        ListPipelinesResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPipeline(self, request, context):
        """GetPipeline method receives a GetPipelineRequest message and returns a
        GetPipelineResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePipeline(self, request, context):
        """UpdatePipeline method receives a UpdatePipelineRequest message and returns
        a UpdatePipelineResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePipeline(self, request, context):
        """DeletePipeline method receives a DeletePipelineRequest message and returns
        a DeletePipelineResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookUpPipeline(self, request, context):
        """LookUpPipeline method receives a LookUpPipelineRequest message and returns
        a LookUpPipelineResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ActivatePipeline(self, request, context):
        """Activate a pipeline.
        The "state" of the pipeline after activating is "ACTIVE".
        ActivatePipeline can be called on Pipelines in the state "INACTIVE";
        Pipelines in a different state (including "ACTIVE") returns an error.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeactivatePipeline(self, request, context):
        """Deactivate a pipeline.
        The "state" of the pipeline after inactivating is "INACTIVE".
        DeactivatePipeline can be called on Pipelines in the state "ACTIVE";
        Pipelines in a different state (including "INACTIVE") returns an error.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenamePipeline(self, request, context):
        """RenamePipeline method receives a RenamePipelineRequest message and returns
        a RenamePipelineResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerPipeline(self, request, context):
        """TriggerPipeline method receives a TriggerPipelineRequest message
        and returns a TriggerPipelineResponse.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerAsyncPipeline(self, request, context):
        """TriggerAsyncPipeline method receives a TriggerPipelineRequest message and
        returns a TriggerAsyncPipelineResponse.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchPipeline(self, request, context):
        """WatchPipeline method receives a WatchPipelineRequest message
        and returns a WatchPipelineResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOperation(self, request, context):
        """*Longrunning operation methods

        GetOperation method receives a
        GetOperationRequest message and returns a
        GetOperationResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PipelinePublicServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Liveness': grpc.unary_unary_rpc_method_handler(
                    servicer.Liveness,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.LivenessRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.LivenessResponse.SerializeToString,
            ),
            'Readiness': grpc.unary_unary_rpc_method_handler(
                    servicer.Readiness,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ReadinessRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ReadinessResponse.SerializeToString,
            ),
            'CreatePipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.CreatePipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.CreatePipelineResponse.SerializeToString,
            ),
            'ListPipelines': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPipelines,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListPipelinesRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListPipelinesResponse.SerializeToString,
            ),
            'GetPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetPipelineResponse.SerializeToString,
            ),
            'UpdatePipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.UpdatePipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.UpdatePipelineResponse.SerializeToString,
            ),
            'DeletePipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeletePipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeletePipelineResponse.SerializeToString,
            ),
            'LookUpPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.LookUpPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.LookUpPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.LookUpPipelineResponse.SerializeToString,
            ),
            'ActivatePipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.ActivatePipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ActivatePipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ActivatePipelineResponse.SerializeToString,
            ),
            'DeactivatePipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.DeactivatePipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeactivatePipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeactivatePipelineResponse.SerializeToString,
            ),
            'RenamePipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.RenamePipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RenamePipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RenamePipelineResponse.SerializeToString,
            ),
            'TriggerPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerPipelineResponse.SerializeToString,
            ),
            'TriggerAsyncPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerAsyncPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerAsyncPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerAsyncPipelineResponse.SerializeToString,
            ),
            'WatchPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.WatchPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.WatchPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.WatchPipelineResponse.SerializeToString,
            ),
            'GetOperation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOperation,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetOperationRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetOperationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'vdp.pipeline.v1alpha.PipelinePublicService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PipelinePublicService(object):
    """Pipeline service responds to external access
    """

    @staticmethod
    def Liveness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/Liveness',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.LivenessRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.LivenessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Readiness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/Readiness',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ReadinessRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ReadinessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreatePipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/CreatePipeline',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.CreatePipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.CreatePipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPipelines(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/ListPipelines',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListPipelinesRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListPipelinesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/GetPipeline',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/UpdatePipeline',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.UpdatePipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.UpdatePipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/DeletePipeline',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeletePipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeletePipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LookUpPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/LookUpPipeline',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.LookUpPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.LookUpPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ActivatePipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/ActivatePipeline',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ActivatePipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ActivatePipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeactivatePipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/DeactivatePipeline',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeactivatePipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeactivatePipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenamePipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/RenamePipeline',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RenamePipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RenamePipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/TriggerPipeline',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerAsyncPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/TriggerAsyncPipeline',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerAsyncPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerAsyncPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WatchPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/WatchPipeline',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.WatchPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.WatchPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOperation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/GetOperation',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetOperationRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetOperationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
