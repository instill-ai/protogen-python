# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from vdp.connector.v1alpha import connector_definition_pb2 as vdp_dot_connector_dot_v1alpha_dot_connector__definition__pb2
from vdp.connector.v1alpha import connector_pb2 as vdp_dot_connector_dot_v1alpha_dot_connector__pb2


class ConnectorPublicServiceStub(object):
    """Connector service responds to external access
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Liveness = channel.unary_unary(
                '/vdp.connector.v1alpha.ConnectorPublicService/Liveness',
                request_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.LivenessRequest.SerializeToString,
                response_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.LivenessResponse.FromString,
                )
        self.Readiness = channel.unary_unary(
                '/vdp.connector.v1alpha.ConnectorPublicService/Readiness',
                request_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.ReadinessRequest.SerializeToString,
                response_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.ReadinessResponse.FromString,
                )
        self.ListConnectorDefinitions = channel.unary_unary(
                '/vdp.connector.v1alpha.ConnectorPublicService/ListConnectorDefinitions',
                request_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__definition__pb2.ListConnectorDefinitionsRequest.SerializeToString,
                response_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__definition__pb2.ListConnectorDefinitionsResponse.FromString,
                )
        self.GetConnectorDefinition = channel.unary_unary(
                '/vdp.connector.v1alpha.ConnectorPublicService/GetConnectorDefinition',
                request_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__definition__pb2.GetConnectorDefinitionRequest.SerializeToString,
                response_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__definition__pb2.GetConnectorDefinitionResponse.FromString,
                )
        self.CreateConnector = channel.unary_unary(
                '/vdp.connector.v1alpha.ConnectorPublicService/CreateConnector',
                request_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.CreateConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.CreateConnectorResponse.FromString,
                )
        self.ListConnectors = channel.unary_unary(
                '/vdp.connector.v1alpha.ConnectorPublicService/ListConnectors',
                request_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.ListConnectorsRequest.SerializeToString,
                response_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.ListConnectorsResponse.FromString,
                )
        self.GetConnector = channel.unary_unary(
                '/vdp.connector.v1alpha.ConnectorPublicService/GetConnector',
                request_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.GetConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.GetConnectorResponse.FromString,
                )
        self.UpdateConnector = channel.unary_unary(
                '/vdp.connector.v1alpha.ConnectorPublicService/UpdateConnector',
                request_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.UpdateConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.UpdateConnectorResponse.FromString,
                )
        self.DeleteConnector = channel.unary_unary(
                '/vdp.connector.v1alpha.ConnectorPublicService/DeleteConnector',
                request_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.DeleteConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.DeleteConnectorResponse.FromString,
                )
        self.LookUpConnector = channel.unary_unary(
                '/vdp.connector.v1alpha.ConnectorPublicService/LookUpConnector',
                request_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.LookUpConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.LookUpConnectorResponse.FromString,
                )
        self.ConnectConnector = channel.unary_unary(
                '/vdp.connector.v1alpha.ConnectorPublicService/ConnectConnector',
                request_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.ConnectConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.ConnectConnectorResponse.FromString,
                )
        self.DisconnectConnector = channel.unary_unary(
                '/vdp.connector.v1alpha.ConnectorPublicService/DisconnectConnector',
                request_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.DisconnectConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.DisconnectConnectorResponse.FromString,
                )
        self.RenameConnector = channel.unary_unary(
                '/vdp.connector.v1alpha.ConnectorPublicService/RenameConnector',
                request_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.RenameConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.RenameConnectorResponse.FromString,
                )
        self.ExecuteConnector = channel.unary_unary(
                '/vdp.connector.v1alpha.ConnectorPublicService/ExecuteConnector',
                request_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.ExecuteConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.ExecuteConnectorResponse.FromString,
                )
        self.WatchConnector = channel.unary_unary(
                '/vdp.connector.v1alpha.ConnectorPublicService/WatchConnector',
                request_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.WatchConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.WatchConnectorResponse.FromString,
                )
        self.TestConnector = channel.unary_unary(
                '/vdp.connector.v1alpha.ConnectorPublicService/TestConnector',
                request_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.TestConnectorRequest.SerializeToString,
                response_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.TestConnectorResponse.FromString,
                )


class ConnectorPublicServiceServicer(object):
    """Connector service responds to external access
    """

    def Liveness(self, request, context):
        """///////////////////////////////
        Connector definition methods
        ///////////////////////////////

        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Readiness(self, request, context):
        """Readiness method receives a ReadinessRequest message and returns a
        ReadinessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListConnectorDefinitions(self, request, context):
        """ListConnectorDefinitions method receives a
        ListConnectorDefinitionsRequest message and returns a
        ListConnectorDefinitionsResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConnectorDefinition(self, request, context):
        """GetConnectorDefinition method receives a
        GetConnectorDefinitionRequest message and returns a
        GetGetConnectorDefinitionResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateConnector(self, request, context):
        """///////////////////////////////
        Connector methods
        ///////////////////////////////

        CreateConnector method receives a
        CreateConnectorRequest message and returns a
        CreateConnectorResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListConnectors(self, request, context):
        """ListConnectors method receives a
        ListConnectorsRequest message and returns a
        ListConnectorsResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConnector(self, request, context):
        """GetConnector method receives a GetConnectorRequest
        message and returns a GetConnectorResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateConnector(self, request, context):
        """UpdateConnector method receives a
        UpdateConnectorRequest message and returns a
        UpdateConnectorResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteConnector(self, request, context):
        """DeleteConnector method receives a
        DeleteConnectorRequest message and returns a
        DeleteConnectorResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookUpConnector(self, request, context):
        """LookUpConnector method receives a
        LookUpConnectorRequest message and returns a
        LookUpConnectorResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConnectConnector(self, request, context):
        """Connect a connector.
        The "state" of the connector after connecting is "CONNECTED".
        ConnectConnector can be called on Connector in the
        state `DISCONNECTED`; Connector in a different state (including
        `CONNECTED`) returns an error.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisconnectConnector(self, request, context):
        """Disconnect a connector.
        The "state" of the connector after disconnecting is "DISCONNECTED".
        DisconnectConnector can be called on Connector in the
        state `CONNECTED`; Connector in a different state (including
        `DISCONNECTED`) returns an error.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenameConnector(self, request, context):
        """RenameConnector method receives a
        RenameConnectorRequest message and returns a
        RenameConnectorResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteConnector(self, request, context):
        """ExecuteConnector method receives a
        ExecuteConnectorRequest message and returns a
        ExecuteConnectorResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchConnector(self, request, context):
        """WatchConnector method receives a
        WatchConnectorRequest message and returns a
        WatchConnectorResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TestConnector(self, request, context):
        """TestConnector method receives a TestConnectorRequest
        message and returns a TestConnectorResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConnectorPublicServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Liveness': grpc.unary_unary_rpc_method_handler(
                    servicer.Liveness,
                    request_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.LivenessRequest.FromString,
                    response_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.LivenessResponse.SerializeToString,
            ),
            'Readiness': grpc.unary_unary_rpc_method_handler(
                    servicer.Readiness,
                    request_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.ReadinessRequest.FromString,
                    response_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.ReadinessResponse.SerializeToString,
            ),
            'ListConnectorDefinitions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListConnectorDefinitions,
                    request_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__definition__pb2.ListConnectorDefinitionsRequest.FromString,
                    response_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__definition__pb2.ListConnectorDefinitionsResponse.SerializeToString,
            ),
            'GetConnectorDefinition': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConnectorDefinition,
                    request_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__definition__pb2.GetConnectorDefinitionRequest.FromString,
                    response_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__definition__pb2.GetConnectorDefinitionResponse.SerializeToString,
            ),
            'CreateConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateConnector,
                    request_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.CreateConnectorRequest.FromString,
                    response_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.CreateConnectorResponse.SerializeToString,
            ),
            'ListConnectors': grpc.unary_unary_rpc_method_handler(
                    servicer.ListConnectors,
                    request_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.ListConnectorsRequest.FromString,
                    response_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.ListConnectorsResponse.SerializeToString,
            ),
            'GetConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConnector,
                    request_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.GetConnectorRequest.FromString,
                    response_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.GetConnectorResponse.SerializeToString,
            ),
            'UpdateConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateConnector,
                    request_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.UpdateConnectorRequest.FromString,
                    response_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.UpdateConnectorResponse.SerializeToString,
            ),
            'DeleteConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteConnector,
                    request_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.DeleteConnectorRequest.FromString,
                    response_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.DeleteConnectorResponse.SerializeToString,
            ),
            'LookUpConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.LookUpConnector,
                    request_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.LookUpConnectorRequest.FromString,
                    response_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.LookUpConnectorResponse.SerializeToString,
            ),
            'ConnectConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.ConnectConnector,
                    request_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.ConnectConnectorRequest.FromString,
                    response_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.ConnectConnectorResponse.SerializeToString,
            ),
            'DisconnectConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.DisconnectConnector,
                    request_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.DisconnectConnectorRequest.FromString,
                    response_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.DisconnectConnectorResponse.SerializeToString,
            ),
            'RenameConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.RenameConnector,
                    request_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.RenameConnectorRequest.FromString,
                    response_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.RenameConnectorResponse.SerializeToString,
            ),
            'ExecuteConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteConnector,
                    request_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.ExecuteConnectorRequest.FromString,
                    response_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.ExecuteConnectorResponse.SerializeToString,
            ),
            'WatchConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.WatchConnector,
                    request_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.WatchConnectorRequest.FromString,
                    response_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.WatchConnectorResponse.SerializeToString,
            ),
            'TestConnector': grpc.unary_unary_rpc_method_handler(
                    servicer.TestConnector,
                    request_deserializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.TestConnectorRequest.FromString,
                    response_serializer=vdp_dot_connector_dot_v1alpha_dot_connector__pb2.TestConnectorResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'vdp.connector.v1alpha.ConnectorPublicService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ConnectorPublicService(object):
    """Connector service responds to external access
    """

    @staticmethod
    def Liveness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.connector.v1alpha.ConnectorPublicService/Liveness',
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.LivenessRequest.SerializeToString,
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.LivenessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Readiness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.connector.v1alpha.ConnectorPublicService/Readiness',
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.ReadinessRequest.SerializeToString,
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.ReadinessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListConnectorDefinitions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.connector.v1alpha.ConnectorPublicService/ListConnectorDefinitions',
            vdp_dot_connector_dot_v1alpha_dot_connector__definition__pb2.ListConnectorDefinitionsRequest.SerializeToString,
            vdp_dot_connector_dot_v1alpha_dot_connector__definition__pb2.ListConnectorDefinitionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConnectorDefinition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.connector.v1alpha.ConnectorPublicService/GetConnectorDefinition',
            vdp_dot_connector_dot_v1alpha_dot_connector__definition__pb2.GetConnectorDefinitionRequest.SerializeToString,
            vdp_dot_connector_dot_v1alpha_dot_connector__definition__pb2.GetConnectorDefinitionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.connector.v1alpha.ConnectorPublicService/CreateConnector',
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.CreateConnectorRequest.SerializeToString,
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.CreateConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListConnectors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.connector.v1alpha.ConnectorPublicService/ListConnectors',
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.ListConnectorsRequest.SerializeToString,
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.ListConnectorsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.connector.v1alpha.ConnectorPublicService/GetConnector',
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.GetConnectorRequest.SerializeToString,
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.GetConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.connector.v1alpha.ConnectorPublicService/UpdateConnector',
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.UpdateConnectorRequest.SerializeToString,
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.UpdateConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.connector.v1alpha.ConnectorPublicService/DeleteConnector',
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.DeleteConnectorRequest.SerializeToString,
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.DeleteConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LookUpConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.connector.v1alpha.ConnectorPublicService/LookUpConnector',
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.LookUpConnectorRequest.SerializeToString,
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.LookUpConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConnectConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.connector.v1alpha.ConnectorPublicService/ConnectConnector',
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.ConnectConnectorRequest.SerializeToString,
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.ConnectConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisconnectConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.connector.v1alpha.ConnectorPublicService/DisconnectConnector',
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.DisconnectConnectorRequest.SerializeToString,
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.DisconnectConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenameConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.connector.v1alpha.ConnectorPublicService/RenameConnector',
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.RenameConnectorRequest.SerializeToString,
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.RenameConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExecuteConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.connector.v1alpha.ConnectorPublicService/ExecuteConnector',
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.ExecuteConnectorRequest.SerializeToString,
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.ExecuteConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WatchConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.connector.v1alpha.ConnectorPublicService/WatchConnector',
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.WatchConnectorRequest.SerializeToString,
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.WatchConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TestConnector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.connector.v1alpha.ConnectorPublicService/TestConnector',
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.TestConnectorRequest.SerializeToString,
            vdp_dot_connector_dot_v1alpha_dot_connector__pb2.TestConnectorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
