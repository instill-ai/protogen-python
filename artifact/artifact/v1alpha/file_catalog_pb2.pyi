"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import artifact.artifact.v1alpha.artifact_pb2
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class GetFileCatalogRequest(google.protobuf.message.Message):
    """GetFileCatalogRequest represents a request to view the processing outputs of
    a file in a catalog.
    Namespace ID and catalog ID are kept for backwards compatibility, but we
    might consider flattening the structure.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_ID_FIELD_NUMBER: builtins.int
    CATALOG_ID_FIELD_NUMBER: builtins.int
    FILE_UID_FIELD_NUMBER: builtins.int
    namespace_id: builtins.str
    """Namespace ID."""
    catalog_id: builtins.str
    """Catalog ID."""
    file_uid: builtins.str
    """File UID."""
    def __init__(
        self,
        *,
        namespace_id: builtins.str = ...,
        catalog_id: builtins.str = ...,
        file_uid: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["catalog_id", b"catalog_id", "file_uid", b"file_uid", "namespace_id", b"namespace_id"]) -> None: ...

global___GetFileCatalogRequest = GetFileCatalogRequest

@typing_extensions.final
class GetFileCatalogResponse(google.protobuf.message.Message):
    """GetFileCatalogResponse contains the processing outputs of a file in a
    catalog.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _ChunkType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _ChunkTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[GetFileCatalogResponse._ChunkType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        CHUNK_TYPE_UNSPECIFIED: GetFileCatalogResponse._ChunkType.ValueType  # 0
        """Unspecified."""
        CHUNK_TYPE_TEXT: GetFileCatalogResponse._ChunkType.ValueType  # 1
        """Text."""
        CHUNK_TYPE_IMAGE: GetFileCatalogResponse._ChunkType.ValueType  # 2
        """Image."""
        CHUNK_TYPE_AUDIO: GetFileCatalogResponse._ChunkType.ValueType  # 3
        """Audio."""
        CHUNK_TYPE_VIDEO: GetFileCatalogResponse._ChunkType.ValueType  # 4
        """Video."""

    class ChunkType(_ChunkType, metaclass=_ChunkTypeEnumTypeWrapper):
        """ChunkType contains the different types of a chunk."""

    CHUNK_TYPE_UNSPECIFIED: GetFileCatalogResponse.ChunkType.ValueType  # 0
    """Unspecified."""
    CHUNK_TYPE_TEXT: GetFileCatalogResponse.ChunkType.ValueType  # 1
    """Text."""
    CHUNK_TYPE_IMAGE: GetFileCatalogResponse.ChunkType.ValueType  # 2
    """Image."""
    CHUNK_TYPE_AUDIO: GetFileCatalogResponse.ChunkType.ValueType  # 3
    """Audio."""
    CHUNK_TYPE_VIDEO: GetFileCatalogResponse.ChunkType.ValueType  # 4
    """Video."""

    @typing_extensions.final
    class FileMetadata(google.protobuf.message.Message):
        """FileMetadata contains information about the file."""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        UID_FIELD_NUMBER: builtins.int
        FILENAME_FIELD_NUMBER: builtins.int
        FILE_TYPE_FIELD_NUMBER: builtins.int
        SIZE_FIELD_NUMBER: builtins.int
        CREATE_TIME_FIELD_NUMBER: builtins.int
        PROCESS_STATUS_FIELD_NUMBER: builtins.int
        uid: builtins.str
        """File UID."""
        filename: builtins.str
        """Filename"""
        file_type: artifact.artifact.v1alpha.artifact_pb2.File.Type.ValueType
        """File Type."""
        size: builtins.int
        """Size."""
        @property
        def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Creation timestamp"""
        process_status: artifact.artifact.v1alpha.artifact_pb2.FileProcessStatus.ValueType
        """Processing status of the file."""
        def __init__(
            self,
            *,
            uid: builtins.str = ...,
            filename: builtins.str = ...,
            file_type: artifact.artifact.v1alpha.artifact_pb2.File.Type.ValueType = ...,
            size: builtins.int = ...,
            create_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
            process_status: artifact.artifact.v1alpha.artifact_pb2.FileProcessStatus.ValueType = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["create_time", b"create_time"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["create_time", b"create_time", "file_type", b"file_type", "filename", b"filename", "process_status", b"process_status", "size", b"size", "uid", b"uid"]) -> None: ...

    @typing_extensions.final
    class Text(google.protobuf.message.Message):
        """Text contains the text representation of the file."""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        PIPELINES_FIELD_NUMBER: builtins.int
        CONTENT_FIELD_NUMBER: builtins.int
        CHUNK_COUNT_FIELD_NUMBER: builtins.int
        TOKEN_COUNT_FIELD_NUMBER: builtins.int
        UPDATE_TIME_FIELD_NUMBER: builtins.int
        @property
        def pipelines(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
            """Pipelines used to process the file."""
        content: builtins.str
        """Text representation of the file."""
        chunk_count: builtins.int
        """Chunk count in the text."""
        token_count: builtins.int
        """Token count in the text"""
        @property
        def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Last update timestamp for the text."""
        def __init__(
            self,
            *,
            pipelines: collections.abc.Iterable[builtins.str] | None = ...,
            content: builtins.str = ...,
            chunk_count: builtins.int = ...,
            token_count: builtins.int = ...,
            update_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["update_time", b"update_time"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["chunk_count", b"chunk_count", "content", b"content", "pipelines", b"pipelines", "token_count", b"token_count", "update_time", b"update_time"]) -> None: ...

    @typing_extensions.final
    class Chunk(google.protobuf.message.Message):
        """Chunk is a delimited part of the converted text."""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        UID_FIELD_NUMBER: builtins.int
        TYPE_FIELD_NUMBER: builtins.int
        START_POSITION_FIELD_NUMBER: builtins.int
        END_POSITION_FIELD_NUMBER: builtins.int
        CONTENT_FIELD_NUMBER: builtins.int
        TOKEN_COUNT_FIELD_NUMBER: builtins.int
        EMBEDDING_FIELD_NUMBER: builtins.int
        CREATE_TIME_FIELD_NUMBER: builtins.int
        RETRIEVABLE_FIELD_NUMBER: builtins.int
        uid: builtins.str
        """Chunk UID."""
        type: global___GetFileCatalogResponse.ChunkType.ValueType
        """Chunk type. I.e: text, image, audio, video."""
        start_position: builtins.int
        """Start position in the text."""
        end_position: builtins.int
        """End position in the text."""
        content: builtins.str
        """Content."""
        token_count: builtins.int
        """Token count in the chunk."""
        @property
        def embedding(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
            """Chunk embedding."""
        @property
        def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Creation time of the chunk."""
        retrievable: builtins.bool
        """Retrievability of the chunk."""
        def __init__(
            self,
            *,
            uid: builtins.str = ...,
            type: global___GetFileCatalogResponse.ChunkType.ValueType = ...,
            start_position: builtins.int = ...,
            end_position: builtins.int = ...,
            content: builtins.str = ...,
            token_count: builtins.int = ...,
            embedding: collections.abc.Iterable[builtins.float] | None = ...,
            create_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
            retrievable: builtins.bool = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["create_time", b"create_time"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["content", b"content", "create_time", b"create_time", "embedding", b"embedding", "end_position", b"end_position", "retrievable", b"retrievable", "start_position", b"start_position", "token_count", b"token_count", "type", b"type", "uid", b"uid"]) -> None: ...

    ORIGINAL_DATA_FIELD_NUMBER: builtins.int
    FILE_METADATA_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int
    CHUNKS_FIELD_NUMBER: builtins.int
    original_data: builtins.str
    """Base-64 representation of the original file contents."""
    @property
    def file_metadata(self) -> global___GetFileCatalogResponse.FileMetadata:
        """File metadata."""
    @property
    def text(self) -> global___GetFileCatalogResponse.Text:
        """Converted text."""
    @property
    def chunks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GetFileCatalogResponse.Chunk]:
        """Chunks."""
    def __init__(
        self,
        *,
        original_data: builtins.str = ...,
        file_metadata: global___GetFileCatalogResponse.FileMetadata | None = ...,
        text: global___GetFileCatalogResponse.Text | None = ...,
        chunks: collections.abc.Iterable[global___GetFileCatalogResponse.Chunk] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["file_metadata", b"file_metadata", "text", b"text"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["chunks", b"chunks", "file_metadata", b"file_metadata", "original_data", b"original_data", "text", b"text"]) -> None: ...

global___GetFileCatalogResponse = GetFileCatalogResponse

@typing_extensions.final
class GetFileAsMarkdownRequest(google.protobuf.message.Message):
    """GetFileAsMarkdownRequest represents a request to fetch the Markdown
    representation of a file.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILE_UID_FIELD_NUMBER: builtins.int
    file_uid: builtins.str
    """File UID."""
    def __init__(
        self,
        *,
        file_uid: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["file_uid", b"file_uid"]) -> None: ...

global___GetFileAsMarkdownRequest = GetFileAsMarkdownRequest

@typing_extensions.final
class GetFileAsMarkdownResponse(google.protobuf.message.Message):
    """GetFileAsMarkdownResponse contains a blob with the Markdown representation
    of a file.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MARKDOWN_FIELD_NUMBER: builtins.int
    markdown: builtins.str
    """The Markdown representation of a file."""
    def __init__(
        self,
        *,
        markdown: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["markdown", b"markdown"]) -> None: ...

global___GetFileAsMarkdownResponse = GetFileAsMarkdownResponse

@typing_extensions.final
class GetChatFileRequest(google.protobuf.message.Message):
    """GetChatFileRequest ..."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_ID_FIELD_NUMBER: builtins.int
    CATALOG_ID_FIELD_NUMBER: builtins.int
    FILE_ID_FIELD_NUMBER: builtins.int
    namespace_id: builtins.str
    """id of the namespace"""
    catalog_id: builtins.str
    """id of the catalog"""
    file_id: builtins.str
    """id of the file(i.e. file name)"""
    def __init__(
        self,
        *,
        namespace_id: builtins.str = ...,
        catalog_id: builtins.str = ...,
        file_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["catalog_id", b"catalog_id", "file_id", b"file_id", "namespace_id", b"namespace_id"]) -> None: ...

global___GetChatFileRequest = GetChatFileRequest

@typing_extensions.final
class GetChatFileResponse(google.protobuf.message.Message):
    """GetChatFileResponse ..."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MARKDOWN_FIELD_NUMBER: builtins.int
    markdown: builtins.bytes
    """converted markdown content"""
    def __init__(
        self,
        *,
        markdown: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["markdown", b"markdown"]) -> None: ...

global___GetChatFileResponse = GetChatFileResponse
