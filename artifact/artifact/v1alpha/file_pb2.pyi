"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import google.protobuf.timestamp_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _FileProcessStatus:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _FileProcessStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FileProcessStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    FILE_PROCESS_STATUS_UNSPECIFIED: _FileProcessStatus.ValueType  # 0
    """UNSPECIFIED"""
    FILE_PROCESS_STATUS_NOTSTARTED: _FileProcessStatus.ValueType  # 1
    """NOTSTARTED"""
    FILE_PROCESS_STATUS_PROCESSING: _FileProcessStatus.ValueType  # 2
    """file is being processed (parallel architecture: conversion + summarization)"""
    FILE_PROCESS_STATUS_CHUNKING: _FileProcessStatus.ValueType  # 3
    """file is chunking"""
    FILE_PROCESS_STATUS_EMBEDDING: _FileProcessStatus.ValueType  # 4
    """file is embedding"""
    FILE_PROCESS_STATUS_COMPLETED: _FileProcessStatus.ValueType  # 5
    """completed"""
    FILE_PROCESS_STATUS_FAILED: _FileProcessStatus.ValueType  # 6
    """failed"""

class FileProcessStatus(_FileProcessStatus, metaclass=_FileProcessStatusEnumTypeWrapper):
    """file embedding process status"""

FILE_PROCESS_STATUS_UNSPECIFIED: FileProcessStatus.ValueType  # 0
"""UNSPECIFIED"""
FILE_PROCESS_STATUS_NOTSTARTED: FileProcessStatus.ValueType  # 1
"""NOTSTARTED"""
FILE_PROCESS_STATUS_PROCESSING: FileProcessStatus.ValueType  # 2
"""file is being processed (parallel architecture: conversion + summarization)"""
FILE_PROCESS_STATUS_CHUNKING: FileProcessStatus.ValueType  # 3
"""file is chunking"""
FILE_PROCESS_STATUS_EMBEDDING: FileProcessStatus.ValueType  # 4
"""file is embedding"""
FILE_PROCESS_STATUS_COMPLETED: FileProcessStatus.ValueType  # 5
"""completed"""
FILE_PROCESS_STATUS_FAILED: FileProcessStatus.ValueType  # 6
"""failed"""
global___FileProcessStatus = FileProcessStatus

class _ConvertedFileType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ConvertedFileTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ConvertedFileType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    CONVERTED_FILE_TYPE_UNSPECIFIED: _ConvertedFileType.ValueType  # 0
    """unspecified"""
    CONVERTED_FILE_TYPE_CONTENT: _ConvertedFileType.ValueType  # 1
    """content"""
    CONVERTED_FILE_TYPE_SUMMARY: _ConvertedFileType.ValueType  # 2
    """summary"""
    CONVERTED_FILE_TYPE_DOCUMENT: _ConvertedFileType.ValueType  # 3
    """document (standardized to PDF)"""
    CONVERTED_FILE_TYPE_IMAGE: _ConvertedFileType.ValueType  # 4
    """image (standardized to PNG)"""
    CONVERTED_FILE_TYPE_AUDIO: _ConvertedFileType.ValueType  # 5
    """audio (standardized to OGG)"""
    CONVERTED_FILE_TYPE_VIDEO: _ConvertedFileType.ValueType  # 6
    """video (standardized to MP4)"""

class ConvertedFileType(_ConvertedFileType, metaclass=_ConvertedFileTypeEnumTypeWrapper):
    """converted file type"""

CONVERTED_FILE_TYPE_UNSPECIFIED: ConvertedFileType.ValueType  # 0
"""unspecified"""
CONVERTED_FILE_TYPE_CONTENT: ConvertedFileType.ValueType  # 1
"""content"""
CONVERTED_FILE_TYPE_SUMMARY: ConvertedFileType.ValueType  # 2
"""summary"""
CONVERTED_FILE_TYPE_DOCUMENT: ConvertedFileType.ValueType  # 3
"""document (standardized to PDF)"""
CONVERTED_FILE_TYPE_IMAGE: ConvertedFileType.ValueType  # 4
"""image (standardized to PNG)"""
CONVERTED_FILE_TYPE_AUDIO: ConvertedFileType.ValueType  # 5
"""audio (standardized to OGG)"""
CONVERTED_FILE_TYPE_VIDEO: ConvertedFileType.ValueType  # 6
"""video (standardized to MP4)"""
global___ConvertedFileType = ConvertedFileType

@typing_extensions.final
class File(google.protobuf.message.Message):
    """File represents a file in a catalog."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _View:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _ViewEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[File._View.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        VIEW_UNSPECIFIED: File._View.ValueType  # 0
        """Unspecified, equivalent to BASIC."""
        VIEW_BASIC: File._View.ValueType  # 1
        """Default view, only includes basic metadata."""
        VIEW_FULL: File._View.ValueType  # 2
        """Full representation with all metadata."""
        VIEW_SUMMARY: File._View.ValueType  # 3
        """Returns MinIO pre-signed URL to converted summary content."""
        VIEW_CONTENT: File._View.ValueType  # 4
        """Returns MinIO pre-signed URL to converted markdown content."""
        VIEW_STANDARD_FILE_TYPE: File._View.ValueType  # 5
        """Returns MinIO pre-signed URL to standardized file:
        - Documents → PDF
        - Images → PNG
        - Audio → OGG
        - Video → MP4
        """
        VIEW_ORIGINAL_FILE_TYPE: File._View.ValueType  # 6
        """Returns MinIO pre-signed URL to the original uploaded file."""
        VIEW_CACHE: File._View.ValueType  # 7
        """Returns Gemini cache resource name."""

    class View(_View, metaclass=_ViewEnumTypeWrapper):
        """View defines how a file is presented."""

    VIEW_UNSPECIFIED: File.View.ValueType  # 0
    """Unspecified, equivalent to BASIC."""
    VIEW_BASIC: File.View.ValueType  # 1
    """Default view, only includes basic metadata."""
    VIEW_FULL: File.View.ValueType  # 2
    """Full representation with all metadata."""
    VIEW_SUMMARY: File.View.ValueType  # 3
    """Returns MinIO pre-signed URL to converted summary content."""
    VIEW_CONTENT: File.View.ValueType  # 4
    """Returns MinIO pre-signed URL to converted markdown content."""
    VIEW_STANDARD_FILE_TYPE: File.View.ValueType  # 5
    """Returns MinIO pre-signed URL to standardized file:
    - Documents → PDF
    - Images → PNG
    - Audio → OGG
    - Video → MP4
    """
    VIEW_ORIGINAL_FILE_TYPE: File.View.ValueType  # 6
    """Returns MinIO pre-signed URL to the original uploaded file."""
    VIEW_CACHE: File.View.ValueType  # 7
    """Returns Gemini cache resource name."""

    class _Type:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[File._Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        TYPE_UNSPECIFIED: File._Type.ValueType  # 0
        """unspecified"""
        TYPE_TEXT: File._Type.ValueType  # 1
        """Text-based document types
        text
        """
        TYPE_PDF: File._Type.ValueType  # 2
        """PDF"""
        TYPE_MARKDOWN: File._Type.ValueType  # 3
        """MARKDOWN"""
        TYPE_HTML: File._Type.ValueType  # 7
        """HTML"""
        TYPE_CSV: File._Type.ValueType  # 14
        """CSV"""
        TYPE_DOCX: File._Type.ValueType  # 8
        """Microsoft Office document types
        DOCX
        """
        TYPE_DOC: File._Type.ValueType  # 9
        """DOC"""
        TYPE_PPT: File._Type.ValueType  # 10
        """PPT"""
        TYPE_PPTX: File._Type.ValueType  # 11
        """PPTX"""
        TYPE_XLS: File._Type.ValueType  # 12
        """XLS"""
        TYPE_XLSX: File._Type.ValueType  # 13
        """XLSX"""
        TYPE_PNG: File._Type.ValueType  # 4
        """Image types (supported by pipeline-backend/pkg/data/image.go)
        PNG
        """
        TYPE_JPEG: File._Type.ValueType  # 5
        """JPEG"""
        TYPE_JPG: File._Type.ValueType  # 6
        """JPG"""
        TYPE_GIF: File._Type.ValueType  # 15
        """GIF"""
        TYPE_WEBP: File._Type.ValueType  # 16
        """WEBP"""
        TYPE_TIFF: File._Type.ValueType  # 17
        """TIFF"""
        TYPE_BMP: File._Type.ValueType  # 18
        """BMP"""
        TYPE_HEIC: File._Type.ValueType  # 19
        """HEIC"""
        TYPE_HEIF: File._Type.ValueType  # 20
        """HEIF"""
        TYPE_AVIF: File._Type.ValueType  # 21
        """AVIF"""
        TYPE_MP3: File._Type.ValueType  # 22
        """Audio types (supported by pipeline-backend/pkg/data/audio.go)
        MP3
        """
        TYPE_WAV: File._Type.ValueType  # 23
        """WAV"""
        TYPE_AAC: File._Type.ValueType  # 24
        """AAC"""
        TYPE_OGG: File._Type.ValueType  # 25
        """OGG"""
        TYPE_FLAC: File._Type.ValueType  # 26
        """FLAC"""
        TYPE_M4A: File._Type.ValueType  # 27
        """M4A"""
        TYPE_WMA: File._Type.ValueType  # 28
        """WMA"""
        TYPE_AIFF: File._Type.ValueType  # 29
        """AIFF"""
        TYPE_MP4: File._Type.ValueType  # 30
        """Video types (supported by pipeline-backend/pkg/data/video.go)
        MP4
        """
        TYPE_AVI: File._Type.ValueType  # 31
        """AVI"""
        TYPE_MOV: File._Type.ValueType  # 32
        """MOV"""
        TYPE_WEBM_VIDEO: File._Type.ValueType  # 33
        """WEBM (video)"""
        TYPE_MKV: File._Type.ValueType  # 34
        """MKV"""
        TYPE_FLV: File._Type.ValueType  # 35
        """FLV"""
        TYPE_WMV: File._Type.ValueType  # 36
        """WMV"""
        TYPE_MPEG: File._Type.ValueType  # 37
        """MPEG"""

    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """Supported file types by the pipeline-backend."""

    TYPE_UNSPECIFIED: File.Type.ValueType  # 0
    """unspecified"""
    TYPE_TEXT: File.Type.ValueType  # 1
    """Text-based document types
    text
    """
    TYPE_PDF: File.Type.ValueType  # 2
    """PDF"""
    TYPE_MARKDOWN: File.Type.ValueType  # 3
    """MARKDOWN"""
    TYPE_HTML: File.Type.ValueType  # 7
    """HTML"""
    TYPE_CSV: File.Type.ValueType  # 14
    """CSV"""
    TYPE_DOCX: File.Type.ValueType  # 8
    """Microsoft Office document types
    DOCX
    """
    TYPE_DOC: File.Type.ValueType  # 9
    """DOC"""
    TYPE_PPT: File.Type.ValueType  # 10
    """PPT"""
    TYPE_PPTX: File.Type.ValueType  # 11
    """PPTX"""
    TYPE_XLS: File.Type.ValueType  # 12
    """XLS"""
    TYPE_XLSX: File.Type.ValueType  # 13
    """XLSX"""
    TYPE_PNG: File.Type.ValueType  # 4
    """Image types (supported by pipeline-backend/pkg/data/image.go)
    PNG
    """
    TYPE_JPEG: File.Type.ValueType  # 5
    """JPEG"""
    TYPE_JPG: File.Type.ValueType  # 6
    """JPG"""
    TYPE_GIF: File.Type.ValueType  # 15
    """GIF"""
    TYPE_WEBP: File.Type.ValueType  # 16
    """WEBP"""
    TYPE_TIFF: File.Type.ValueType  # 17
    """TIFF"""
    TYPE_BMP: File.Type.ValueType  # 18
    """BMP"""
    TYPE_HEIC: File.Type.ValueType  # 19
    """HEIC"""
    TYPE_HEIF: File.Type.ValueType  # 20
    """HEIF"""
    TYPE_AVIF: File.Type.ValueType  # 21
    """AVIF"""
    TYPE_MP3: File.Type.ValueType  # 22
    """Audio types (supported by pipeline-backend/pkg/data/audio.go)
    MP3
    """
    TYPE_WAV: File.Type.ValueType  # 23
    """WAV"""
    TYPE_AAC: File.Type.ValueType  # 24
    """AAC"""
    TYPE_OGG: File.Type.ValueType  # 25
    """OGG"""
    TYPE_FLAC: File.Type.ValueType  # 26
    """FLAC"""
    TYPE_M4A: File.Type.ValueType  # 27
    """M4A"""
    TYPE_WMA: File.Type.ValueType  # 28
    """WMA"""
    TYPE_AIFF: File.Type.ValueType  # 29
    """AIFF"""
    TYPE_MP4: File.Type.ValueType  # 30
    """Video types (supported by pipeline-backend/pkg/data/video.go)
    MP4
    """
    TYPE_AVI: File.Type.ValueType  # 31
    """AVI"""
    TYPE_MOV: File.Type.ValueType  # 32
    """MOV"""
    TYPE_WEBM_VIDEO: File.Type.ValueType  # 33
    """WEBM (video)"""
    TYPE_MKV: File.Type.ValueType  # 34
    """MKV"""
    TYPE_FLV: File.Type.ValueType  # 35
    """FLV"""
    TYPE_WMV: File.Type.ValueType  # 36
    """WMV"""
    TYPE_MPEG: File.Type.ValueType  # 37
    """MPEG"""

    class _FileMediaType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _FileMediaTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[File._FileMediaType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        FILE_MEDIA_TYPE_UNSPECIFIED: File._FileMediaType.ValueType  # 0
        """Unspecified."""
        FILE_MEDIA_TYPE_DOCUMENT: File._FileMediaType.ValueType  # 1
        """Document."""
        FILE_MEDIA_TYPE_IMAGE: File._FileMediaType.ValueType  # 2
        """Image."""
        FILE_MEDIA_TYPE_AUDIO: File._FileMediaType.ValueType  # 3
        """Audio."""
        FILE_MEDIA_TYPE_VIDEO: File._FileMediaType.ValueType  # 4
        """Video."""

    class FileMediaType(_FileMediaType, metaclass=_FileMediaTypeEnumTypeWrapper):
        """FileMediaType describes the media category of a catalog file."""

    FILE_MEDIA_TYPE_UNSPECIFIED: File.FileMediaType.ValueType  # 0
    """Unspecified."""
    FILE_MEDIA_TYPE_DOCUMENT: File.FileMediaType.ValueType  # 1
    """Document."""
    FILE_MEDIA_TYPE_IMAGE: File.FileMediaType.ValueType  # 2
    """Image."""
    FILE_MEDIA_TYPE_AUDIO: File.FileMediaType.ValueType  # 3
    """Audio."""
    FILE_MEDIA_TYPE_VIDEO: File.FileMediaType.ValueType  # 4
    """Video."""

    @typing_extensions.final
    class Position(google.protobuf.message.Message):
        """Position within a file, as coordinates in a a specific unit. The
        number of dimensions of the coordinate depends on the unit type.
        """

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        class _Unit:
            ValueType = typing.NewType("ValueType", builtins.int)
            V: typing_extensions.TypeAlias = ValueType

        class _UnitEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[File.Position._Unit.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            UNIT_UNSPECIFIED: File.Position._Unit.ValueType  # 0
            """Unspecified."""
            UNIT_CHARACTER: File.Position._Unit.ValueType  # 1
            """Character positions (for Markdown and other text files)."""
            UNIT_PAGE: File.Position._Unit.ValueType  # 2
            """Page positions (for documents). For pages, positions are 1-indexed
            (e.g., page 4 of 4) to align with document visualization standards.
            """
            UNIT_TIME_MS: File.Position._Unit.ValueType  # 3
            """Time positions in milliseconds (for audio/video files)."""
            UNIT_PIXEL: File.Position._Unit.ValueType  # 4
            """Pixel positions (for images and other 2D content)."""

        class Unit(_Unit, metaclass=_UnitEnumTypeWrapper):
            """Unit of measurement for a position within a file."""

        UNIT_UNSPECIFIED: File.Position.Unit.ValueType  # 0
        """Unspecified."""
        UNIT_CHARACTER: File.Position.Unit.ValueType  # 1
        """Character positions (for Markdown and other text files)."""
        UNIT_PAGE: File.Position.Unit.ValueType  # 2
        """Page positions (for documents). For pages, positions are 1-indexed
        (e.g., page 4 of 4) to align with document visualization standards.
        """
        UNIT_TIME_MS: File.Position.Unit.ValueType  # 3
        """Time positions in milliseconds (for audio/video files)."""
        UNIT_PIXEL: File.Position.Unit.ValueType  # 4
        """Pixel positions (for images and other 2D content)."""

        UNIT_FIELD_NUMBER: builtins.int
        COORDINATES_FIELD_NUMBER: builtins.int
        unit: global___File.Position.Unit.ValueType
        """Unit of measurement for the position."""
        @property
        def coordinates(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
            """Position value."""
        def __init__(
            self,
            *,
            unit: global___File.Position.Unit.ValueType = ...,
            coordinates: collections.abc.Iterable[builtins.int] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["coordinates", b"coordinates", "unit", b"unit"]) -> None: ...

    UID_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    FILENAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    PROCESS_STATUS_FIELD_NUMBER: builtins.int
    PROCESS_OUTCOME_FIELD_NUMBER: builtins.int
    RETRIEVABLE_FIELD_NUMBER: builtins.int
    CONTENT_FIELD_NUMBER: builtins.int
    OWNER_UID_FIELD_NUMBER: builtins.int
    CREATOR_UID_FIELD_NUMBER: builtins.int
    CATALOG_UID_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    DELETE_TIME_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    TOTAL_CHUNKS_FIELD_NUMBER: builtins.int
    TOTAL_TOKENS_FIELD_NUMBER: builtins.int
    EXTERNAL_METADATA_FIELD_NUMBER: builtins.int
    OBJECT_UID_FIELD_NUMBER: builtins.int
    SUMMARY_FIELD_NUMBER: builtins.int
    DOWNLOAD_URL_FIELD_NUMBER: builtins.int
    CONVERTING_PIPELINE_FIELD_NUMBER: builtins.int
    LENGTH_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    uid: builtins.str
    """The file uid (internal UUID, also used as id)."""
    id: builtins.str
    """The file id (same as uid)."""
    name: builtins.str
    """The resource name of the file.
    Format: `namespaces/{namespace}/catalogs/{catalog}/files/{file}`.
    """
    filename: builtins.str
    """The filename provided by the user."""
    type: global___File.Type.ValueType
    """file type"""
    process_status: global___FileProcessStatus.ValueType
    """file process status"""
    process_outcome: builtins.str
    """file process message"""
    retrievable: builtins.bool
    """retrievable(this is reserved for future use)"""
    content: builtins.str
    """content(this is reserved for future use)"""
    owner_uid: builtins.str
    """owner/namespace uid"""
    creator_uid: builtins.str
    """creator uid from authn token"""
    catalog_uid: builtins.str
    """catalog uid"""
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """create time"""
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """update time"""
    @property
    def delete_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """delete time"""
    size: builtins.int
    """file size in bytes"""
    total_chunks: builtins.int
    """total chunks"""
    total_tokens: builtins.int
    """total tokens"""
    @property
    def external_metadata(self) -> google.protobuf.struct_pb2.Struct:
        """Custom metadata provided by the user during file upload"""
    object_uid: builtins.str
    """objectUid in blob storage. user can upload to blob storage directly, then put objectUid here.
    then no need the base64 encoding for the file content.
    """
    summary: builtins.str
    """Summary of the file.
    Deprecated: Use GetFile with VIEW_SUMMARY to retrieve file summaries.
    This field now returns an empty string as summaries are stored separately in MinIO.
    """
    download_url: builtins.str
    """download url of the file"""
    converting_pipeline: builtins.str
    """Pipeline used for converting the file to Markdown if the file is a
    document (i.e., a file with pdf, doc[x] or ppt[x] extension). The value
    identifies the pipeline release and and MUST have the format
    `{namespaceID}/{pipelineID}@{version}`.
    The pipeline recipe MUST have the following variable and output fields:
    ```yaml variable
    variable:
      document_input:
        title: document-input
        description: Upload a document (PDF/DOCX/DOC/PPTX/PPT)
        type: file
    ```
    The `convert_result` output should be a list of strings, one per page.
    ```yaml output
    output:
     convert_result:
       title: convert-result
       value: ${merge-markdown-refinement.output.results[0]}
    ```
    Other variable and output fields will be ignored.

    The pipeline will be executed first, falling back to the catalog's
    conversion pipelines if the conversion doesn't yield a non-empty result
    (see the catalog creation endpoint documentation).

    For non-document catalog files, the conversion pipeline is deterministic
    (such files are typically trivial to convert and don't require a dedicated
    pipeline to improve the conversion performance).
    """
    @property
    def length(self) -> global___File.Position:
        """Length of the file in the specified unit type. It is defined as the number
        of positions (the unit will depend on the file type) that can be accessed
        in the file.
        """
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Array of tags associated with the file"""
    def __init__(
        self,
        *,
        uid: builtins.str = ...,
        id: builtins.str = ...,
        name: builtins.str = ...,
        filename: builtins.str = ...,
        type: global___File.Type.ValueType = ...,
        process_status: global___FileProcessStatus.ValueType = ...,
        process_outcome: builtins.str = ...,
        retrievable: builtins.bool = ...,
        content: builtins.str = ...,
        owner_uid: builtins.str = ...,
        creator_uid: builtins.str = ...,
        catalog_uid: builtins.str = ...,
        create_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        update_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        delete_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        size: builtins.int = ...,
        total_chunks: builtins.int = ...,
        total_tokens: builtins.int = ...,
        external_metadata: google.protobuf.struct_pb2.Struct | None = ...,
        object_uid: builtins.str = ...,
        summary: builtins.str = ...,
        download_url: builtins.str = ...,
        converting_pipeline: builtins.str | None = ...,
        length: global___File.Position | None = ...,
        tags: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_converting_pipeline", b"_converting_pipeline", "_external_metadata", b"_external_metadata", "converting_pipeline", b"converting_pipeline", "create_time", b"create_time", "delete_time", b"delete_time", "external_metadata", b"external_metadata", "length", b"length", "update_time", b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_converting_pipeline", b"_converting_pipeline", "_external_metadata", b"_external_metadata", "catalog_uid", b"catalog_uid", "content", b"content", "converting_pipeline", b"converting_pipeline", "create_time", b"create_time", "creator_uid", b"creator_uid", "delete_time", b"delete_time", "download_url", b"download_url", "external_metadata", b"external_metadata", "filename", b"filename", "id", b"id", "length", b"length", "name", b"name", "object_uid", b"object_uid", "owner_uid", b"owner_uid", "process_outcome", b"process_outcome", "process_status", b"process_status", "retrievable", b"retrievable", "size", b"size", "summary", b"summary", "tags", b"tags", "total_chunks", b"total_chunks", "total_tokens", b"total_tokens", "type", b"type", "uid", b"uid", "update_time", b"update_time"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_converting_pipeline", b"_converting_pipeline"]) -> typing_extensions.Literal["converting_pipeline"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_external_metadata", b"_external_metadata"]) -> typing_extensions.Literal["external_metadata"] | None: ...

global___File = File

@typing_extensions.final
class CreateFileRequest(google.protobuf.message.Message):
    """CreateFileRequest represents a request to create a file."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_ID_FIELD_NUMBER: builtins.int
    CATALOG_ID_FIELD_NUMBER: builtins.int
    FILE_FIELD_NUMBER: builtins.int
    namespace_id: builtins.str
    """owner/namespace id"""
    catalog_id: builtins.str
    """catalog id"""
    @property
    def file(self) -> global___File:
        """file"""
    def __init__(
        self,
        *,
        namespace_id: builtins.str = ...,
        catalog_id: builtins.str = ...,
        file: global___File | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["file", b"file"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["catalog_id", b"catalog_id", "file", b"file", "namespace_id", b"namespace_id"]) -> None: ...

global___CreateFileRequest = CreateFileRequest

@typing_extensions.final
class CreateFileResponse(google.protobuf.message.Message):
    """CreateFileResponse represents a response for creating a file."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILE_FIELD_NUMBER: builtins.int
    @property
    def file(self) -> global___File:
        """file"""
    def __init__(
        self,
        *,
        file: global___File | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["file", b"file"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["file", b"file"]) -> None: ...

global___CreateFileResponse = CreateFileResponse

@typing_extensions.final
class DeleteFileRequest(google.protobuf.message.Message):
    """DeleteFileRequest represents a request to delete a file."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_ID_FIELD_NUMBER: builtins.int
    CATALOG_ID_FIELD_NUMBER: builtins.int
    FILE_ID_FIELD_NUMBER: builtins.int
    namespace_id: builtins.str
    """The namespace id."""
    catalog_id: builtins.str
    """The catalog id."""
    file_id: builtins.str
    """The file id."""
    def __init__(
        self,
        *,
        namespace_id: builtins.str = ...,
        catalog_id: builtins.str = ...,
        file_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["catalog_id", b"catalog_id", "file_id", b"file_id", "namespace_id", b"namespace_id"]) -> None: ...

global___DeleteFileRequest = DeleteFileRequest

@typing_extensions.final
class DeleteFileResponse(google.protobuf.message.Message):
    """DeleteFileResponse represents a response for deleting a file."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILE_ID_FIELD_NUMBER: builtins.int
    file_id: builtins.str
    """The file id."""
    def __init__(
        self,
        *,
        file_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["file_id", b"file_id"]) -> None: ...

global___DeleteFileResponse = DeleteFileResponse

@typing_extensions.final
class DeleteFileAdminRequest(google.protobuf.message.Message):
    """Admin-only file operations

    DeleteFileAdminRequest represents a request to delete a file (admin only).
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILE_ID_FIELD_NUMBER: builtins.int
    file_id: builtins.str
    """The file id."""
    def __init__(
        self,
        *,
        file_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["file_id", b"file_id"]) -> None: ...

global___DeleteFileAdminRequest = DeleteFileAdminRequest

@typing_extensions.final
class DeleteFileAdminResponse(google.protobuf.message.Message):
    """DeleteFileAdminResponse represents a response for deleting a file (admin only)."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILE_ID_FIELD_NUMBER: builtins.int
    file_id: builtins.str
    """The file id."""
    def __init__(
        self,
        *,
        file_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["file_id", b"file_id"]) -> None: ...

global___DeleteFileAdminResponse = DeleteFileAdminResponse

@typing_extensions.final
class ListFilesRequest(google.protobuf.message.Message):
    """ListFilesRequest represents a request to list files."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_ID_FIELD_NUMBER: builtins.int
    CATALOG_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    namespace_id: builtins.str
    """The owner/namespace id."""
    catalog_id: builtins.str
    """The catalog id."""
    page_size: builtins.int
    """The page size (default:10; max 100)."""
    page_token: builtins.str
    """The next page token(default from first file's token)."""
    filter: builtins.str
    """Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter expression.
    - `id="<uuid>"` or `uid="<uuid>"` - Filter by specific file ID/UID (supports multiple IDs separated by OR)
    - `process_status="FILE_PROCESS_STATUS_COMPLETED"` - Filter by processing status

    **Examples**:
    - List specific files: `id="uuid1" OR id="uuid2"`
    - List completed files: `process_status="FILE_PROCESS_STATUS_COMPLETED"`
    """
    def __init__(
        self,
        *,
        namespace_id: builtins.str = ...,
        catalog_id: builtins.str = ...,
        page_size: builtins.int | None = ...,
        page_token: builtins.str | None = ...,
        filter: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter", b"_filter", "_page_size", b"_page_size", "_page_token", b"_page_token", "filter", b"filter", "page_size", b"page_size", "page_token", b"page_token"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter", b"_filter", "_page_size", b"_page_size", "_page_token", b"_page_token", "catalog_id", b"catalog_id", "filter", b"filter", "namespace_id", b"namespace_id", "page_size", b"page_size", "page_token", b"page_token"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter", b"_filter"]) -> typing_extensions.Literal["filter"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_size", b"_page_size"]) -> typing_extensions.Literal["page_size"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token", b"_page_token"]) -> typing_extensions.Literal["page_token"] | None: ...

global___ListFilesRequest = ListFilesRequest

@typing_extensions.final
class ListFilesResponse(google.protobuf.message.Message):
    """ListFilesResponse represents a response for listing files."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILES_FIELD_NUMBER: builtins.int
    TOTAL_SIZE_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def files(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___File]:
        """The list of files."""
    total_size: builtins.int
    """The total number of files."""
    page_size: builtins.int
    """The requested page size."""
    next_page_token: builtins.str
    """next page token"""
    def __init__(
        self,
        *,
        files: collections.abc.Iterable[global___File] | None = ...,
        total_size: builtins.int = ...,
        page_size: builtins.int = ...,
        next_page_token: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["files", b"files", "next_page_token", b"next_page_token", "page_size", b"page_size", "total_size", b"total_size"]) -> None: ...

global___ListFilesResponse = ListFilesResponse

@typing_extensions.final
class GetFileRequest(google.protobuf.message.Message):
    """GetFileRequest represents a request to get a file."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_ID_FIELD_NUMBER: builtins.int
    CATALOG_ID_FIELD_NUMBER: builtins.int
    FILE_ID_FIELD_NUMBER: builtins.int
    VIEW_FIELD_NUMBER: builtins.int
    namespace_id: builtins.str
    """The namespace id."""
    catalog_id: builtins.str
    """The catalog id."""
    file_id: builtins.str
    """The file id."""
    view: global___File.View.ValueType
    """View allows clients to specify the desired file view in the response."""
    def __init__(
        self,
        *,
        namespace_id: builtins.str = ...,
        catalog_id: builtins.str = ...,
        file_id: builtins.str = ...,
        view: global___File.View.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_view", b"_view", "view", b"view"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_view", b"_view", "catalog_id", b"catalog_id", "file_id", b"file_id", "namespace_id", b"namespace_id", "view", b"view"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_view", b"_view"]) -> typing_extensions.Literal["view"] | None: ...

global___GetFileRequest = GetFileRequest

@typing_extensions.final
class GetFileResponse(google.protobuf.message.Message):
    """GetFileResponse represents a response for getting a file."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILE_FIELD_NUMBER: builtins.int
    DERIVED_RESOURCE_URI_FIELD_NUMBER: builtins.int
    @property
    def file(self) -> global___File:
        """The file metadata (always included)."""
    derived_resource_uri: builtins.str
    """Derived resource URI based on view:
    - VIEW_SUMMARY/CONTENT/STANDARD_FILE_TYPE/ORIGINAL_FILE_TYPE: MinIO pre-signed URL to content
    - VIEW_CACHE: Gemini cache resource name
    Only populated for VIEW_SUMMARY, VIEW_CONTENT, VIEW_STANDARD_FILE_TYPE, VIEW_ORIGINAL_FILE_TYPE, and VIEW_CACHE.
    """
    def __init__(
        self,
        *,
        file: global___File | None = ...,
        derived_resource_uri: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_derived_resource_uri", b"_derived_resource_uri", "derived_resource_uri", b"derived_resource_uri", "file", b"file"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_derived_resource_uri", b"_derived_resource_uri", "derived_resource_uri", b"derived_resource_uri", "file", b"file"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_derived_resource_uri", b"_derived_resource_uri"]) -> typing_extensions.Literal["derived_resource_uri"] | None: ...

global___GetFileResponse = GetFileResponse

@typing_extensions.final
class UpdateFileRequest(google.protobuf.message.Message):
    """UpdateFileRequest represents a request to update a file.
    Deprecated: Use UpdateFile with field_mask to update file properties including tags.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_ID_FIELD_NUMBER: builtins.int
    CATALOG_ID_FIELD_NUMBER: builtins.int
    FILE_ID_FIELD_NUMBER: builtins.int
    FILE_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    namespace_id: builtins.str
    """Namespace ID."""
    catalog_id: builtins.str
    """Catalog ID."""
    file_id: builtins.str
    """File ID."""
    @property
    def file(self) -> global___File:
        """The file fields that will replace the existing ones."""
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The update mask specifies the subset of fields that should be modified.

        For more information about this field, see
        https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#field-mask.
        """
    def __init__(
        self,
        *,
        namespace_id: builtins.str = ...,
        catalog_id: builtins.str = ...,
        file_id: builtins.str = ...,
        file: global___File | None = ...,
        update_mask: google.protobuf.field_mask_pb2.FieldMask | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["file", b"file", "update_mask", b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["catalog_id", b"catalog_id", "file", b"file", "file_id", b"file_id", "namespace_id", b"namespace_id", "update_mask", b"update_mask"]) -> None: ...

global___UpdateFileRequest = UpdateFileRequest

@typing_extensions.final
class UpdateFileResponse(google.protobuf.message.Message):
    """UpdateFileResponse represents a response for updating a file."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILE_FIELD_NUMBER: builtins.int
    @property
    def file(self) -> global___File:
        """Updated file."""
    def __init__(
        self,
        *,
        file: global___File | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["file", b"file"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["file", b"file"]) -> None: ...

global___UpdateFileResponse = UpdateFileResponse
