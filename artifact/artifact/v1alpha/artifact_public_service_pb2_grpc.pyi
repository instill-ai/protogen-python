"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import artifact.artifact.v1alpha.artifact_pb2
import artifact.artifact.v1alpha.catalog_pb2
import artifact.artifact.v1alpha.chunk_pb2
import artifact.artifact.v1alpha.file_pb2
import artifact.artifact.v1alpha.object_pb2
import collections.abc
import grpc
import grpc.aio
import typing

_T = typing.TypeVar('_T')

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta):
    ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore
    ...

class ArtifactPublicServiceStub:
    """ArtifactPublicService exposes the public endpoints that allow clients to
    manage artifacts.
    """

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Liveness: grpc.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.artifact_pb2.LivenessRequest,
        artifact.artifact.v1alpha.artifact_pb2.LivenessResponse,
    ]
    """Check if the artifact server is alive

    See https://github.com/grpc/grpc/blob/master/doc/health-checking.md.
    """
    Readiness: grpc.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.artifact_pb2.ReadinessRequest,
        artifact.artifact.v1alpha.artifact_pb2.ReadinessResponse,
    ]
    """Check if the artifact server is ready

    See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
    """
    CreateCatalog: grpc.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.catalog_pb2.CreateCatalogRequest,
        artifact.artifact.v1alpha.catalog_pb2.CreateCatalogResponse,
    ]
    """Create a catalog

    Creates a catalog.
    """
    GetCatalog: grpc.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.catalog_pb2.GetCatalogRequest,
        artifact.artifact.v1alpha.catalog_pb2.GetCatalogResponse,
    ]
    """Get a catalog

    Returns the details of a catalog.
    """
    ListCatalogs: grpc.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.catalog_pb2.ListCatalogsRequest,
        artifact.artifact.v1alpha.catalog_pb2.ListCatalogsResponse,
    ]
    """Get all catalogs info

    Returns a paginated list of catalogs.
    """
    UpdateCatalog: grpc.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.catalog_pb2.UpdateCatalogRequest,
        artifact.artifact.v1alpha.catalog_pb2.UpdateCatalogResponse,
    ]
    """Update a catalog info

    Updates the information of a catalog.
    """
    DeleteCatalog: grpc.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.catalog_pb2.DeleteCatalogRequest,
        artifact.artifact.v1alpha.catalog_pb2.DeleteCatalogResponse,
    ]
    """Delete a catalog

    Deletes a catalog.
    """
    CreateFile: grpc.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.file_pb2.CreateFileRequest,
        artifact.artifact.v1alpha.file_pb2.CreateFileResponse,
    ]
    """Create a file

    Uploads and converts a file to a catalog.
    """
    GetFile: grpc.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.file_pb2.GetFileRequest,
        artifact.artifact.v1alpha.file_pb2.GetFileResponse,
    ]
    """Get a file

    Returns the details of a file.
    """
    ListFiles: grpc.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.file_pb2.ListFilesRequest,
        artifact.artifact.v1alpha.file_pb2.ListFilesResponse,
    ]
    """List files

    Returns a paginated list of files.
    """
    UpdateFile: grpc.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.file_pb2.UpdateFileRequest,
        artifact.artifact.v1alpha.file_pb2.UpdateFileResponse,
    ]
    """Update a file

    Updates a file.
    """
    DeleteFile: grpc.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.file_pb2.DeleteFileRequest,
        artifact.artifact.v1alpha.file_pb2.DeleteFileResponse,
    ]
    """Delete a file

    Deletes a file.
    """
    GetChunk: grpc.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.chunk_pb2.GetChunkRequest,
        artifact.artifact.v1alpha.chunk_pb2.GetChunkResponse,
    ]
    """Get a chunk

    Returns the details of a chunk.
    """
    ListChunks: grpc.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.chunk_pb2.ListChunksRequest,
        artifact.artifact.v1alpha.chunk_pb2.ListChunksResponse,
    ]
    """List chunks

    Returns a paginated list of chunks.
    """
    UpdateChunk: grpc.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.chunk_pb2.UpdateChunkRequest,
        artifact.artifact.v1alpha.chunk_pb2.UpdateChunkResponse,
    ]
    """Update a chunk

    Updates a chunk.
    """
    SearchChunks: grpc.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.chunk_pb2.SearchChunksRequest,
        artifact.artifact.v1alpha.chunk_pb2.SearchChunksResponse,
    ]
    """Search chunks

    Returns the top-K most similar chunks to a text prompt.
    """
    ListCatalogRuns: grpc.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.artifact_pb2.ListCatalogRunsRequest,
        artifact.artifact.v1alpha.artifact_pb2.ListCatalogRunsResponse,
    ]
    """List Catalog Runs

    Returns a paginated list of catalog runs.
    """
    GetObjectUploadURL: grpc.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.object_pb2.GetObjectUploadURLRequest,
        artifact.artifact.v1alpha.object_pb2.GetObjectUploadURLResponse,
    ]
    """Get Object Upload URL

    Returns the upload URL of an object.
    """
    GetObjectDownloadURL: grpc.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.object_pb2.GetObjectDownloadURLRequest,
        artifact.artifact.v1alpha.object_pb2.GetObjectDownloadURLResponse,
    ]
    """Get Object Download URL

    Returns the download URL of an object.
    """

class ArtifactPublicServiceAsyncStub:
    """ArtifactPublicService exposes the public endpoints that allow clients to
    manage artifacts.
    """

    Liveness: grpc.aio.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.artifact_pb2.LivenessRequest,
        artifact.artifact.v1alpha.artifact_pb2.LivenessResponse,
    ]
    """Check if the artifact server is alive

    See https://github.com/grpc/grpc/blob/master/doc/health-checking.md.
    """
    Readiness: grpc.aio.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.artifact_pb2.ReadinessRequest,
        artifact.artifact.v1alpha.artifact_pb2.ReadinessResponse,
    ]
    """Check if the artifact server is ready

    See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
    """
    CreateCatalog: grpc.aio.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.catalog_pb2.CreateCatalogRequest,
        artifact.artifact.v1alpha.catalog_pb2.CreateCatalogResponse,
    ]
    """Create a catalog

    Creates a catalog.
    """
    GetCatalog: grpc.aio.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.catalog_pb2.GetCatalogRequest,
        artifact.artifact.v1alpha.catalog_pb2.GetCatalogResponse,
    ]
    """Get a catalog

    Returns the details of a catalog.
    """
    ListCatalogs: grpc.aio.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.catalog_pb2.ListCatalogsRequest,
        artifact.artifact.v1alpha.catalog_pb2.ListCatalogsResponse,
    ]
    """Get all catalogs info

    Returns a paginated list of catalogs.
    """
    UpdateCatalog: grpc.aio.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.catalog_pb2.UpdateCatalogRequest,
        artifact.artifact.v1alpha.catalog_pb2.UpdateCatalogResponse,
    ]
    """Update a catalog info

    Updates the information of a catalog.
    """
    DeleteCatalog: grpc.aio.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.catalog_pb2.DeleteCatalogRequest,
        artifact.artifact.v1alpha.catalog_pb2.DeleteCatalogResponse,
    ]
    """Delete a catalog

    Deletes a catalog.
    """
    CreateFile: grpc.aio.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.file_pb2.CreateFileRequest,
        artifact.artifact.v1alpha.file_pb2.CreateFileResponse,
    ]
    """Create a file

    Uploads and converts a file to a catalog.
    """
    GetFile: grpc.aio.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.file_pb2.GetFileRequest,
        artifact.artifact.v1alpha.file_pb2.GetFileResponse,
    ]
    """Get a file

    Returns the details of a file.
    """
    ListFiles: grpc.aio.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.file_pb2.ListFilesRequest,
        artifact.artifact.v1alpha.file_pb2.ListFilesResponse,
    ]
    """List files

    Returns a paginated list of files.
    """
    UpdateFile: grpc.aio.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.file_pb2.UpdateFileRequest,
        artifact.artifact.v1alpha.file_pb2.UpdateFileResponse,
    ]
    """Update a file

    Updates a file.
    """
    DeleteFile: grpc.aio.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.file_pb2.DeleteFileRequest,
        artifact.artifact.v1alpha.file_pb2.DeleteFileResponse,
    ]
    """Delete a file

    Deletes a file.
    """
    GetChunk: grpc.aio.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.chunk_pb2.GetChunkRequest,
        artifact.artifact.v1alpha.chunk_pb2.GetChunkResponse,
    ]
    """Get a chunk

    Returns the details of a chunk.
    """
    ListChunks: grpc.aio.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.chunk_pb2.ListChunksRequest,
        artifact.artifact.v1alpha.chunk_pb2.ListChunksResponse,
    ]
    """List chunks

    Returns a paginated list of chunks.
    """
    UpdateChunk: grpc.aio.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.chunk_pb2.UpdateChunkRequest,
        artifact.artifact.v1alpha.chunk_pb2.UpdateChunkResponse,
    ]
    """Update a chunk

    Updates a chunk.
    """
    SearchChunks: grpc.aio.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.chunk_pb2.SearchChunksRequest,
        artifact.artifact.v1alpha.chunk_pb2.SearchChunksResponse,
    ]
    """Search chunks

    Returns the top-K most similar chunks to a text prompt.
    """
    ListCatalogRuns: grpc.aio.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.artifact_pb2.ListCatalogRunsRequest,
        artifact.artifact.v1alpha.artifact_pb2.ListCatalogRunsResponse,
    ]
    """List Catalog Runs

    Returns a paginated list of catalog runs.
    """
    GetObjectUploadURL: grpc.aio.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.object_pb2.GetObjectUploadURLRequest,
        artifact.artifact.v1alpha.object_pb2.GetObjectUploadURLResponse,
    ]
    """Get Object Upload URL

    Returns the upload URL of an object.
    """
    GetObjectDownloadURL: grpc.aio.UnaryUnaryMultiCallable[
        artifact.artifact.v1alpha.object_pb2.GetObjectDownloadURLRequest,
        artifact.artifact.v1alpha.object_pb2.GetObjectDownloadURLResponse,
    ]
    """Get Object Download URL

    Returns the download URL of an object.
    """

class ArtifactPublicServiceServicer(metaclass=abc.ABCMeta):
    """ArtifactPublicService exposes the public endpoints that allow clients to
    manage artifacts.
    """

    @abc.abstractmethod
    def Liveness(
        self,
        request: artifact.artifact.v1alpha.artifact_pb2.LivenessRequest,
        context: _ServicerContext,
    ) -> typing.Union[artifact.artifact.v1alpha.artifact_pb2.LivenessResponse, collections.abc.Awaitable[artifact.artifact.v1alpha.artifact_pb2.LivenessResponse]]:
        """Check if the artifact server is alive

        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md.
        """
    @abc.abstractmethod
    def Readiness(
        self,
        request: artifact.artifact.v1alpha.artifact_pb2.ReadinessRequest,
        context: _ServicerContext,
    ) -> typing.Union[artifact.artifact.v1alpha.artifact_pb2.ReadinessResponse, collections.abc.Awaitable[artifact.artifact.v1alpha.artifact_pb2.ReadinessResponse]]:
        """Check if the artifact server is ready

        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
        """
    @abc.abstractmethod
    def CreateCatalog(
        self,
        request: artifact.artifact.v1alpha.catalog_pb2.CreateCatalogRequest,
        context: _ServicerContext,
    ) -> typing.Union[artifact.artifact.v1alpha.catalog_pb2.CreateCatalogResponse, collections.abc.Awaitable[artifact.artifact.v1alpha.catalog_pb2.CreateCatalogResponse]]:
        """Create a catalog

        Creates a catalog.
        """
    @abc.abstractmethod
    def GetCatalog(
        self,
        request: artifact.artifact.v1alpha.catalog_pb2.GetCatalogRequest,
        context: _ServicerContext,
    ) -> typing.Union[artifact.artifact.v1alpha.catalog_pb2.GetCatalogResponse, collections.abc.Awaitable[artifact.artifact.v1alpha.catalog_pb2.GetCatalogResponse]]:
        """Get a catalog

        Returns the details of a catalog.
        """
    @abc.abstractmethod
    def ListCatalogs(
        self,
        request: artifact.artifact.v1alpha.catalog_pb2.ListCatalogsRequest,
        context: _ServicerContext,
    ) -> typing.Union[artifact.artifact.v1alpha.catalog_pb2.ListCatalogsResponse, collections.abc.Awaitable[artifact.artifact.v1alpha.catalog_pb2.ListCatalogsResponse]]:
        """Get all catalogs info

        Returns a paginated list of catalogs.
        """
    @abc.abstractmethod
    def UpdateCatalog(
        self,
        request: artifact.artifact.v1alpha.catalog_pb2.UpdateCatalogRequest,
        context: _ServicerContext,
    ) -> typing.Union[artifact.artifact.v1alpha.catalog_pb2.UpdateCatalogResponse, collections.abc.Awaitable[artifact.artifact.v1alpha.catalog_pb2.UpdateCatalogResponse]]:
        """Update a catalog info

        Updates the information of a catalog.
        """
    @abc.abstractmethod
    def DeleteCatalog(
        self,
        request: artifact.artifact.v1alpha.catalog_pb2.DeleteCatalogRequest,
        context: _ServicerContext,
    ) -> typing.Union[artifact.artifact.v1alpha.catalog_pb2.DeleteCatalogResponse, collections.abc.Awaitable[artifact.artifact.v1alpha.catalog_pb2.DeleteCatalogResponse]]:
        """Delete a catalog

        Deletes a catalog.
        """
    @abc.abstractmethod
    def CreateFile(
        self,
        request: artifact.artifact.v1alpha.file_pb2.CreateFileRequest,
        context: _ServicerContext,
    ) -> typing.Union[artifact.artifact.v1alpha.file_pb2.CreateFileResponse, collections.abc.Awaitable[artifact.artifact.v1alpha.file_pb2.CreateFileResponse]]:
        """Create a file

        Uploads and converts a file to a catalog.
        """
    @abc.abstractmethod
    def GetFile(
        self,
        request: artifact.artifact.v1alpha.file_pb2.GetFileRequest,
        context: _ServicerContext,
    ) -> typing.Union[artifact.artifact.v1alpha.file_pb2.GetFileResponse, collections.abc.Awaitable[artifact.artifact.v1alpha.file_pb2.GetFileResponse]]:
        """Get a file

        Returns the details of a file.
        """
    @abc.abstractmethod
    def ListFiles(
        self,
        request: artifact.artifact.v1alpha.file_pb2.ListFilesRequest,
        context: _ServicerContext,
    ) -> typing.Union[artifact.artifact.v1alpha.file_pb2.ListFilesResponse, collections.abc.Awaitable[artifact.artifact.v1alpha.file_pb2.ListFilesResponse]]:
        """List files

        Returns a paginated list of files.
        """
    @abc.abstractmethod
    def UpdateFile(
        self,
        request: artifact.artifact.v1alpha.file_pb2.UpdateFileRequest,
        context: _ServicerContext,
    ) -> typing.Union[artifact.artifact.v1alpha.file_pb2.UpdateFileResponse, collections.abc.Awaitable[artifact.artifact.v1alpha.file_pb2.UpdateFileResponse]]:
        """Update a file

        Updates a file.
        """
    @abc.abstractmethod
    def DeleteFile(
        self,
        request: artifact.artifact.v1alpha.file_pb2.DeleteFileRequest,
        context: _ServicerContext,
    ) -> typing.Union[artifact.artifact.v1alpha.file_pb2.DeleteFileResponse, collections.abc.Awaitable[artifact.artifact.v1alpha.file_pb2.DeleteFileResponse]]:
        """Delete a file

        Deletes a file.
        """
    @abc.abstractmethod
    def GetChunk(
        self,
        request: artifact.artifact.v1alpha.chunk_pb2.GetChunkRequest,
        context: _ServicerContext,
    ) -> typing.Union[artifact.artifact.v1alpha.chunk_pb2.GetChunkResponse, collections.abc.Awaitable[artifact.artifact.v1alpha.chunk_pb2.GetChunkResponse]]:
        """Get a chunk

        Returns the details of a chunk.
        """
    @abc.abstractmethod
    def ListChunks(
        self,
        request: artifact.artifact.v1alpha.chunk_pb2.ListChunksRequest,
        context: _ServicerContext,
    ) -> typing.Union[artifact.artifact.v1alpha.chunk_pb2.ListChunksResponse, collections.abc.Awaitable[artifact.artifact.v1alpha.chunk_pb2.ListChunksResponse]]:
        """List chunks

        Returns a paginated list of chunks.
        """
    @abc.abstractmethod
    def UpdateChunk(
        self,
        request: artifact.artifact.v1alpha.chunk_pb2.UpdateChunkRequest,
        context: _ServicerContext,
    ) -> typing.Union[artifact.artifact.v1alpha.chunk_pb2.UpdateChunkResponse, collections.abc.Awaitable[artifact.artifact.v1alpha.chunk_pb2.UpdateChunkResponse]]:
        """Update a chunk

        Updates a chunk.
        """
    @abc.abstractmethod
    def SearchChunks(
        self,
        request: artifact.artifact.v1alpha.chunk_pb2.SearchChunksRequest,
        context: _ServicerContext,
    ) -> typing.Union[artifact.artifact.v1alpha.chunk_pb2.SearchChunksResponse, collections.abc.Awaitable[artifact.artifact.v1alpha.chunk_pb2.SearchChunksResponse]]:
        """Search chunks

        Returns the top-K most similar chunks to a text prompt.
        """
    @abc.abstractmethod
    def ListCatalogRuns(
        self,
        request: artifact.artifact.v1alpha.artifact_pb2.ListCatalogRunsRequest,
        context: _ServicerContext,
    ) -> typing.Union[artifact.artifact.v1alpha.artifact_pb2.ListCatalogRunsResponse, collections.abc.Awaitable[artifact.artifact.v1alpha.artifact_pb2.ListCatalogRunsResponse]]:
        """List Catalog Runs

        Returns a paginated list of catalog runs.
        """
    @abc.abstractmethod
    def GetObjectUploadURL(
        self,
        request: artifact.artifact.v1alpha.object_pb2.GetObjectUploadURLRequest,
        context: _ServicerContext,
    ) -> typing.Union[artifact.artifact.v1alpha.object_pb2.GetObjectUploadURLResponse, collections.abc.Awaitable[artifact.artifact.v1alpha.object_pb2.GetObjectUploadURLResponse]]:
        """Get Object Upload URL

        Returns the upload URL of an object.
        """
    @abc.abstractmethod
    def GetObjectDownloadURL(
        self,
        request: artifact.artifact.v1alpha.object_pb2.GetObjectDownloadURLRequest,
        context: _ServicerContext,
    ) -> typing.Union[artifact.artifact.v1alpha.object_pb2.GetObjectDownloadURLResponse, collections.abc.Awaitable[artifact.artifact.v1alpha.object_pb2.GetObjectDownloadURLResponse]]:
        """Get Object Download URL

        Returns the download URL of an object.
        """

def add_ArtifactPublicServiceServicer_to_server(servicer: ArtifactPublicServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
